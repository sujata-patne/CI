//var site_base_path = '';
var site_base_path = 'http://dailymagic.in';
function Datewithouttime(val) {
    var d = new Date(val);
    var dt = d.getDate();
    var month = d.getMonth() + 1;
    var year = d.getFullYear();
    var selectdate = year + '-' + Pad("0", month, 2) + '-' + Pad("0", dt, 2);
    return new Date(selectdate);
}
function Pad(padString, value, length) {
    var str = value.toString();
    while (str.length < length)
        str = padString + str;

    return str;
}
myApp.controller('dashboardCtrl', function ($scope, $http, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');

    $('#dashboard').addClass('active');

    var Json = {
        ContentStatus: [{ 'id': 1, 'name': 'Content file upload pending', 'Count': 1450 },
        { 'id': 2, 'name': 'In Process', 'Count': 250 },
        { 'id': 3, 'name': 'Ready to Moderate', 'Count': 280 },
        { 'id': 4, 'name': 'Published', 'Count': 12890 },
        { 'id': 5, 'name': 'Rejected', 'Count': 780 },
        { 'id': 6, 'name': 'Inactive', 'Count': 230 },
        { 'id': 7, 'name': 'Deleted', 'Count': 120 }],
        PublishedContentList: [{ 'id': 1, 'VendorType': 'Vendor 1', 'Wallpaper': 250, 'FullSong': 450, 'Videos': 125, 'GamesApps': 85, 'Total': 0 },
        { 'id': 2, 'VendorType': 'Vendor 2', 'Wallpaper': 850, 'FullSong': 380, 'Videos': 210, 'GamesApps': 22, 'Total': 0 },
        { 'id': 3, 'VendorType': 'Vendor 3', 'Wallpaper': 1570, 'FullSong': 1400, 'Videos': 52, 'GamesApps': 106, 'Total': 0 },
        { 'id': 4, 'VendorType': 'Vendor 4', 'Wallpaper': 1200, 'FullSong': 570, 'Videos': 388, 'GamesApps': 47, 'Total': 0 },
        { 'id': 5, 'VendorType': 'Vendor 5', 'Wallpaper': 1700, 'FullSong': 220, 'Videos': 890, 'GamesApps': 60, 'Total': 0 },
        { 'id': 6, 'VendorType': 'Vendor 6', 'Wallpaper': 820, 'FullSong': 580, 'Videos': 835, 'GamesApps': 71, 'Total': 0 }]
    }

    $scope.ContentStatus = Json.ContentStatus;
    $scope.PublishedContentList = Json.PublishedContentList;
    $scope.TotalUpload = 0;
    $scope.WallpaperTotal = 0;
    $scope.FullSongTotal = 0;
    $scope.VideosTotal = 0;
    $scope.GamesAppsTotal = 0;
    $scope.GrandTotal = 0;
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.FilesStatus = [];
    $scope.FileNames = [];
    $scope.Vendors = [];
    $scope.StatusFiles = [];
    $scope.VendorFiles = [];
    $scope.TotalUpload = 0;
    $scope.FileGridData = [];
    $scope.VendorGridData = [];

    function GetStatusFiles(filestatus, files) {
        var NewArray = [];
        var ChartArray = [];
        var total = 0;
        for (var i in filestatus) {
            var DataArray = []
            var data = { count: 0 };
            for (var j in files) {
                if (filestatus[i].cd_id == files[j].cm_state) {
                    data = files[j];
                }
            }
            total = total + data.count;
            NewArray.push({ cd_id: filestatus[i].cd_id, cd_name: filestatus[i].cd_name, count: data.count, Url: '#content-catalog-search/' + filestatus[i].cd_id + '/0/0' })
            DataArray.push(filestatus[i].cd_name);
            DataArray.push(data.count);
            ChartArray.push(DataArray);
        }
        $scope.TotalUpload = total;
        var chartdata = { type: 'pie', name: 'Content Status', data: ChartArray };
        var Finaldata = { chartdata: chartdata, FileGridData: NewArray };
        return Finaldata;
    }

    function GetVendorFiles(VendorFiles, Vendors) {
        var VendorData = [];
        var TotalWallpapercount = 0;
        var TotalAudiocount = 0;
        var TotalVideocount = 0;
        var TotalGamescount = 0;
        var Totalcount = 0;

        for (var i in Vendors) {
            var totalcount = 0;
            var data = { vd_id: Vendors[i].vd_id, vd_name: Vendors[i].vd_name, WallpaperId: 8, Wallpapercount: 0, WallpaperUrl: '#content-catalog-search/4/' + Vendors[i].vd_id + '/8', AudioId: 10, Audiocount: 0, AudioUrl: '#content-catalog-search/4/' + Vendors[i].vd_id + '/10', VideoId: 9, Videocount: 0, VideoUrl: '#content-catalog-search/4/' + Vendors[i].vd_id + '/9', GamesId: 11, Gamescount: 0, GamesUrl: '#content-catalog-search/4/' + Vendors[i].vd_id + '/11', Totalcount: 0, TotalUrl: '#content-catalog-search/4/' + Vendors[i].vd_id + '/0' };
            for (var j in VendorFiles) {
                if (VendorFiles[j].cm_vendor == Vendors[i].vd_id && VendorFiles[j].cm_content_type == 8) {
                    data.Wallpapercount = VendorFiles[j].count;
                    TotalWallpapercount += VendorFiles[j].count;
                    totalcount += VendorFiles[j].count;
                }
                else if (VendorFiles[j].cm_vendor == Vendors[i].vd_id && VendorFiles[j].cm_content_type == 9) {
                    data.Videocount = VendorFiles[j].count;
                    TotalVideocount += VendorFiles[j].count;
                    totalcount += VendorFiles[j].count;
                }
                else if (VendorFiles[j].cm_vendor == Vendors[i].vd_id && VendorFiles[j].cm_content_type == 10) {
                    data.Audiocount = VendorFiles[j].count;
                    TotalAudiocount += VendorFiles[j].count;
                    totalcount += VendorFiles[j].count;
                }
                else if (VendorFiles[j].cm_vendor == Vendors[i].vd_id && VendorFiles[j].cm_content_type == 11) {
                    data.Gamescount = VendorFiles[j].count;
                    TotalGamescount += VendorFiles[j].count;
                    totalcount += VendorFiles[j].count;
                }
            }
            Totalcount += totalcount;
            data.Totalcount = totalcount;
            VendorData.push(data);
        }
        var data = { vd_id: 0, vd_name: "Total", WallpaperId: 8, Wallpapercount: TotalWallpapercount, WallpaperUrl: '#content-catalog-search/4/0/8', AudioId: 10, Audiocount: TotalAudiocount, AudioUrl: '#content-catalog-search/4/0/10', VideoId: 9, Videocount: TotalVideocount, VideoUrl: '#content-catalog-search/4/0/9', GamesId: 11, Gamescount: TotalGamescount, GamesUrl: '#content-catalog-search/4/0/11', Totalcount: Totalcount, TotalUrl: '#content-catalog-search/4/0/0' };
        VendorData.push(data);
        return VendorData;
    }

    function MakeFileStatusList(StatusList, Vendors, Metadata) {
        //for (var i in StatusList) {
        //    var count = 0;
        var state1 = 0;
        var state2 = 0;
        var state3 = 0;
        var state4 = 0;
        var state5 = 0;
        var state6 = 0;
        var state7 = 0;
        for (var j in Metadata) {
            if (Metadata[j].cm_state == 5 || Metadata[j].cm_state == 7 || Metadata[j].cm_state == 6) {
            }
            else {
                for (var k in Vendors) {
                    if (Vendors[k].vd_id == Metadata[j].cm_vendor) {
                        if (Vendors[k].vd_is_active == 1) {
                            if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                                Metadata[j].cm_state = 6;
                            }
                        }
                        else {
                            Metadata[j].cm_state = 6;
                        }
                    }
                }
            }
            if (Metadata[j].cm_state == 1) {
                state1++;
            }
            else if (Metadata[j].cm_state == 2) {
                state2++;
            }
            else if (Metadata[j].cm_state == 3) {
                state3++;
            }
            else if (Metadata[j].cm_state == 4) {
                state4++;
            }
            else if (Metadata[j].cm_state == 5) {
                state5++;
            }
            else if (Metadata[j].cm_state == 6) {
                state6++;
            }
            else {
                state7++;
            }
        }
        var NewArray = [];
        NewArray.push({ cm_state: 1, count: state1 });
        NewArray.push({ cm_state: 2, count: state2 });
        NewArray.push({ cm_state: 3, count: state3 });
        NewArray.push({ cm_state: 4, count: state4 });
        NewArray.push({ cm_state: 5, count: state5 });
        NewArray.push({ cm_state: 6, count: state6 });
        NewArray.push({ cm_state: 7, count: state7 });


        return NewArray;
        //}
    }

    function MakeVendorStatusList(ContentType, Vendors, Metadata) {
        //for (var i in StatusList) {
        //    var count = 0;

        for (var j in Metadata) {
            if (Metadata[j].cm_state == 5 || Metadata[j].cm_state == 7 || Metadata[j].cm_state == 6) {
            }
            else {
                for (var k in Vendors) {
                    if (Vendors[k].vd_id == Metadata[j].cm_vendor) {
                        if (Vendors[k].vd_is_active == 1) {
                            if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                                Metadata[j].cm_state = 6;
                            }
                        }
                        else {
                            Metadata[j].cm_state = 6;
                        }
                    }
                }
            }
        }


        var DataArray = [];
        for (var i in Vendors) {
            var NewArray = [{ Id: Vendors[i].vd_id, Name: Vendors[i].vd_name, Count: 0, IsFirstRow: 1, Url: '' }];
            var cnt = 0;
            for (var j in ContentType) {
                var count = 0;
                for (var k in Metadata) {
                    if (Metadata[k].cm_vendor == Vendors[i].vd_id && Metadata[k].cm_content_type == ContentType[j].cd_id && Metadata[k].cm_state == 4) {
                        count++;
                        cnt++;
                    }
                }
                NewArray.push({ Name: ContentType[j].cd_name, IsFirstRow: 0, Count: count, Url: '#content-catalog-search/4/' + Vendors[i].vd_id + '/' + ContentType[j].cd_id });
            }
            NewArray.push({ Name: Vendors[i].vd_name, IsFirstRow: 0, Count: cnt, Url: '#content-catalog-search/4/' + Vendors[i].vd_id + '/' + 0 });
            DataArray.push({ Data: NewArray });
        }

        var NewArray = [{ Id: 0, Name: "Total", Count: 0, IsFirstRow: 1, Url: '' }];
        var cnt = 0;
        for (var j in ContentType) {
            var count = 0;
            for (var k in Metadata) {
                if (Metadata[k].cm_content_type == ContentType[j].cd_id && Metadata[k].cm_state == 4) {
                    count++;
                    cnt++;
                }
            }
            NewArray.push({ Name: ContentType[j].cd_name, IsFirstRow: 0, Count: count, Url: '#content-catalog-search/4/' + 0 + '/' + ContentType[j].cd_id });
        }
        NewArray.push({ Name: 'Total', IsFirstRow: 0, Count: cnt, Url: '#content-catalog-search/4/' + 0 + '/' + 0 });
        DataArray.push({ Data: NewArray });

        //console.log(DataArray);
        return DataArray;
        //}
    }

    var get_request = $http({
        method: "Get",
        url: 'dashboard/GetDashBoardData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        //console.log(datas);

        for (var i in datas.FileStatus) {
            if (datas.FileStatus[i].cd_cm_id == 1) {
                $scope.FilesStatus.push(datas.FileStatus[i]);
            }
            else if (datas.FileStatus[i].cd_cm_id == 2) {
                $scope.FileNames.push(datas.FileStatus[i]);
            }
        }
        $scope.Vendors = datas.Vendors;
        $scope.StatusFiles = MakeFileStatusList($scope.FilesStatus, $scope.Vendors, datas.VendorFiles);
        $scope.VendorGridData = MakeVendorStatusList($scope.FileNames, $scope.Vendors, datas.VendorFiles);
        //$scope.StatusFiles = datas.StatusFiles;
        //$scope.VendorFiles = datas.VendorFiles;
        var data = GetStatusFiles($scope.FilesStatus, $scope.StatusFiles);
        $scope.FileGridData = data.FileGridData;
        HighchartBind(data.chartdata);
        //$scope.VendorGridData = GetVendorFiles($scope.VendorFiles, $scope.Vendors);




    });
    get_request.error(function (datas, status, headers, config) {
        //console.log(datas);
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    for (var i in $scope.ContentStatus) {
        $scope.TotalUpload = ($scope.TotalUpload + $scope.ContentStatus[i].Count);
    }

    for (var i in $scope.PublishedContentList) {
        $scope.PublishedContentList[i].Total = $scope.PublishedContentList[i].Wallpaper + $scope.PublishedContentList[i].FullSong + $scope.PublishedContentList[i].Videos + $scope.PublishedContentList[i].GamesApps;
        $scope.WallpaperTotal = ($scope.WallpaperTotal + $scope.PublishedContentList[i].Wallpaper);
        $scope.FullSongTotal = ($scope.FullSongTotal + $scope.PublishedContentList[i].FullSong);
        $scope.VideosTotal = ($scope.VideosTotal + $scope.PublishedContentList[i].Videos);
        $scope.GamesAppsTotal = ($scope.GamesAppsTotal + $scope.PublishedContentList[i].GamesApps);
        $scope.GrandTotal = ($scope.GrandTotal + $scope.PublishedContentList[i].Total);
    }

    // HighchartBind();

    $scope.MailSender = function () {
        var get_request = $http({
            method: "Get",
            url: 'dailyactivity/GetDailyMail',
            headers: { 'Content-Type': 'application/json' }
        });
        get_request.success(function (datas) {
            console.log(datas);
        });
        get_request.error(function (datas, status, headers, config) {
            console.log(datas);
            if (datas != undefined) {
                $scope.errorvisible = true;
                $scope.error = datas.substring(1, datas.length - 1);
            }
        });
    }

});

function HighchartBind(data) {
    // Build the chart
    $('#high-charts').highcharts({
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false
        },
        title: {
            text: ''
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: false
                },
                showInLegend: true
            }
        },
        credits: {
            enabled: false
        },
        series: [data]
    });
}

myApp.controller('add-editCtrl', function ($scope, $http, ngProgress, Excel, $timeout) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addedituser').addClass('active');

    $scope.Permission = true;
    $scope.IsDisable = true;
    $scope.Vendor = [];
    $scope.Users = [];
    $scope.UserRole = [];
    $scope.SelectedUserRole = 0;
    $scope.UserList = [];
    $scope.successvisible = false;

    $scope.usercurrentPage = 0;
    $scope.userpageSize = 50;

    $scope.errorvisible = false;
    $scope.error;
    $scope.success = "";
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    function GetVendors(UserId, Vendors) {
        var str = "";
        var vendors = [];
        for (var i in Vendors) {
            if (Vendors[i].uv_ld_id == UserId) {
                str += Vendors[i].vd_name + " ,";
                vendors.push(Vendors[i].vd_name)
            }
        }
        if (str != "") {
            str = str.substring(0, str.length - 1);
        }
        return str;
    }
    function GetUsers(UserData, UserVendors) {

        var Users = [];
        for (var i in UserData) {
            Users.push({ ld_active: UserData[i].ld_active, ld_display_name: UserData[i].ld_display_name, ld_email_id: UserData[i].ld_email_id, ld_id: UserData[i].ld_id, ld_mobile_no: UserData[i].ld_mobile_no, ld_role: UserData[i].ld_role, ld_user_name: UserData[i].ld_user_name, Vendors: GetVendors(UserData[i].ld_id, UserVendors).toString() });
        }
        return Users;
    }

    var get_request = $http({
        method: "Get",
        url: 'addeditusers/GetUserData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        if (datas.RoleUser === "Super Admin") {
            $scope.UserRole = angular.copy(datas.UserRole);
            $scope.Vendor = angular.copy(datas.VendorData);
            $scope.Users = angular.copy(datas.UserData);
            $scope.UserVendors = angular.copy(datas.UserVendors);
            $scope.UserList = GetUsers($scope.Users, $scope.UserVendors);
        }
        else {
            location.href = "/";
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.editable = false;


    $scope.FullName = "";
    $scope.UserName = "";
    $scope.EmailId = "";
    $scope.MobileNo = "";
    $scope.SelectedVendorList = [];
    $scope.Id = "";

    $scope.NameValidation = false;
    $scope.UserNameValidation = false;
    $scope.EmailValidation = false;
    $scope.MobileValidation = false;
    $scope.RoleValidationVisible = false;
    $scope.VendorValidation = false;

    if ($scope.Permission == true) {
        $scope.IsDisable = false;
    }
    else {
        $scope.IsDisable = true;
    }

    $scope.BlockUser = function (userid) {
        if (confirm("Are you want to sure block this User?")) {
            ngProgress.start();
            var post_request = $http({
                method: "Post",
                url: 'addeditusers/BlockUser',
                data: { ld_Id: userid },
                headers: { 'Content-Type': 'application/json' }
            });
            post_request.success(function (data) {
                if (data.Result == "BlockUser") {
                    for (var i in $scope.UserList) {
                        if ($scope.UserList[i].ld_id == userid) {
                            $scope.UserList[i].ld_active = 0;
                        }
                    }
                }
                ngProgress.complete();
            });
            post_request.error(function (data, status, headers, config) {
                if (data != undefined) {
                    $scope.errorvisible = true;
                    $scope.error = data.substring(1, data.length - 1);
                    ngProgress.complete();
                }
            });
        }
    }

    $scope.UnBlockUser = function (userid) {
        if (confirm("Are you want to sure Unblock this User?")) {
            ngProgress.start();
            var post_request = $http({
                method: "Post",
                url: 'addeditusers/UnBlockUser',
                data: { ld_Id: userid },
                headers: { 'Content-Type': 'application/json' }
            });
            post_request.success(function (data) {
                if (data.Result == "UnBlockUser") {
                    for (var i in $scope.UserList) {
                        if ($scope.UserList[i].ld_id == userid) {
                            $scope.UserList[i].ld_active = 1;
                        }
                    }
                }
                ngProgress.complete();
            });
            post_request.error(function (data, status, headers, config) {
                if (data != undefined) {
                    $scope.errorvisible = true;
                    $scope.error = data.substring(1, data.length - 1);
                    ngProgress.complete();
                }
            });
        }
    }


    $scope.exportUserData = function (tableId) {
        /*var exportHref = Excel.tableToExcel(tableId, 'UserData');
        $timeout(function () { location.href = exportHref; }, 100);*/
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportUserExcel',
            data: { UserList: $scope.UserList },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'

        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'userList.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
                $scope.error = data;
            }
        });
    }

    $scope.SaveUserDetails = function () {
        $scope.NameValidation = false;
        $scope.UserNameValidation = false;
        $scope.EmailValidation = false;
        $scope.MobileValidation = false;
        $scope.RoleValidationVisible = false;
        $scope.VendorValidation = false;
        $scope.errorvisible = false;
        $scope.error = "";

        if ($scope.Permission == true) {
            if ($scope.FullName != "") {
                if ($scope.UserName != "") {
                    if ($scope.EmailId != "" && validateEmail($scope.EmailId)) {
                        if (!isNaN($scope.MobileNo) && $scope.MobileNo != "" && $scope.MobileNo.length == 10) {
                            if ($scope.SelectedUserRole != 0) {
                                //if ($scope.SelectedVendorList.length > 0) {
                                ngProgress.start();
                                var datas = {
                                    FullName: $scope.FullName,
                                    UserName: $scope.UserName,
                                    EmailId: $scope.EmailId,
                                    MobileNo: $scope.MobileNo,
                                    Role: $scope.SelectedUserRole,
                                    Vendors: $scope.SelectedVendorList
                                }
                                var post_request = $http({
                                    method: "Post",
                                    url: 'addeditusers/AddEditUsers',
                                    data: datas,
                                    headers: { 'Content-Type': 'application/json' }
                                });
                                post_request.success(function (data) {
                                    if (data.Result == "AddEditUsers") {
                                        $scope.Users.push(data.UserData);
                                        for (var j in data.UserVendors) {
                                            $scope.UserVendors.push(data.UserVendors[j]);
                                        }
                                        $scope.UserList = GetUsers($scope.Users, $scope.UserVendors);
                                        $scope.FullName = "";
                                        $scope.UserName = "";
                                        $scope.EmailId = "";
                                        $scope.MobileNo = "";
                                        $scope.SelectedVendorList = [];
                                        $scope.SelectedUserRole = 0;
                                        $scope.successvisible = true;
                                        $scope.success = "Record inserted successfully. Temprory Password sent to register email.";
                                    }
                                    if (data.Result == "EmailIdError") {
                                        $scope.errorvisible = true;
                                        $scope.error = "Email Already Available.";
                                    }
                                    if (data.Result == "UserNameError") {
                                        $scope.errorvisible = true;
                                        $scope.error = "UserName  Already Available.";
                                    }
                                    if (data.Result == "MobileNoError") {
                                        $scope.errorvisible = true;
                                        $scope.error = "MobileNo Already Available.";
                                    }
                                    ngProgress.complete();
                                });
                                post_request.error(function (data, status, headers, config) {
                                    if (data != undefined) {
                                        $scope.errorvisible = true;
                                        $scope.error = data.substring(1, data.length - 1);
                                        ngProgress.complete();
                                    }
                                });
                                //}
                                //else {
                                //    $scope.VendorValidation = true;
                                //}
                            }
                            else {
                                $scope.RoleValidationVisible = true;
                            }
                        }
                        else {
                            $scope.MobileValidation = true;
                        }
                    }
                    else {
                        $scope.EmailValidation = true;
                    }
                }
                else {
                    $scope.UserNameValidation = true;
                }
            }
            else {
                $scope.NameValidation = true;
            }
        }
        else {
            $scope.IsDisable = true;
        }

    }

    $scope.exportData = function () {
        var blob = new Blob([document.getElementById('vandor-exportable').innerHTML], {
            type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8"
        });
        saveAs(blob, "Report.xls");
    };
});

myApp.controller('edit-userCtrl', function ($scope, $http, $routeParams, ngProgress, $window) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addedituser').addClass('active');

    $scope.BackToList = function () {
        $window.location.href = "#add-edit";
    }


    $scope.Vendor = [];
    $scope.UserRole = [];
    $scope.SelectedUserRole = "";
    $scope.UserList = [];
    $scope.successvisible = false;
    $scope.SelectedVendorList = [];
    $scope.OldVendors = [];
    $scope.errorvisible = false;
    $scope.error;
    $scope.success = "";
    function GetDeleteVendors(Oldvendors, SelectedVendors) {
        var DeleteArray = [];
        for (var i in Oldvendors) {
            var flag = true;
            for (var j in SelectedVendors) {
                if (Oldvendors[i].uv_vd_id == SelectedVendors[j]) {
                    flag = false;
                }
            }
            if (flag) {
                DeleteArray.push(Oldvendors[i].uv_vd_id);
            }
        }
        return DeleteArray;
    }
    function GetAddVendors(Oldvendors, SelectedVendors) {
        var AddArray = [];
        for (var j in SelectedVendors) {
            var flag = true;
            for (var i in Oldvendors) {
                if (Oldvendors[i].uv_vd_id == SelectedVendors[j]) {
                    flag = false;
                }
            }
            if (flag) {
                AddArray.push(SelectedVendors[j]);
            }
        }
        return AddArray;
    }

    var get_request = $http({
        method: "post",
        data: { ld_id: $routeParams.id },
        url: 'addeditusers/GetEditUserData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        if (datas.RoleUser === "Super Admin") {
            $scope.UserRole = angular.copy(datas.UserRole);
            $scope.Vendor = angular.copy(datas.VendorData);
            $scope.UserList = angular.copy(datas.UserData);
            $scope.UserVendors = angular.copy(datas.UserVendors);
            $scope.OldVendors = angular.copy(datas.UserVendors);
            for (var i in $scope.UserList) {
                $scope.FullName = $scope.UserList[i].ld_display_name;
                $scope.UserName = $scope.UserList[i].ld_user_name;
                $scope.EmailId = $scope.UserList[i].ld_email_id;
                $scope.MobileNo = $scope.UserList[i].ld_mobile_no;
                $scope.SelectedUserRole = $scope.UserList[i].ld_role;
                $scope.Id = $scope.UserList[i].ld_id;
            }
            for (var j in $scope.UserVendors) {
                $scope.SelectedVendorList.push($scope.UserVendors[j].uv_vd_id);
            }
        }
        else {
            location.href = "/";
        }

    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });


    //$scope.userlist = json.User;
    //$scope.roles = json.role;
    //$scope.vandors = json.vandor;
    $scope.editable = false;
    //$scope.userrole = 0;


    $scope.FullName = "";
    $scope.UserName = "";
    $scope.EmailId = "";
    $scope.MobileNo = "";
    $scope.SelectedVendorList = [];
    $scope.Id = "";

    $scope.NameValidation = false;
    $scope.UserNameValidation = false;
    $scope.EmailValidation = false;
    $scope.MobileValidation = false;
    $scope.RoleValidationVisible = false;
    $scope.VendorValidation = false;


    $scope.SaveUserDetails = function () {
        $scope.NameValidation = false;
        $scope.UserNameValidation = false;
        $scope.EmailValidation = false;
        $scope.MobileValidation = false;
        $scope.RoleValidationVisible = false;
        $scope.VendorValidation = false;

        $scope.errorvisible = false;
        $scope.error = "";

        if ($scope.FullName != "") {
            if ($scope.UserName != "") {
                if ($scope.EmailId != "" && validateEmail($scope.EmailId)) {
                    if (!isNaN($scope.MobileNo) && $scope.MobileNo != "" && $scope.MobileNo.toString().length == 10) {
                        if ($scope.SelectedUserRole != 0) {
                            //  if ($scope.SelectedVendorList.length > 0) {
                            //$scope.UserList.push({
                            //    FullName: $scope.FullName,
                            //    UserName: $scope.UserName,
                            //    EmailId: $scope.EmailId,
                            //    MobileNo: $scope.MobileNo,
                            //     Role: $scope.SelectedUserRole,
                            //    Vendor: $scope.SelectedVendorList
                            //});
                            // ngProgress.start();
                            var datas = {
                                ld_Id: $routeParams.id,
                                FullName: $scope.FullName,
                                UserName: $scope.UserName,
                                EmailId: $scope.EmailId,
                                MobileNo: $scope.MobileNo,
                                Role: $scope.SelectedUserRole,
                                AddVendor: GetAddVendors($scope.OldVendors, $scope.SelectedVendorList),
                                DeleteVendor: GetDeleteVendors($scope.OldVendors, $scope.SelectedVendorList)
                            }

                            var post_request = $http({
                                method: "Post",
                                url: 'addeditusers/UpdateUsers',
                                data: datas,
                                headers: { 'Content-Type': 'application/json' }
                            });
                            post_request.success(function (data) {
                                if (data.Result == "UsersUpdated") {
                                    $scope.successvisible = true;
                                    $window.location.href = "#add-edit";
                                    $scope.success = "Record Updated successfully.";
                                }
                                if (data.Result == "EmailIdError") {
                                    $scope.errorvisible = true;
                                    $scope.error = "Email Already Available.";
                                }
                                if (data.Result == "UserNameError") {
                                    $scope.errorvisible = true;
                                    $scope.error = "UserName  Already Available.";
                                }
                                if (data.Result == "MobileNoError") {
                                    $scope.errorvisible = true;
                                    $scope.error = "MobileNo Already Available.";
                                }
                                ngProgress.complete();
                            });
                            post_request.error(function (data, status, headers, config) {
                                if (data != undefined) {
                                    $scope.errorvisible = true;
                                    $scope.error = data.substring(1, data.length - 1);
                                    ngProgress.complete();
                                }
                            });

                            //}
                            //else {
                            //    $scope.VendorValidation = true;
                            //}
                        }
                        else {
                            $scope.RoleValidationVisible = true;
                        }
                    }
                    else {
                        $scope.MobileValidation = true;
                    }
                }
                else {
                    $scope.EmailValidation = true;
                }
            }
            else {
                $scope.UserNameValidation = true;
            }
        }
        else {
            $scope.NameValidation = true;
        }

    }
});

myApp.controller('add-vendorCtrl', function ($scope, $http, ngProgress, $window) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addvendor').addClass('active');
    $('#managevendor').addClass('active');

    //ReadOnly Permission Code..
    $scope.ReadOnlyPrmission = false;
    $scope.hidebtn = false;

    if ($scope.ReadOnlyPrmission == true) {
        $scope.hidebtn = true;
    }

    $scope.BackToList = function () {
        $window.location.href = "#vendor-list";
    }

    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.AllowedContentType = [];
    $scope.CountryDistributionRights = [];
    $scope.ChannelDistributionRights = [];

    $scope.successvisible = false;
    $scope.UniqueVendorName = false;
    $scope.errorvisible = false;
    $scope.error;
    $scope.success = "";
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    var get_request = $http({
        method: "Get",
        url: 'addvendor/GetRightsData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        if (datas.UserRole === "Moderator") {
            Rightsdata = angular.copy(datas.RightsData);
            for (var i in Rightsdata) {
                if (Rightsdata[i].cd_cm_id == 2) {
                    $scope.AllowedContentType.push(Rightsdata[i]);
                }
                if (Rightsdata[i].cd_cm_id == 3) {
                    $scope.CountryDistributionRights.push(Rightsdata[i]);
                }
                if (Rightsdata[i].cd_cm_id == 4) {
                    $scope.ChannelDistributionRights.push(Rightsdata[i]);
                }
            }
        }
        else {
            location.href = "/";
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.SelectedAllowedContentType = [];
    $scope.SelectedCountryDistributionRights = [];
    $scope.SelectedChannelDistributionRights = [];
    $scope.Title = "";
    $scope.ShortDescription = "";
    $scope.PersonName = "";
    $scope.PersonEmail = "";
    $scope.PersonMobileNo = "";
    $scope.StartDate = getDate(new Date());
    $scope.ExpiryDate = "";
    $scope.Checked = '1';
    $scope.IsDisable = false;
    $scope.AllowToChange = "";

    $scope.TitleValidation = false;
    $scope.NameValidation = false;
    $scope.EmailValidation = false;
    $scope.MobileValidation = false;
    $scope.GreterExpireDateValidation = false;
    $scope.AllowedContentValidation = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;


    $scope.SaveVendor = function () {
        $scope.TitleValidation = false;
        $scope.NameValidation = false;
        $scope.EmailValidation = false;
        $scope.MobileValidation = false;
        $scope.GreterExpireDateValidation = false;
        $scope.AllowedContentValidation = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;
        $scope.UniqueVendorName = false;
        if ($scope.Title != "") {
            if ($scope.PersonName != "") {
                if ($scope.PersonEmail != "" && validateEmail($scope.PersonEmail)) {
                    if ($scope.PersonMobileNo != "" && !isNaN($scope.PersonMobileNo) && parseInt($scope.PersonMobileNo).toString().length == 10) {
                        if (new Date($scope.StartDate) <= new Date($scope.ExpiryDate)) {
                            if ($scope.SelectedAllowedContentType.length > 0) {
                                if ($scope.SelectedCountryDistributionRights.length > 0) {
                                    if ($scope.SelectedChannelDistributionRights.length > 0) {
                                        var rights = [];
                                        for (var i in $scope.SelectedAllowedContentType) {
                                            for (var j in $scope.SelectedCountryDistributionRights) {
                                                for (var k in $scope.SelectedChannelDistributionRights) {
                                                    rights.push({ AllowedContentType: $scope.SelectedAllowedContentType[i], CountryDistributionRights: $scope.SelectedCountryDistributionRights[j], ChannelDistributionRights: $scope.SelectedChannelDistributionRights[k] });
                                                }
                                            }
                                        }

                                        var datas = {
                                            "vd_Title": $scope.Title,
                                            "vd_Description": $scope.ShortDescription,
                                            "vd_PersonName": $scope.PersonName,
                                            "vd_PersonEmail": $scope.PersonEmail,
                                            "vd_PersonMobileNo": $scope.PersonMobileNo,
                                            "Rights": rights,
                                            "vd_AllowChange": $scope.Checked,
                                            "vd_StartDate": getDate($scope.StartDate),
                                            "vd_ExpiryDate": getDate($scope.ExpiryDate)
                                        }
                                        ////Start with DB.
                                        ngProgress.start();
                                        var post_request = $http({
                                            method: "Post",
                                            url: 'addvendor/AddVendor',
                                            data: datas,
                                            headers: { 'Content-Type': 'application/json' }
                                        });
                                        post_request.success(function (data) {
                                            ngProgress.complete();
                                            if (data.Result == "Success") {
                                                $scope.SelectedAllowedContentType = [];
                                                $scope.SelectedCountryDistributionRights = [];
                                                $scope.SelectedChannelDistributionRights = [];
                                                $scope.Title = "";
                                                $scope.ShortDescription = "";
                                                $scope.PersonName = "";
                                                $scope.PersonEmail = "";
                                                $scope.PersonMobileNo = "";
                                                $scope.StartDate = getDate(new Date());
                                                $scope.ExpiryDate = "";
                                                $scope.Checked = '1';
                                                $scope.successvisible = true;
                                                $scope.success = "Record Inserted successfully.";
                                                $window.location.href = "#vendor-list";
                                            }
                                            if (data.Result == "VenodrNameError") {
                                                $scope.errorvisible = true;
                                                $scope.error = " Vendor Name  already available.";
                                            }
                                        });
                                        post_request.error(function (data, status, headers, config) {
                                            if (data != undefined) {
                                                $scope.errorvisible = true;
                                                $scope.error = data.substring(1, data.length - 1);
                                            }
                                            ngProgress.complete();

                                        });
                                    }
                                    else {
                                        $scope.ChannelRightsValidation = true;
                                    }
                                }
                                else {
                                    $scope.CountryRightsValidation = true;
                                }
                            }
                            else {
                                $scope.AllowedContentValidation = true;
                            }
                        }
                        else {
                            $scope.GreterExpireDateValidation = true;
                        }
                    }
                    else {
                        $scope.MobileValidation = true;
                    }
                }
                else {
                    $scope.EmailValidation = true;
                }
            }
            else {
                $scope.NameValidation = true;
            }
        }
        else {
            $scope.TitleValidation = true;
        }
    }

    $scope.ResetVendor = function () {
        $scope.SelectedAllowedContentType = [];
        $scope.SelectedCountryDistributionRights = [];
        $scope.SelectedChannelDistributionRights = [];
        $scope.Title = "";
        $scope.ShortDescription = "";
        $scope.PersonName = "";
        $scope.PersonEmail = "";
        $scope.PersonMobileNo = "";
        $scope.StartDate = getDate(new Date());
        $scope.ExpiryDate = "";
        $scope.Checked = '1';
    }


});

myApp.controller('edit-vendorCtrl', function ($scope, $routeParams, $http, ngProgress, $window) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#managevendor').addClass('active');

    //ReadOnly Permission Code..
    $scope.ReadOnlyPrmission = false;
    $scope.hidebtn = false;

    //if ($scope.ReadOnlyPrmission == true) {
    //    $scope.hidebtn = true;
    //}

    $scope.BackToList = function () {
        $window.location.href = "#vendor-list";
    }
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.AllowedContentType = [];
    $scope.CountryDistributionRights = [];
    $scope.ChannelDistributionRights = [];
    $scope.SelectedAllowedContentType = [];
    $scope.SelectedCountryDistributionRights = [];
    $scope.SelectedChannelDistributionRights = [];
    $scope.OldRightsData = [];
    $scope.Title = "";
    $scope.ShortDescription = "";
    $scope.PersonName = "";
    $scope.PersonEmail = "";
    $scope.PersonMobileNo = "";
    $scope.StartDate = getDate(new Date());
    $scope.ExpiryDate = "";
    $scope.Checked = '1';
    $scope.IsDisable = false;
    $scope.RightId = 0;
    $scope.Visible =

    $scope.TitleValidation = false;
    $scope.NameValidation = false;
    $scope.EmailValidation = false;
    $scope.MobileValidation = false;
    $scope.GreterExpireDateValidation = false;
    $scope.AllowedContentValidation = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;
    $scope.UniqueVendorName = false;
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error;
    $scope.success = "";

    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    var post_request = $http({
        method: "Post",
        url: 'addvendor/GetEditVendorData',
        data: { 'VD_Id': $routeParams.id },
        async: false,
        headers: { 'Content-Type': 'application/json' }
    });
    post_request.success(function (datas) {
        if (datas.UserRole === "Super Admin" || datas.UserRole === "Moderator") {
            var SelectedRightsData = angular.copy(datas.SelectedRightsData);
            $scope.OldRightsData = SelectedRightsData;
            var Rightsdata = angular.copy(datas.RightsData);
            $scope.SelectedAllowedContentType = [];
            $scope.SelectedCountryDistributionRights = [];
            $scope.SelectedChannelDistributionRights = [];

            $scope.hidebtn = !datas.IsEdit;
            $scope.ReadOnlyPrmission = !datas.IsEdit;
            ////console.log(SelectedRightsData)
            for (var i in SelectedRightsData) {
                if ($scope.SelectedAllowedContentType.indexOf(SelectedRightsData[i].r_allowed_content_type) == -1) {
                    $scope.SelectedAllowedContentType.push(SelectedRightsData[i].r_allowed_content_type);
                }
                if ($scope.SelectedCountryDistributionRights.indexOf(SelectedRightsData[i].r_country_distribution_rights) == -1) {
                    $scope.SelectedCountryDistributionRights.push(SelectedRightsData[i].r_country_distribution_rights);
                }
                if ($scope.SelectedChannelDistributionRights.indexOf(SelectedRightsData[i].r_channel_distribution_rights) == -1) {
                    $scope.SelectedChannelDistributionRights.push(SelectedRightsData[i].r_channel_distribution_rights);
                }
                $scope.Checked = SelectedRightsData[0].vp_rights_at_property_level;
                $scope.vp_r_group_id = SelectedRightsData[0].vp_r_group_id;
            }

            for (var i in Rightsdata) {
                if (Rightsdata[i].cd_cm_id == 2) {
                    $scope.AllowedContentType.push(Rightsdata[i]);
                }
                if (Rightsdata[i].cd_cm_id == 3) {
                    $scope.CountryDistributionRights.push(Rightsdata[i]);
                }
                if (Rightsdata[i].cd_cm_id == 4) {
                    $scope.ChannelDistributionRights.push(Rightsdata[i]);
                }
            }

            if (datas.VendorList.length > 0) {
                $scope.Title = datas.VendorList[0].vd_name;
                $scope.ShortDescription = datas.VendorList[0].vd_desc;
                $scope.PersonName = datas.VendorList[0].vd_display_name;
                $scope.PersonEmail = datas.VendorList[0].vd_email_id;
                $scope.PersonMobileNo = datas.VendorList[0].vd_mobile_no;
                $scope.StartDate = getDate(new Date(datas.VendorList[0].vd_starts_on));
                $scope.ExpiryDate = getDate(new Date(datas.VendorList[0].vd_end_on));
                //$('#startdate').datepicker('setDate', new Date(datas.VendorList[0].vd_starts_on));
                //$('#startdate').datepicker('update');
                //$('#enddate').datepicker('setDate', new Date(datas.VendorList[0].vd_end_on));
                //$('#enddate').datepicker('update');


            }
            $scope.RightId = datas.VendorList[0].r_id;
        }
        else {
            location.href = "/";
        }
    });
    post_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });


    function GetDeleteRights(OldRights, SelectedRights) {
        var DeleteArray = [];
        for (var i in OldRights) {
            var flag = true;
            for (var j in SelectedRights) {
                if (OldRights[i].r_allowed_content_type == SelectedRights[j].AllowedContentType && OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelDistributionRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryDistributionRights) {
                    flag = false;
                }
            }
            if (flag) {
                DeleteArray.push(OldRights[i]);
            }
        }
        return DeleteArray;
    }

    function GetAddRights(OldRights, SelectedRights) {
        var AddArray = [];
        for (var j in SelectedRights) {
            var flag = true;
            for (var i in OldRights) {
                if (OldRights[i].r_allowed_content_type == SelectedRights[j].AllowedContentType && OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelDistributionRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryDistributionRights) {
                    flag = false;
                }
            }
            if (flag) {
                AddArray.push({ AllowedContentType: SelectedRights[j].AllowedContentType, CountryDistributionRights: SelectedRights[j].CountryDistributionRights, ChannelDistributionRights: SelectedRights[j].ChannelDistributionRights });
            }
        }
        return AddArray;
    }


    $scope.UpdateVendor = function () {
        $scope.TitleValidation = false;
        $scope.NameValidation = false;
        $scope.EmailValidation = false;
        $scope.MobileValidation = false;
        $scope.StartDateValidation = false;
        $scope.ExpireDateValidation = false;
        $scope.GreterExpireDateValidation = false;
        $scope.AllowedContentValidation = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;
        $scope.UniqueVendorName = false;
        if ($scope.Title != "") {
            if ($scope.PersonName != "") {
                if ($scope.PersonEmail != "" && validateEmail($scope.PersonEmail)) {
                    if ($scope.PersonMobileNo != "" && !isNaN($scope.PersonMobileNo) && parseInt($scope.PersonMobileNo).toString().length == 10) {
                        if (new Date($scope.StartDate) <= new Date($scope.ExpiryDate)) {
                            if ($scope.SelectedAllowedContentType.length.toString() > 0) {
                                if ($scope.SelectedCountryDistributionRights.length.toString() > 0) {
                                    if ($scope.SelectedChannelDistributionRights.length.toString() > 0) {

                                        var NewRightsData = [];
                                        for (var i in $scope.SelectedAllowedContentType) {
                                            for (var j in $scope.SelectedCountryDistributionRights) {
                                                for (var k in $scope.SelectedChannelDistributionRights) {
                                                    NewRightsData.push({ AllowedContentType: $scope.SelectedAllowedContentType[i], CountryDistributionRights: $scope.SelectedCountryDistributionRights[j], ChannelDistributionRights: $scope.SelectedChannelDistributionRights[k] });
                                                }
                                            }
                                        }

                                        var datas = {
                                            "vendorId": $routeParams.id,
                                            "Title": $scope.Title,
                                            "Description": $scope.ShortDescription,
                                            "PersonName": $scope.PersonName,
                                            "PersonEmail": $scope.PersonEmail,
                                            "PersonMobileNo": $scope.PersonMobileNo,
                                            "AddRightsData": GetAddRights($scope.OldRightsData, NewRightsData),
                                            "DeleteRightsData": GetDeleteRights($scope.OldRightsData, NewRightsData),
                                            "AllowChange": $scope.Checked,
                                            "StartDate": getDate($scope.StartDate),
                                            "ExpiryDate": getDate($scope.ExpiryDate),
                                            "RightId": $scope.RightId,
                                            "vp_r_group_id": $scope.vp_r_group_id
                                        }
                                        //Start with DB.
                                        ngProgress.start();
                                        var post_request = $http({
                                            method: "Post",
                                            url: 'addvendor/UpdateVendor',
                                            data: datas,
                                            headers: { 'Content-Type': 'application/json' }
                                        });
                                        post_request.success(function (data) {
                                            ngProgress.complete();
                                            if (data.Result == "Success") {
                                                if (data.SelectedRightsData.length > 0) {
                                                    $scope.OldRightsData = data.SelectedRightsData;
                                                }
                                                $scope.successvisible = true;
                                                $scope.success = "Record updated successfully.";
                                                $window.location.href = "#vendor-list";
                                            }
                                            if (data.Result == "VendorNameError") {
                                                $scope.errorvisible = true;
                                                $scope.error = "Vendor Name already available.";
                                            }
                                        });
                                        post_request.error(function (data, status, headers, config) {
                                            if (data != undefined) {
                                                $scope.errorvisible = true;
                                                $scope.error = data.substring(1, data.length - 1);
                                                ngProgress.complete();
                                            }
                                        });

                                    }
                                    else {
                                        $scope.ChannelRightsValidation = true;
                                    }
                                }
                                else {
                                    $scope.CountryRightsValidation = true;
                                }
                            }
                            else {
                                $scope.AllowedContentValidation = true;
                            }
                        }
                        else {
                            $scope.GreterExpireDateValidation = true;
                        }
                    }
                    else {
                        $scope.MobileValidation = true;
                    }
                }
                else {
                    $scope.EmailValidation = true;
                }
            }
            else {
                $scope.NameValidation = true;
            }
        }
        else {
            $scope.TitleValidation = true;
        }
    }

    //$scope.ResetVendor = function () {
    //    $scope.SelectedAllowedContentType = [];
    //    $scope.SelectedCountryDistributionRights = [];
    //    $scope.SelectedChannelDistributionRights = [];
    //    $scope.Title = "";
    //    $scope.ShortDescription = "";
    //    $scope.PersonName = "";
    //    $scope.PersonEmail = "";
    //    $scope.PersonMobileNo = "";
    //    $scope.StartDate = getDate(new Date());
    //    $scope.ExpiryDate = "";
    //    $scope.Checked = '1';
    //}

});

myApp.controller('vendor-listCtrl', function ($scope, $http, Excel, $timeout, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#vendorlist').addClass('active');
    $('#managevendor').addClass('active');

    //Rights Of User Code

    $scope.IsDisable = false;

    //if ($scope.Permission == true) {
    //    $scope.IsDisable = false;
    //}
    //else {
    //    $scope.IsDisable = true;
    //}

    $scope.vendorlist = [];
    $scope.PropertyList = [];
    $scope.serchvendorquery = "";
    $scope.serchpropertyquery = "";

    $scope.vendorcurrentPage = 0;
    $scope.vendorpageSize = 50;

    $scope.propertycurrentPage = 0;
    $scope.propertypageSize = 50;


    function GetVendorData(data) {
        //for (var i in data) {
        data = setDate(data);
        //}
        return data;
    }

    function GetTitle(expirydate, active) {
        if (active != 1) {
            return "UnBlock";
        }
        else {
            if (Datewithouttime(expirydate) < Datewithouttime(new Date())) {
                return "Expired";
            }
            else {
                return "Block";
            }
        }
    }

    function GetStatus(expirydate, active) {
        if (active != 1) {
            return "Vendor Blocked"; p
        }
        else {
            if (Datewithouttime(expirydate) < Datewithouttime(new Date())) {
                return "Vendor Expired";
            }
            else {
                return "Active";
            }
        }
    }

    function ButtonColor(expirydate, active) {
        if (active !== 1) {
            return "red";
        }
        else {
            if (Datewithouttime(expirydate) < Datewithouttime(new Date())) {
                return "darkorange";
            }
            else {
                return "green";
            }
        }
    }
    var get_request = $http({
        method: "Get",
        url: 'addvendor/GetVendorList',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        if (datas.UserRole === "Super Admin" || datas.UserRole === "Moderator") {
            //$scope.vendorlist = GetVendorData(angular.copy(datas.VendorList));
            $scope.IsDisable = datas.IsEdit;
            for (var i in datas.VendorList) {
                $scope.vendorlist.push({
                    uv_created_by: datas.VendorList[i].uv_created_by,
                    uv_created_on: datas.VendorList[i].uv_created_on,
                    uv_id: datas.VendorList[i].uv_id,
                    uv_ld_id: datas.VendorList[i].uv_ld_id,
                    uv_modified_on: datas.VendorList[i].uv_modified_on,
                    uv_modifief_by: datas.VendorList[i].uv_modifief_by,
                    uv_vd_id: datas.VendorList[i].uv_vd_id,
                    vd_created_by: datas.VendorList[i].vd_created_by,
                    vd_created_on: GetVendorData(datas.VendorList[i].vd_created_on),
                    vd_desc: datas.VendorList[i].vd_desc,
                    vd_display_name: datas.VendorList[i].vd_display_name,
                    vd_email_id: datas.VendorList[i].vd_email_id,
                    vd_end_on: datas.VendorList[i].vd_end_on,
                    vd_id: datas.VendorList[i].vd_id,
                    vd_is_active: datas.VendorList[i].vd_is_active,
                    vd_mobile_no: datas.VendorList[i].vd_mobile_no,
                    vd_modified_on: datas.VendorList[i].vd_modified_on,
                    vd_modifief_by: datas.VendorList[i].vd_modifief_by,
                    vd_name: datas.VendorList[i].vd_name,
                    vd_starts_on: datas.VendorList[i].vd_starts_on,
                    vd_vendor_of: datas.VendorList[i].vd_vendor_of,
                    vp_r_group_id: datas.VendorList[i].vp_r_group_id,
                    vp_rights_at_property_level: datas.VendorList[i].vp_rights_at_property_level,
                    vp_vendor_id: datas.VendorList[i].vp_vendor_id,
                    title: GetTitle(datas.VendorList[i].vd_end_on, datas.VendorList[i].vd_is_active),
                    status: GetStatus(datas.VendorList[i].vd_end_on, datas.VendorList[i].vd_is_active),
                    buttoncolor: ButtonColor(datas.VendorList[i].vd_end_on, datas.VendorList[i].vd_is_active),
                });
            }
        }
        else {
            location.href = "/";
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.BlockColor = function (id) {
        for (var i in $scope.vendorlist) {
            if ($scope.vendorlist[i].vd_id == id) {
                if ($scope.vendorlist[i].vd_is_active != 1) {
                    return "red";
                }
                else {
                    if (Datewithouttime($scope.vendorlist[i].vd_end_on) < Datewithouttime(new Date())) {
                        return "darkorange";
                    }
                    else {
                        return 'green';
                    }
                }
            }
        }
    }

    $scope.Searchvendorclick = function (data) {
        $scope.serchvendorquery = $scope.vendorlistquery;
    }

    $scope.exportVendorData = function (tableId) {
        /*var exportHref = Excel.tableToExcel(tableId, 'UserData');
        $timeout(function () { location.href = exportHref; }, 100);*/
        var vendorListExport = [];
        $scope.vendorlist.forEach(function (data) {
            if (data.vd_name.toString().toLowerCase().indexOf($scope.serchvendorquery) !== -1) {
                vendorListExport.push(data);
            }
        });
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportVendorExcel',
            data: { vendorListExport: vendorListExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'

        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'vendorList.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.BlockVendor = function (vendorid) {
        for (var i in $scope.vendorlist) {
            if ($scope.vendorlist[i].vd_id == vendorid) {
                if ($scope.vendorlist[i].buttoncolor != "darkorange") {
                    if ($scope.vendorlist[i].buttoncolor == "green") {
                        if (confirm("Are you want to sure block this Vendor?")) {
                            ngProgress.start();
                            var post_request = $http({
                                method: "Post",
                                url: 'addvendor/BlockVendor',
                                data: { vd_Id: vendorid },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            post_request.success(function (data) {
                                if (data.Result == "BlockVendor") {
                                    for (var i in $scope.vendorlist) {
                                        if ($scope.vendorlist[i].vd_id == vendorid) {
                                            $scope.vendorlist[i].vd_is_active = 0;
                                            $scope.vendorlist[i].title = GetTitle($scope.vendorlist[i].vd_end_on, $scope.vendorlist[i].vd_is_active);
                                            $scope.vendorlist[i].status = GetStatus($scope.vendorlist[i].vd_end_on, $scope.vendorlist[i].vd_is_active);
                                            $scope.vendorlist[i].buttoncolor = ButtonColor($scope.vendorlist[i].vd_end_on, $scope.vendorlist[i].vd_is_active);
                                        }
                                    }
                                }
                                ngProgress.complete();
                            });
                            post_request.error(function (data, status, headers, config) {
                                if (data != undefined) {
                                    $scope.errorvisible = true;
                                    $scope.error = data.substring(1, data.length - 1);
                                    ngProgress.complete();
                                }
                            });
                        }
                    }
                    else {
                        if (confirm("Are you want to sure Unblock this Vendor?")) {
                            ngProgress.start();
                            var post_request = $http({
                                method: "Post",
                                url: 'addvendor/UnBlockVendor',
                                data: { vd_Id: vendorid },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            post_request.success(function (data) {
                                if (data.Result == "UnBlockVendor") {
                                    for (var i in $scope.vendorlist) {
                                        if ($scope.vendorlist[i].vd_id == vendorid) {
                                            $scope.vendorlist[i].vd_is_active = 1;
                                            $scope.vendorlist[i].title = GetTitle($scope.vendorlist[i].vd_end_on, $scope.vendorlist[i].vd_is_active);
                                            $scope.vendorlist[i].status = GetStatus($scope.vendorlist[i].vd_end_on, $scope.vendorlist[i].vd_is_active);
                                            $scope.vendorlist[i].buttoncolor = ButtonColor($scope.vendorlist[i].vd_end_on, $scope.vendorlist[i].vd_is_active)
                                        }
                                    }
                                }
                                ngProgress.complete();
                            });
                            post_request.error(function (data, status, headers, config) {
                                if (data != undefined) {
                                    $scope.errorvisible = true;
                                    $scope.error = data.substring(1, data.length - 1);
                                    ngProgress.complete();
                                }
                            });
                        }
                    }
                }
            }
        }
    }

    $scope.UnBlockVendor = function (vendorid) {
        for (var i in $scope.vendorlist) {
            if ($scope.vendorlist[i].vd_id == vendorid) {
                if (Datewithouttime($scope.vendorlist[i].vd_end_on) >= Datewithouttime(new Date())) {
                    if (confirm("Are you want to sure Unblock this Vendor?")) {
                        ngProgress.start();
                        var post_request = $http({
                            method: "Post",
                            url: 'addvendor/UnBlockVendor',
                            data: { vd_Id: vendorid },
                            headers: { 'Content-Type': 'application/json' }
                        });
                        post_request.success(function (data) {
                            if (data.Result == "UnBlockVendor") {
                                for (var i in $scope.vendorlist) {
                                    if ($scope.vendorlist[i].vd_id == vendorid) {
                                        $scope.vendorlist[i].vd_is_active = 1;
                                        $scope.vendorlist[i].title = GetTitle($scope.vendorlist[i].vd_end_on, $scope.vendorlist[i].vd_is_active);
                                        $scope.vendorlist[i].status = GetStatus($scope.vendorlist[i].vd_end_on, $scope.vendorlist[i].vd_is_active);
                                        $scope.vendorlist[i].buttoncolor = ButtonColor($scope.vendorlist[i].vd_end_on, $scope.vendorlist[i].vd_is_active)
                                    }
                                }
                            }
                            ngProgress.complete();
                        });
                        post_request.error(function (data, status, headers, config) {
                            if (data != undefined) {
                                $scope.errorvisible = true;
                                $scope.error = data.substring(1, data.length - 1);
                                ngProgress.complete();
                            }
                        });
                    }
                }
            }
        }
    }

});

myApp.controller('add-propertyCtrl', function ($scope, $http, ngProgress, $window) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addproperty').addClass('active');
    $('#manageproperty').addClass('active');

    $scope.BackToList = function () {
        $window.location.href = "#property-list";
    }
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.Permission = true;
    $scope.IsDisable = false;
    $scope.Vendor = [];
    $scope.AllAllowedContentType = [];
    $scope.AllCountryDistributionRights = [];
    $scope.AllChannelDistributionRights = [];
    $scope.AllowedContentType = [];
    $scope.CountryDistributionRights = [];
    $scope.ChannelDistributionRights = [];
    $scope.SelectedVendor = 0;
    $scope.SelectedAllowedContentType = [];
    $scope.SelectedCountryDistributionRights = [];
    $scope.SelectedChannelDistributionRights = [];
    $scope.Title = "";
    $scope.ShortDescription = "";
    $scope.ReleaseYear = "";
    $scope.StartDate = getDate(new Date());
    $scope.ExpiryDate = "";
    $scope.Checked = '1';
    $scope.RightsShow = false;
    $scope.AllPropertyList = [];
    $scope.VendorValidation = false;
    $scope.TitleValidation = false;
    $scope.ReleaseYearValidation = false;
    $scope.StartDateValidation = false;
    $scope.ExpireDateValidation = false;
    $scope.AllowedContentValidation = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;
    $scope.StartDateEndDateValidation = false;
    $scope.VendorDateValidation = false;
    $scope.CurrentYear = new Date().getFullYear();
    $scope.VendorRights = [];
    $scope.VendorStartDate = "";
    $scope.VendorEndDate = "";
    $scope.SavePropertyData = false;
    $scope.UniquePropertyName = false;
    $scope.VendorProfile = [];
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    var startdate;
    var enddate;

    if ($scope.Permission == true) {
        $scope.IsDisable = false;
    }
    else {
        $scope.IsDisable = true;
    }





    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    var get_request = $http({
        method: "Get",
        url: 'addproperty/GetAddPropertyData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        //////console.log(datas);
        if (datas.UserRole === "Content Manager") {
            $scope.VendorRights = angular.copy(datas.VendorRights);
            var RightsData = angular.copy(datas.RightsData);
            //$scope.Vendor = angular.copy(datas.VendorData);
            for (var i in datas.VendorData) {
                $scope.Vendor.push(datas.VendorData[i]);
            }

            $scope.VendorProfile = angular.copy(datas.VendorProfile);
            for (var i in RightsData) {
                if (RightsData[i].cd_cm_id == 2) {
                    $scope.AllAllowedContentType.push(RightsData[i]);
                }
                if (RightsData[i].cd_cm_id == 3) {
                    $scope.AllCountryDistributionRights.push(RightsData[i]);
                }
                if (RightsData[i].cd_cm_id == 4) {
                    $scope.AllChannelDistributionRights.push(RightsData[i]);
                }
            }
        }
        else {
            location.href = "/";
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });



    $scope.VendorChange = function () {
        $scope.VendorValidation = false;
        $scope.TitleValidation = false;
        $scope.ReleaseYearValidation = false;
        $scope.StartDateValidation = false;
        $scope.ExpireDateValidation = false;
        $scope.AllowedContentValidation = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;
        $scope.StartDateEndDateValidation = false;
        $scope.VendorDateValidation = false;
        $scope.AllowedContentType = [];
        $scope.CountryDistributionRights = [];
        $scope.ChannelDistributionRights = [];
        var country = [];
        var channel = [];
        var content = [];
        if ($scope.SelectedVendor != 0) {
            for (var i in $scope.Vendor) {
                if ($scope.SelectedVendor == $scope.Vendor[i].vd_id) {
                    $scope.VendorStartDate = $scope.Vendor[i].vd_starts_on;
                    $scope.VendorEndDate = $scope.Vendor[i].vd_end_on;
                    for (var j in $scope.VendorProfile) {
                        if ($scope.VendorProfile[j].vp_vendor_id == $scope.SelectedVendor) {
                            if ($scope.VendorProfile[j].vp_rights_at_property_level == 1) {
                                $scope.RightsShow = true;
                                VendorRights();
                            }
                            else {
                                $scope.RightsShow = false;
                            }
                        }
                    }
                }
            }
        }
        else {
            $scope.VendorStartDate = "";
            $scope.VendorEndDate = "";
            $scope.ExpiryDate = "";
            $scope.RightsShow = false;
        }
    }

    $scope.SaveProperty = function () {
        $scope.VendorValidation = false;
        $scope.TitleValidation = false;
        $scope.ReleaseYearValidation = false;
        $scope.StartDateValidation = false;
        $scope.ExpireDateValidation = false;
        $scope.AllowedContentValidation = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;
        $scope.StartDateEndDateValidation = false;
        $scope.VendorDateValidation = false;


        if ($scope.SelectedVendor != 0) {
            if ($scope.ReleaseYear != "" && !isNaN($scope.ReleaseYear) && $scope.ReleaseYear.length == 4 && ($scope.ReleaseYear <= ($scope.CurrentYear + 1)) && ($scope.ReleaseYear >= 1950)) {
                if ($scope.Title != "") {
                    if ($scope.StartDate != "") {
                        if ($scope.ExpiryDate != "") {
                            if (new Date($scope.VendorStartDate) <= new Date($scope.StartDate) && new Date($scope.VendorEndDate) >= new Date($scope.ExpiryDate)) {
                                if (new Date($scope.StartDate) <= new Date($scope.ExpiryDate)) {
                                    if ($scope.RightsShow == true) {
                                        if ($scope.SelectedAllowedContentType.length > 0) {
                                            if ($scope.SelectedCountryDistributionRights.length > 0) {
                                                if ($scope.SelectedChannelDistributionRights.length > 0) {

                                                    var rights = [];

                                                    for (var i in $scope.SelectedAllowedContentType) {
                                                        for (var j in $scope.SelectedCountryDistributionRights) {
                                                            for (var k in $scope.SelectedChannelDistributionRights) {
                                                                rights.push({
                                                                    "AllowedContentType": $scope.SelectedAllowedContentType[i],
                                                                    "CountryDistributionRights": $scope.SelectedCountryDistributionRights[j],
                                                                    "ChannelDistributionRights": $scope.SelectedChannelDistributionRights[k]
                                                                });
                                                            }
                                                        }
                                                    }
                                                    ngProgress.start();

                                                    var datas = {
                                                        "Title": $scope.Title,
                                                        "Vendor": $scope.SelectedVendor,
                                                        "Description": $scope.ShortDescription,
                                                        "ReleaseYear": $scope.ReleaseYear,
                                                        "Rights": rights,
                                                        "AllowChange": $scope.Checked,
                                                        "StartDate": $scope.StartDate,
                                                        "ExpiryDate": getDate($scope.ExpiryDate),
                                                        "RightsSettingShow": $scope.RightsShow
                                                    }

                                                    var post_request = $http({
                                                        method: "Post",
                                                        url: 'addproperty/AddProperties',
                                                        data: datas,
                                                        headers: { 'Content-Type': 'application/json' }
                                                    });
                                                    post_request.success(function (data) {
                                                        if (data.Result == "AddProperty") {
                                                            $scope.SelectedVendor = 0;
                                                            $scope.SelectedAllowedContentType = [];
                                                            $scope.SelectedCountryDistributionRights = [];
                                                            $scope.SelectedChannelDistributionRights = [];
                                                            $scope.Title = "";
                                                            $scope.ShortDescription = "";
                                                            $scope.ReleaseYear = "";
                                                            $scope.StartDate = getDate(new Date());
                                                            $scope.ExpiryDate = "";
                                                            $scope.successvisible = true;
                                                            ngProgress.complete();
                                                            $scope.success = "Record inserted successfully.";
                                                            $window.location.href = "#property-list";
                                                        }
                                                        if (data.Result == "PropertyNameError") {
                                                            $scope.errorvisible = true;
                                                            $scope.error = "Property Name already available.";
                                                        }
                                                    });
                                                    post_request.error(function (data, status, headers, config) {
                                                        if (data != undefined) {
                                                            $scope.errorvisible = true;
                                                            $scope.error = data.substring(1, data.length - 1);
                                                            ngProgress.complete();
                                                        }
                                                    });
                                                }
                                                else {
                                                    $scope.ChannelRightsValidation = true;
                                                }
                                            }
                                            else {
                                                $scope.CountryRightsValidation = true;
                                            }
                                        }
                                        else {
                                            $scope.AllowedContentValidation = true;
                                        }
                                    }
                                    else {
                                        ngProgress.start();
                                        var datas = {
                                            "Title": $scope.Title,
                                            "Vendor": $scope.SelectedVendor,
                                            "Description": $scope.ShortDescription,
                                            "ReleaseYear": $scope.ReleaseYear,
                                            "Rights": [],
                                            "AllowChange": $scope.Checked,
                                            "StartDate": $scope.StartDate,
                                            "ExpiryDate": getDate($scope.ExpiryDate),
                                            "RightsSettingShow": $scope.RightsShow
                                        }

                                        var post_request = $http({
                                            method: "Post",
                                            url: 'addproperty/AddProperties',
                                            data: datas,
                                            headers: { 'Content-Type': 'application/json' }
                                        });
                                        post_request.success(function (data) {
                                            if (data.Result == "AddProperty") {
                                                $scope.SelectedVendor = 0;
                                                $scope.SelectedAllowedContentType = [];
                                                $scope.SelectedCountryDistributionRights = [];
                                                $scope.SelectedChannelDistributionRights = [];
                                                $scope.Title = "";
                                                $scope.ShortDescription = "";
                                                $scope.ReleaseYear = "";
                                                $scope.StartDate = getDate(new Date());
                                                $scope.ExpiryDate = "";
                                                $scope.successvisible = true;
                                                $scope.success = "Record inserted successfully.";
                                                ngProgress.complete();
                                            }
                                            if (data.Result == "PropertyNameError") {
                                                $scope.errorvisible = true;
                                                $scope.error = "Property Name already available.";
                                            }
                                        });
                                        post_request.error(function (data, status, headers, config) {
                                            if (data != undefined) {
                                                $scope.errorvisible = true;
                                                $scope.error = data.substring(1, data.length - 1);
                                                ngProgress.complete();
                                            }
                                        });
                                    }
                                }

                                else {
                                    $scope.StartDateEndDateValidation = true;
                                }
                            }
                            else {
                                $scope.VendorDateValidation = true;
                            }
                        }
                        else {
                            $scope.ExpireDateValidation = true;
                        }
                    }
                    else {
                        $scope.StartDateValidation = true;
                    }
                }
                else {
                    $scope.TitleValidation = true;
                }
            }
            else {
                $scope.ReleaseYearValidation = true;
            }
        }
        else {
            $scope.VendorValidation = true;
        }

    }

    $scope.ResetProperty = function () {
        $scope.SelectedVendor = 0;
        $scope.SelectedAllowedContentType = 0;
        $scope.SelectedCountryDistributionRights = 0;
        $scope.SelectedChannelDistributionRights = 0;
        $scope.Title = "";
        $scope.ShortDescription = "";
        $scope.ReleaseYear = "";
        $scope.StartDate = getDate(new Date());
        $scope.VendorStartDate = "";
        $scope.VendorEndDate = "";
        $scope.ExpiryDate = "";
        //$('#startdate').datepicker('setDate', new Date());
        //$('#startdate').datepicker('update');
        //$('#enddate').datepicker('setDate', new Date());
        //$('#enddate').datepicker('update');
        $scope.Checked = '1';
    }

    function VendorRights() {
        $scope.AllowedContentType = [];
        $scope.CountryDistributionRights = [];
        $scope.ChannelDistributionRights = [];
        var country = [];
        var channel = [];
        var content = [];
        for (var k in $scope.VendorRights) {
            if ($scope.VendorRights[k].vp_vendor_id == $scope.SelectedVendor) {
                for (var j in $scope.AllAllowedContentType) {
                    if ($scope.AllAllowedContentType[j].cd_id == $scope.VendorRights[k].r_allowed_content_type) {
                        if (content.indexOf($scope.VendorRights[k].r_allowed_content_type) == -1) {
                            content.push($scope.AllAllowedContentType[j].cd_id);
                            $scope.AllowedContentType.push($scope.AllAllowedContentType[j]);
                        }
                    }
                }
                for (var j in $scope.AllCountryDistributionRights) {
                    if ($scope.AllCountryDistributionRights[j].cd_id == $scope.VendorRights[k].r_country_distribution_rights) {
                        if (country.indexOf($scope.VendorRights[k].r_country_distribution_rights) == -1) {
                            country.push($scope.AllCountryDistributionRights[j].cd_id);
                            $scope.CountryDistributionRights.push($scope.AllCountryDistributionRights[j]);
                        }
                    }
                }
                for (var j in $scope.AllChannelDistributionRights) {
                    if ($scope.AllChannelDistributionRights[j].cd_id == $scope.VendorRights[k].r_channel_distribution_rights) {
                        if (channel.indexOf($scope.VendorRights[k].r_channel_distribution_rights) == -1) {
                            channel.push($scope.AllChannelDistributionRights[j].cd_id);
                            $scope.ChannelDistributionRights.push($scope.AllChannelDistributionRights[j]);
                        }
                    }
                }
            }
        }
    }

});

myApp.controller('edit-propertyCtrl', function ($scope, $routeParams, $http, ngProgress, $window) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#manageproperty').addClass('active');

    $scope.BackToList = function () {
        $window.location.href = "#property-list";
    }
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.IsBlockPermission = false;
    $scope.IsEditPermission = false;
    $scope.successvisible = false;
    $scope.Vendor = [];
    $scope.PropertyList = [];
    $scope.ContentMetadata = [];
    $scope.AllAllowedContentType = [];
    $scope.AllCountryDistributionRights = [];
    $scope.AllChannelDistributionRights = [];
    $scope.AllowedContentType = [];
    $scope.CountryDistributionRights = [];
    $scope.ChannelDistributionRights = [];
    $scope.VendorRights = [];
    $scope.SelectedVendor = 0;
    $scope.SelectedAllowedContentType = [];
    $scope.SelectedCountryDistributionRights = [];
    $scope.SelectedChannelDistributionRights = [];
    $scope.Title = "";
    $scope.ShortDescription = "";
    $scope.ReleaseYear = "";
    $scope.StartDate = getDate(new Date());
    $scope.ExpiryDate = "";
    $scope.Checked = '1';
    $scope.RightsShow = false;
    $scope.AllPropertyList = [];
    $scope.GroupId = "";
    $scope.VendorProfile = [];
    $scope.TitleValidation = false;
    $scope.ReleaseYearValidation = false;
    $scope.StartDateValidation = false;
    $scope.ExpireDateValidation = false;
    $scope.AllowedContentValidation = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;
    $scope.StartDateEndDateValidation = false;
    $scope.VendorDateValidation = false;
    $scope.CurrentYear = new Date().getFullYear();
    $scope.errorvisible = false;
    $scope.error;
    $scope.success = "";
    $scope.OldRightData = [];
    $scope.VendorStartDate = "";
    $scope.VendorEndDate = "";

    var startdate;
    var enddate;



    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    var get_request = $http({
        method: "Post",
        url: 'addproperty/GetEditPropertyData',
        data: { 'cm_id': $routeParams.id },
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        ////console.log(datas);
        $scope.IsBlockPermission = datas.IsBlock;
        $scope.IsEditPermission = !datas.IsEdit;
        $scope.VendorRights = angular.copy(datas.VendorRights);
        var RightsData = angular.copy(datas.RightsData);
        //$scope.Vendor = angular.copy(datas.VendorData);
        for (var i in datas.VendorData) {
            $scope.Vendor.push(datas.VendorData[i]);
        }
        $scope.VendorProfile = angular.copy(datas.VendorProfile);
        for (var i in RightsData) {
            if (RightsData[i].cd_cm_id == 2) {
                $scope.AllAllowedContentType.push(RightsData[i]);
            }
            if (RightsData[i].cd_cm_id == 3) {
                $scope.AllCountryDistributionRights.push(RightsData[i]);
            }
            if (RightsData[i].cd_cm_id == 4) {
                $scope.AllChannelDistributionRights.push(RightsData[i]);
            }
        }
        $scope.ContentMetadata = angular.copy(datas.ContentMetadata);
        var selectedrightsdata = angular.copy(datas.PropertyData);
        $scope.OldRightData = selectedrightsdata;
        $scope.SelectedAllowedContentType = [];
        $scope.SelectedCountryDistributionRights = [];
        $scope.SelectedChannelDistributionRights = [];


        for (var i in selectedrightsdata) {
            $scope.Checked = selectedrightsdata[i].r_rights_at_content_level;
            if ($scope.SelectedAllowedContentType.indexOf(selectedrightsdata[i].r_allowed_content_type) == -1) {
                $scope.SelectedAllowedContentType.push(selectedrightsdata[i].r_allowed_content_type);
            }
            if ($scope.SelectedCountryDistributionRights.indexOf(selectedrightsdata[i].r_country_distribution_rights) == -1) {
                $scope.SelectedCountryDistributionRights.push(selectedrightsdata[i].r_country_distribution_rights);
            }
            if ($scope.SelectedChannelDistributionRights.indexOf(selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                $scope.SelectedChannelDistributionRights.push(selectedrightsdata[i].r_channel_distribution_rights);
            }
        }

        for (var i in $scope.ContentMetadata) {
            //$scope.SelectedVendor = $scope.ContentMetadata[i].vd_id;
            $scope.SelectedVendor = $scope.ContentMetadata[i].cm_vendor;
            $scope.Title = $scope.ContentMetadata[i].cm_title;
            $scope.ShortDescription = $scope.ContentMetadata[i].cm_short_desc;
            $scope.ReleaseYear = $scope.ContentMetadata[i].cm_release_year;
            $scope.StartDate = getDate(new Date($scope.ContentMetadata[i].cm_starts_from));
            $scope.ExpiryDate = getDate(new Date($scope.ContentMetadata[i].cm_expires_on));
            // $scope.Checked = parseInt($scope.ContentMetadata[i].cm_signature);

            //$('#startdate').datepicker('setDate', new Date($scope.ContentMetadata[i].cm_starts_from));
            //$('#startdate').datepicker('update');
            //$('#enddate').datepicker('setDate', new Date($scope.ContentMetadata[i].cm_expires_on));
            //$('#enddate').datepicker('update');
            $scope.GroupId = $scope.ContentMetadata[i].cm_r_group_id;
        }
        $scope.AllowedContentType = [];
        $scope.CountryDistributionRights = [];
        $scope.ChannelDistributionRights = [];
        var country = [];
        var channel = [];
        var content = [];
        for (var i in $scope.Vendor) {
            if ($scope.SelectedVendor == $scope.Vendor[i].vd_id) {
                $scope.VendorStartDate = $scope.Vendor[i].vd_starts_on;
                $scope.VendorEndDate = $scope.Vendor[i].vd_end_on;
                for (var j in $scope.VendorProfile) {
                    if ($scope.VendorProfile[j].vp_vendor_id == $scope.SelectedVendor) {
                        if ($scope.VendorProfile[j].vp_rights_at_property_level == 1) {
                            $scope.RightsShow = true;
                            VendorRights();
                        }
                        else {
                            $scope.RightsShow = false;
                        }
                    }
                }
            }
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.VendorChange = function () {
        $scope.AllowedContentType = [];
        $scope.CountryDistributionRights = [];
        $scope.ChannelDistributionRights = [];
        var country = [];
        var channel = [];
        var content = [];
        if (!$scope.IsDisable) {
            $scope.RightsShow = false;
            for (var i in $scope.Vendor) {
                if ($scope.SelectedVendor == $scope.Vendor[i].vd_id) {
                    $scope.VendorStartDate = $scope.Vendor[i].vd_starts_on;
                    $scope.VendorEndDate = $scope.Vendor[i].vd_end_on;
                    var selectedrightsdata = $scope.OldRightData;
                    $scope.SelectedAllowedContentType = [];
                    $scope.SelectedCountryDistributionRights = [];
                    $scope.SelectedChannelDistributionRights = [];
                    for (var j in selectedrightsdata) {
                        if (selectedrightsdata[j].cm_vendor == $scope.Vendor[i].vd_id) {
                            if ($scope.SelectedAllowedContentType.indexOf(selectedrightsdata[j].r_allowed_content_type) == -1) {
                                $scope.SelectedAllowedContentType.push(selectedrightsdata[j].r_allowed_content_type);
                            }
                            if ($scope.SelectedCountryDistributionRights.indexOf(selectedrightsdata[j].r_country_distribution_rights) == -1) {
                                $scope.SelectedCountryDistributionRights.push(selectedrightsdata[j].r_country_distribution_rights);
                            }
                            if ($scope.SelectedChannelDistributionRights.indexOf(selectedrightsdata[j].r_channel_distribution_rights) == -1) {
                                $scope.SelectedChannelDistributionRights.push(selectedrightsdata[j].r_channel_distribution_rights);
                            }
                        }
                    }
                    for (var j in $scope.VendorProfile) {
                        if ($scope.VendorProfile[j].vp_vendor_id == $scope.SelectedVendor) {
                            if ($scope.VendorProfile[j].vp_rights_at_property_level == 1) {
                                $scope.RightsShow = true;
                                VendorRights();
                            }
                            else {
                                $scope.RightsShow = false;
                            }
                        }
                    }
                }
            }
        }
    }

    function GetDeleteRights(OldRights, SelectedRights) {
        var DeleteArray = [];
        for (var i in OldRights) {
            var flag = true;
            for (var j in SelectedRights) {
                if (OldRights[i].cm_vendor == SelectedRights[j].vendorId && OldRights[i].r_allowed_content_type == SelectedRights[j].AllowedContentType && OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelDistributionRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryDistributionRights) {
                    flag = false;
                }
            }
            if (flag) {
                DeleteArray.push(OldRights[i]);
            }
        }
        return DeleteArray;
    }

    function GetAddRights(OldRights, SelectedRights) {
        var AddArray = [];
        for (var j in SelectedRights) {
            var flag = true;
            for (var i in OldRights) {
                if (OldRights[i].cm_vendor == SelectedRights[j].vendorId && OldRights[i].r_allowed_content_type == SelectedRights[j].AllowedContentType && OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelDistributionRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryDistributionRights) {
                    flag = false;
                }
            }
            if (flag) {
                AddArray.push(SelectedRights[j]);
            }
        }
        return AddArray;
    }

    $scope.SaveProperty = function () {
        $scope.TitleValidation = false;
        $scope.ReleaseYearValidation = false;
        $scope.StartDateValidation = false;
        $scope.ExpireDateValidation = false;
        $scope.AllowedContentValidation = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;
        $scope.StartDateEndDateValidation = false;
        $scope.VendorDateValidation = false;
        $scope.UniquePropertyName = false;
        if ($scope.ReleaseYear != "" && !isNaN($scope.ReleaseYear) && $scope.ReleaseYear.toString().length == 4 && ($scope.ReleaseYear <= ($scope.CurrentYear + 1)) && ($scope.ReleaseYear >= 1950)) {
            if ($scope.Title != "" && $scope.Title != undefined) {
                if ($scope.StartDate != "" && $scope.StartDate != undefined) {
                    if ($scope.ExpiryDate != "" && $scope.ExpiryDate != undefined) {
                        if (new Date($scope.VendorStartDate) <= new Date($scope.StartDate) && new Date($scope.VendorEndDate) >= new Date($scope.ExpiryDate)) {
                            if (new Date($scope.StartDate) <= new Date($scope.ExpiryDate)) {
                                var postflag = true;
                                var rights = [];
                                var datas = {};
                                if ($scope.RightsShow == true) {
                                    if ($scope.SelectedAllowedContentType.length > 0) {
                                        if ($scope.SelectedCountryDistributionRights.length > 0) {
                                            if ($scope.SelectedChannelDistributionRights.length > 0) {
                                                postflag = false;
                                                ngProgress.start();
                                                for (var i in $scope.SelectedAllowedContentType) {
                                                    for (var j in $scope.SelectedCountryDistributionRights) {
                                                        for (var k in $scope.SelectedChannelDistributionRights) {
                                                            rights.push({
                                                                "vendorId": $scope.SelectedVendor,
                                                                "R_Group_Id": $scope.GroupId,
                                                                "AllowedContentType": $scope.SelectedAllowedContentType[i],
                                                                "CountryDistributionRights": $scope.SelectedCountryDistributionRights[j],
                                                                "ChannelDistributionRights": $scope.SelectedChannelDistributionRights[k]
                                                            });
                                                        }
                                                    }
                                                }
                                                var AddRights = GetAddRights($scope.OldRightData, rights);
                                                var DeleteRights = GetDeleteRights($scope.OldRightData, rights);
                                                datas = {
                                                    "PropertyId": $routeParams.id,
                                                    "GroupId": $scope.GroupId,
                                                    "Title": $scope.Title,
                                                    "Vendor": $scope.SelectedVendor,
                                                    "Description": $scope.ShortDescription,
                                                    "ReleaseYear": $scope.ReleaseYear,
                                                    "AddRights": AddRights,
                                                    "DeleteRights": DeleteRights,
                                                    "StartDate": getDate($scope.StartDate),
                                                    "ExpiryDate": getDate($scope.ExpiryDate),
                                                    "RightSettingShow": $scope.RightsShow,
                                                    "AllowChange": $scope.Checked
                                                }
                                            }
                                            else {
                                                $scope.ChannelRightsValidation = true;
                                            }
                                        }
                                        else {
                                            $scope.CountryRightsValidation = true;
                                        }
                                    }
                                    else {
                                        $scope.AllowedContentValidation = true;
                                    }
                                }
                                else {
                                    postflag = false;
                                    var AddRights = GetAddRights($scope.OldRightData, rights);
                                    var DeleteRights = GetDeleteRights($scope.OldRightData, rights);
                                    datas = {
                                        "PropertyId": $routeParams.id,
                                        "GroupId": $scope.GroupId,
                                        "Title": $scope.Title,
                                        "Vendor": $scope.SelectedVendor,
                                        "Description": $scope.ShortDescription,
                                        "ReleaseYear": $scope.ReleaseYear,
                                        "AddRights": AddRights,
                                        "DeleteRights": DeleteRights,
                                        "StartDate": getDate($scope.StartDate),
                                        "ExpiryDate": getDate($scope.ExpiryDate),
                                        "RightSettingShow": $scope.RightsShow,
                                        "AllowChange": $scope.Checked
                                    }

                                }
                                if (!postflag) {
                                    for (var i in datas.DeleteRights) {
                                    }
                                    ////console.log(datas, "datas");
                                    var post_request = $http({
                                        method: "Post",
                                        url: 'addproperty/UpdateProperty',
                                        data: datas,
                                        headers: { 'Content-Type': 'application/json' }
                                    });
                                    post_request.success(function (data) {
                                        if (data.Result == "PropertyUpdated") {
                                            $scope.successvisible = true;
                                            ////console.log(datas.GroupId);
                                            var selectedrightsdata = angular.copy(data.PropertyData);
                                            $scope.OldRightData = selectedrightsdata;
                                            $scope.GroupId = datas.GroupId;
                                            $scope.success = "Record Updated successfully.";
                                            $window.location.href = "#property-list";
                                        }
                                        if (data.Result == "PropertyNameError") {
                                            $scope.errorvisible = true;
                                            $scope.error = "Property Name already available.";
                                        }
                                        ngProgress.complete();
                                    });
                                    post_request.error(function (data, status, headers, config) {
                                        if (data != undefined) {
                                            $scope.errorvisible = true;
                                            $scope.error = data.substring(1, data.length - 1);
                                            ngProgress.complete();
                                        }
                                    });
                                }
                            }
                            else {
                                $scope.StartDateEndDateValidation = true;
                            }
                        }
                        else {
                            $scope.VendorDateValidation = true;
                        }
                    }
                    else {
                        $scope.ExpireDateValidation = true;
                    }
                }
                else {
                    $scope.StartDateValidation = true;
                }
            }
            else {
                $scope.TitleValidation = true;
            }
        }
        else {
            $scope.ReleaseYearValidation = true;
        }

    }

    function VendorRights() {
        $scope.AllowedContentType = [];
        $scope.CountryDistributionRights = [];
        $scope.ChannelDistributionRights = [];
        var country = [];
        var channel = [];
        var content = [];
        for (var k in $scope.VendorRights) {
            if ($scope.VendorRights[k].vp_vendor_id == $scope.SelectedVendor) {
                for (var j in $scope.AllAllowedContentType) {
                    if ($scope.AllAllowedContentType[j].cd_id == $scope.VendorRights[k].r_allowed_content_type) {
                        if (content.indexOf($scope.VendorRights[k].r_allowed_content_type) == -1) {
                            content.push($scope.AllAllowedContentType[j].cd_id);
                            $scope.AllowedContentType.push($scope.AllAllowedContentType[j]);
                        }
                    }
                }
                for (var j in $scope.AllCountryDistributionRights) {
                    if ($scope.AllCountryDistributionRights[j].cd_id == $scope.VendorRights[k].r_country_distribution_rights) {
                        if (country.indexOf($scope.VendorRights[k].r_country_distribution_rights) == -1) {
                            country.push($scope.AllCountryDistributionRights[j].cd_id);
                            $scope.CountryDistributionRights.push($scope.AllCountryDistributionRights[j]);
                        }
                    }
                }
                for (var j in $scope.AllChannelDistributionRights) {
                    if ($scope.AllChannelDistributionRights[j].cd_id == $scope.VendorRights[k].r_channel_distribution_rights) {
                        if (channel.indexOf($scope.VendorRights[k].r_channel_distribution_rights) == -1) {
                            channel.push($scope.AllChannelDistributionRights[j].cd_id);
                            $scope.ChannelDistributionRights.push($scope.AllChannelDistributionRights[j]);
                        }
                    }
                }
            }
        }
    }
    //$scope.ResetProperty = function () {
    //    $scope.SelectedVendor = 1;
    //    $scope.SelectedAllowedContentType = 8;
    //    $scope.SelectedCountryDistributionRights = 13;
    //    $scope.SelectedChannelDistributionRights = 18;
    //    $scope.Title = "";
    //    $scope.ShortDescription = "";
    //    $scope.ReleaseYear = "";
    //    $scope.StartDate = getDate(new Date());
    //    $scope.ExpiryDate = "";
    //    $('#startdate').datepicker('setDate', new Date($scope.ContentMetadata[i].cm_starts_from));
    //    $('#startdate').datepicker('update');
    //    $('#enddate').datepicker('setDate', new Date($scope.ContentMetadata[i].cm_expires_on));
    //    $('#enddate').datepicker('update');
    //    $scope.Checked = '1';
    //}

});

myApp.controller('property-listCtrl', function ($scope, $http, Excel, $timeout, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#propertylist').addClass('active');
    $('#manageproperty').addClass('active');

    //Rights Of User Code

    $scope.IsBlockPermission = false;
    $scope.vendorlist = [];
    $scope.PropertyList = [];
    $scope.serchvendorquery = "";
    $scope.serchpropertyquery = "";

    $scope.vendorcurrentPage = 0;
    $scope.vendorpageSize = 50;

    $scope.propertycurrentPage = 0;
    $scope.propertypageSize = 50;
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');






    function GetPropertyData(data) {
        data = setDate(data);
        return data;
    }

    function GetVendorData(data) {
        for (var i in data) {
            data[i].vd_created_on = setDate(data[i].vd_created_on);
        }
        return data;
    }

    function GetTitle(Role, VendorActive, VendorExpirydate, PropertyActive, PropertyExpirydate) {
        if (VendorActive == 1) {
            if (Datewithouttime(VendorExpirydate) >= Datewithouttime(new Date())) {
                if (PropertyActive == 1) {
                    if (Datewithouttime(PropertyExpirydate) >= Datewithouttime(new Date())) {
                        return "Block";
                    }
                    else {
                        return "Property Expired";
                    }
                }
                else {
                    return "UnBlock";
                }
            }
            else {
                return "Vendor Expired";
            }
        }
        else {
            return "Vendor Blocked";
        }
    }
    function ButtonColor(Role, VendorActive, VendorExpirydate, PropertyActive, PropertyExpirydate) {
        if (VendorActive == 1) {
            if (Datewithouttime(VendorExpirydate) >= Datewithouttime(new Date())) {
                if (PropertyActive == 1) {
                    if (Datewithouttime(PropertyExpirydate) >= Datewithouttime(new Date())) {
                        return "green";
                    }
                    else {
                        return "darkorange";
                    }
                }
                else {
                    return "red";
                }
            }
            else {
                return "darkorange";
            }
        }
        else {
            return "darkorange";
        }
    }
    function EditVisible(Role, VendorActive, VendorExpirydate, PropertyActive, PropertyExpirydate) {
        if (Role == "Content Manager") {
            if (VendorActive == 1) {
                if (Datewithouttime(VendorExpirydate) >= Datewithouttime(new Date())) {
                    if (PropertyActive == 1) {
                        if (Datewithouttime(PropertyExpirydate) >= Datewithouttime(new Date())) {
                            return true;
                        }
                        else {
                            return true;
                        }
                    }
                    else {
                        return false;
                    }
                }
                else {
                    return false;
                }
            }
            else {
                return false;
            }
        }
        else {
            return true;
        }
    }
    function PropertyStatus(Role, VendorActive, VendorExpirydate, PropertyActive, PropertyExpirydate) {
        if (VendorActive == 1) {
            if (Datewithouttime(VendorExpirydate) >= Datewithouttime(new Date())) {
                if (PropertyActive == 1) {
                    if (Datewithouttime(PropertyExpirydate) >= Datewithouttime(new Date())) {
                        return "Active";
                    }
                    else {
                        return "Property Expired";
                    }
                }
                else {
                    return "Property Blocked";
                }
            }
            else {
                return "Vendor Expired";
            }
        }
        else {
            return "Vendor Blocked";
        }
    }

    var get_request = $http({
        method: "Get",
        url: 'addproperty/GetPropertyData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        //////console.log(datas);
        $scope.IsBlockPermission = datas.IsBlock;
        $scope.IsEditPermission = !datas.IsEdit;
        //$scope.PropertyList = GetPropertyData(angular.copy(datas.PropertyData));
        for (var i in datas.PropertyData) {
            for (var j in datas.VendorData) {
                if (datas.PropertyData[i].vp_vendor_id == datas.VendorData[j].vd_id) {
                    $scope.PropertyList.push({
                        cm_celebrity: datas.PropertyData[i].cm_celebrity,
                        cm_comment: datas.PropertyData[i].cm_comment,
                        cm_content_duration: datas.PropertyData[i].cm_content_duration,
                        cm_content_quality: datas.PropertyData[i].cm_content_quality,
                        cm_content_type: datas.PropertyData[i].cm_content_type,
                        cm_cp_content_id: datas.PropertyData[i].cm_cp_content_id,
                        cm_created_by: datas.PropertyData[i].cm_created_by,
                        cm_created_on: datas.PropertyData[i].cm_created_on,
                        cm_display_title: datas.PropertyData[i].cm_display_title,
                        cm_expires_on: datas.PropertyData[i].cm_expires_on,
                        cm_festival_occasion: datas.PropertyData[i].cm_festival_occasion,
                        cm_genre: datas.PropertyData[i].cm_genre,
                        cm_id: datas.PropertyData[i].cm_id,
                        cm_instruments: datas.PropertyData[i].cm_instruments,
                        cm_is_active: datas.PropertyData[i].cm_is_active,
                        cm_is_app_store_purchase: datas.PropertyData[i].cm_is_app_store_purchase,
                        cm_key_words: datas.PropertyData[i].cm_key_words,
                        cm_language: datas.PropertyData[i].cm_language,
                        cm_location: datas.PropertyData[i].cm_location,
                        cm_long_description: datas.PropertyData[i].cm_long_description,
                        cm_mode: datas.PropertyData[i].cm_mode,
                        cm_modified_by: datas.PropertyData[i].cm_modified_by,
                        cm_modified_on: datas.PropertyData[i].cm_modified_on,
                        cm_mood: datas.PropertyData[i].cm_mood,
                        cm_music_director: datas.PropertyData[i].cm_music_director,
                        cm_nudity: datas.PropertyData[i].cm_nudity,
                        cm_parental_advisory: datas.PropertyData[i].cm_parental_advisory,
                        cm_property_id: datas.PropertyData[i].cm_property_id,
                        cm_protographer: datas.PropertyData[i].cm_protographer,
                        cm_r_group_id: datas.PropertyData[i].cm_r_group_id,
                        cm_raag_tal: datas.PropertyData[i].cm_raag_tal,
                        cm_rank: datas.PropertyData[i].cm_rank,
                        cm_release_year: datas.PropertyData[i].cm_release_year,
                        cm_religion: datas.PropertyData[i].cm_religion,
                        cm_short_desc: datas.PropertyData[i].cm_short_desc,
                        cm_signature: datas.PropertyData[i].cm_signature,
                        cm_singer: datas.PropertyData[i].cm_singer,
                        cm_starts_from: GetPropertyData(datas.PropertyData[i].cm_starts_from),
                        cm_state: datas.PropertyData[i].cm_state,
                        cm_sub_content_type: datas.PropertyData[i].cm_sub_content_type,
                        cm_sub_genre: datas.PropertyData[i].cm_sub_genre,
                        cm_thumb_url: datas.PropertyData[i].cm_thumb_url,
                        cm_title: datas.PropertyData[i].cm_title,
                        cm_vendor: datas.PropertyData[i].cm_vendor,
                        vd_created_by: datas.VendorData[j].vd_created_by,
                        vd_created_on: datas.VendorData[j].vd_created_on,
                        vd_desc: datas.VendorData[j].vd_desc,
                        vd_display_name: datas.VendorData[j].vd_display_name,
                        vd_email_id: datas.VendorData[j].vd_email_id,
                        vd_end_on: datas.VendorData[j].vd_end_on,
                        vd_id: datas.VendorData[j].vd_id,
                        vd_is_active: datas.VendorData[j].vd_is_active,
                        vd_mobile_no: datas.VendorData[j].vd_mobile_no,
                        vd_modified_on: datas.VendorData[j].vd_modified_on,
                        vd_modifief_by: datas.VendorData[j].vd_modifief_by,
                        vd_name: datas.VendorData[j].vd_name,
                        vd_starts_on: datas.VendorData[j].vd_starts_on,
                        vd_vendor_of: datas.VendorData[j].vd_vendor_of,
                        vp_r_group_id: datas.PropertyData[i].vp_r_group_id,
                        vp_rights_at_property_level: datas.PropertyData[i].vp_rights_at_property_level,
                        vp_vendor_id: datas.PropertyData[i].vp_vendor_id,
                        UserRole: datas.UserRole,
                        title: GetTitle(datas.UserRole, datas.VendorData[j].vd_is_active, datas.VendorData[j].vd_end_on, datas.PropertyData[i].cm_is_active, datas.PropertyData[i].cm_expires_on),
                        propertystatus: PropertyStatus(datas.UserRole, datas.VendorData[j].vd_is_active, datas.VendorData[j].vd_end_on, datas.PropertyData[i].cm_is_active, datas.PropertyData[i].cm_expires_on),
                        IsEditvisible: EditVisible(datas.UserRole, datas.VendorData[j].vd_is_active, datas.VendorData[j].vd_end_on, datas.PropertyData[i].cm_is_active, datas.PropertyData[i].cm_expires_on),
                        buttoncolor: ButtonColor(datas.UserRole, datas.VendorData[j].vd_is_active, datas.VendorData[j].vd_end_on, datas.PropertyData[i].cm_is_active, datas.PropertyData[i].cm_expires_on)
                    });
                }
            }
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.BlockColor = function (id) {
        for (var i in $scope.PropertyList) {
            if ($scope.PropertyList[i].cm_id == id) {
                if (Datewithouttime($scope.PropertyList[i].cm_expires_on) < Datewithouttime(new Date())) {
                    return "darkorange";
                }
                else {
                    if ($scope.PropertyList[i].cm_is_active == 1) {
                        return "green";
                    }
                    else {
                        return "red";
                    }
                }
            }
        }
    }

    $scope.Searchvendorclick = function (data) {
        $scope.serchvendorquery = $scope.vendorlistquery;
    }

    $scope.Searchpropertyclick = function (data) {
        $scope.serchpropertyquery = $scope.propertylistquery;
    }

    $scope.exportPropertyData = function (tableId) {
        //var exportHref = Excel.tableToExcel(tableId, 'Vendor Info');
        //$timeout(function () { location.href = exportHref; }, 100);
        var propertyListExport = [];
        $scope.PropertyList.forEach(function (data) {
            if (data.cm_title.toString().toLowerCase().indexOf($scope.serchpropertyquery) !== -1) {
                propertyListExport.push(data);
            }
        });
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportPropertyExcel',
            data: { propertyListExport: propertyListExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'properyList.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.BlockProperty = function (propertyid) {
        for (var i in $scope.PropertyList) {
            if ($scope.PropertyList[i].cm_id == propertyid) {
                if ($scope.PropertyList[i].buttoncolor != "darkorange") {
                    if ($scope.PropertyList[i].buttoncolor == "green") {
                        if (confirm("Are you want to sure block this Property?")) {
                            ngProgress.start();
                            var post_request = $http({
                                method: "Post",
                                url: 'addproperty/BlockProperty',
                                data: { cm_Id: propertyid },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            post_request.success(function (data) {
                                if (data.Result == "BlockProperty") {
                                    for (var i in $scope.PropertyList) {
                                        if ($scope.PropertyList[i].cm_id == propertyid) {
                                            $scope.PropertyList[i].cm_is_active = 0;
                                            $scope.PropertyList[i].title = GetTitle($scope.PropertyList[i].cm_expires_on, $scope.PropertyList[i].cm_is_active);
                                            $scope.PropertyList[i].propertystatus = PropertyStatus($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                            $scope.PropertyList[i].IsEditvisible = EditVisible($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                            $scope.PropertyList[i].buttoncolor = ButtonColor($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                        }
                                    }
                                }
                                ngProgress.complete();
                            });
                            post_request.error(function (data, status, headers, config) {
                                if (data != undefined) {
                                    $scope.errorvisible = true;
                                    $scope.error = data.substring(1, data.length - 1);
                                    ngProgress.complete();
                                }
                            });
                        }
                    }
                    else {
                        if (confirm("Are you want to sure Unblock this Property?")) {
                            ngProgress.start();
                            var post_request = $http({
                                method: "Post",
                                url: 'addproperty/UnBlockProperty',
                                data: { cm_Id: propertyid },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            post_request.success(function (data) {
                                if (data.Result == "UnBlockProperty") {
                                    for (var i in $scope.PropertyList) {
                                        if ($scope.PropertyList[i].cm_id == propertyid) {
                                            $scope.PropertyList[i].cm_is_active = 1;
                                            $scope.PropertyList[i].title = GetTitle($scope.PropertyList[i].cm_expires_on, $scope.PropertyList[i].cm_is_active);
                                            $scope.PropertyList[i].propertystatus = PropertyStatus($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                            $scope.PropertyList[i].IsEditvisible = EditVisible($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                            $scope.PropertyList[i].buttoncolor = ButtonColor($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                        }
                                    }
                                }
                                ngProgress.complete();
                            });
                            post_request.error(function (data, status, headers, config) {
                                if (data != undefined) {
                                    $scope.errorvisible = true;
                                    $scope.error = data.substring(1, data.length - 1);
                                    ngProgress.complete();
                                }
                            });
                        }
                    }
                }
            }
        }
    }

    $scope.UnBlockProperty = function (propertyid) {
        for (var i in $scope.PropertyList) {
            if ($scope.PropertyList[i].cm_id == propertyid) {
                if (Datewithouttime($scope.PropertyList[i].cm_expires_on) >= Datewithouttime(new Date())) {
                    if (confirm("Are you want to sure Unblock this Property?")) {
                        ngProgress.start();
                        var post_request = $http({
                            method: "Post",
                            url: 'addproperty/UnBlockProperty',
                            data: { cm_Id: propertyid },
                            headers: { 'Content-Type': 'application/json' }
                        });
                        post_request.success(function (data) {
                            if (data.Result == "UnBlockProperty") {
                                for (var i in $scope.PropertyList) {
                                    if ($scope.PropertyList[i].cm_id == propertyid) {
                                        $scope.PropertyList[i].cm_is_active = 1;
                                        $scope.PropertyList[i].title = GetTitle($scope.PropertyList[i].cm_expires_on, $scope.PropertyList[i].cm_is_active);
                                        $scope.PropertyList[i].propertystatus = PropertyStatus($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                        $scope.PropertyList[i].IsEditvisible = EditVisible($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                    }
                                }
                            }
                            ngProgress.complete();
                        });
                        post_request.error(function (data, status, headers, config) {
                            if (data != undefined) {
                                $scope.errorvisible = true;
                                $scope.error = data.substring(1, data.length - 1);
                                ngProgress.complete();
                            }
                        });
                    }
                }
            }
        }
    }

});

myApp.controller('vendor-property-list-Ctrl', function ($scope, $routeParams, $http, $timeout, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#propertylist').addClass('active');
    $('#manageproperty').addClass('active');

    //Rights Of User Code

    $scope.IsBlockPermission = false;
    $scope.vendorlist = [];
    $scope.PropertyList = [];
    $scope.serchvendorquery = "";
    $scope.serchpropertyquery = "";

    $scope.vendorcurrentPage = 0;
    $scope.vendorpageSize = 50;

    $scope.propertycurrentPage = 0;
    $scope.propertypageSize = 50;
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');



    function GetPropertyData(data) {
        data = setDate(data);
        return data;
    }

    function GetVendorData(data) {
        for (var i in data) {
            data[i].vd_created_on = setDate(data[i].vd_created_on);
        }
        return data;
    }

    function GetTitle(Role, VendorActive, VendorExpirydate, PropertyActive, PropertyExpirydate) {
        if (VendorActive == 1) {
            if (Datewithouttime(VendorExpirydate) >= Datewithouttime(new Date())) {
                if (PropertyActive == 1) {
                    if (Datewithouttime(PropertyExpirydate) >= Datewithouttime(new Date())) {
                        return "Block";
                    }
                    else {
                        return "Property Expired";
                    }
                }
                else {
                    return "UnBlock";
                }
            }
            else {
                //console.log("test");
                return "Vendor Expired";
            }
        }
        else {
            return "Vendor Blocked";
        }
    }
    function ButtonColor(Role, VendorActive, VendorExpirydate, PropertyActive, PropertyExpirydate) {
        if (VendorActive == 1) {
            if (Datewithouttime(VendorExpirydate) >= Datewithouttime(new Date())) {
                if (PropertyActive == 1) {
                    if (Datewithouttime(PropertyExpirydate) >= Datewithouttime(new Date())) {
                        return "green";
                    }
                    else {
                        return "darkorange";
                    }
                }
                else {
                    return "red";
                }
            }
            else {
                return "darkorange";
            }
        }
        else {
            return "darkorange";
        }
    }
    function EditVisible(Role, VendorActive, VendorExpirydate, PropertyActive, PropertyExpirydate) {
        if (Role == "Content Manager") {
            if (VendorActive == 1) {
                if (Datewithouttime(VendorExpirydate) >= Datewithouttime(new Date())) {
                    if (PropertyActive == 1) {
                        if (Datewithouttime(PropertyExpirydate) >= Datewithouttime(new Date())) {
                            return true;
                        }
                        else {
                            return true;
                        }
                    }
                    else {
                        return false;
                    }
                }
                else {
                    return false;
                }
            }
            else {
                return false;
            }
        }
        else {
            return true;
        }
    }
    function PropertyStatus(Role, VendorActive, VendorExpirydate, PropertyActive, PropertyExpirydate) {
        if (VendorActive == 1) {
            if (Datewithouttime(VendorExpirydate) >= Datewithouttime(new Date())) {
                if (PropertyActive == 1) {
                    if (Datewithouttime(PropertyExpirydate) >= Datewithouttime(new Date())) {
                        return "Active";
                    }
                    else {
                        return "Property Expired";
                    }
                }
                else {
                    return "Property Blocked";
                }
            }
            else {
                return "Vendor Expired";
            }
        }
        else {
            return "Vendor Blocked";
        }
    }

    var get_request = $http({
        method: "Post",
        url: 'addproperty/GetVendor_PropertyData',
        data: { 'vd_id': $routeParams.id },
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        ////console.log(datas);
        $scope.IsBlockPermission = datas.IsBlock;
        $scope.IsEditPermission = !datas.IsEdit;
        //$scope.PropertyList = GetPropertyData(angular.copy(datas.PropertyData));
        for (var i in datas.PropertyData) {
            for (var j in datas.VendorData) {
                if (datas.PropertyData[i].vp_vendor_id == datas.VendorData[j].vd_id) {
                    $scope.PropertyList.push({
                        cm_celebrity: datas.PropertyData[i].cm_celebrity,
                        cm_comment: datas.PropertyData[i].cm_comment,
                        cm_content_duration: datas.PropertyData[i].cm_content_duration,
                        cm_content_quality: datas.PropertyData[i].cm_content_quality,
                        cm_content_type: datas.PropertyData[i].cm_content_type,
                        cm_cp_content_id: datas.PropertyData[i].cm_cp_content_id,
                        cm_created_by: datas.PropertyData[i].cm_created_by,
                        cm_created_on: datas.PropertyData[i].cm_created_on,
                        cm_display_title: datas.PropertyData[i].cm_display_title,
                        cm_expires_on: datas.PropertyData[i].cm_expires_on,
                        cm_festival_occasion: datas.PropertyData[i].cm_festival_occasion,
                        cm_genre: datas.PropertyData[i].cm_genre,
                        cm_id: datas.PropertyData[i].cm_id,
                        cm_instruments: datas.PropertyData[i].cm_instruments,
                        cm_is_active: datas.PropertyData[i].cm_is_active,
                        cm_is_app_store_purchase: datas.PropertyData[i].cm_is_app_store_purchase,
                        cm_key_words: datas.PropertyData[i].cm_key_words,
                        cm_language: datas.PropertyData[i].cm_language,
                        cm_location: datas.PropertyData[i].cm_location,
                        cm_long_description: datas.PropertyData[i].cm_long_description,
                        cm_mode: datas.PropertyData[i].cm_mode,
                        cm_modified_by: datas.PropertyData[i].cm_modified_by,
                        cm_modified_on: datas.PropertyData[i].cm_modified_on,
                        cm_mood: datas.PropertyData[i].cm_mood,
                        cm_music_director: datas.PropertyData[i].cm_music_director,
                        cm_nudity: datas.PropertyData[i].cm_nudity,
                        cm_parental_advisory: datas.PropertyData[i].cm_parental_advisory,
                        cm_property_id: datas.PropertyData[i].cm_property_id,
                        cm_protographer: datas.PropertyData[i].cm_protographer,
                        cm_r_group_id: datas.PropertyData[i].cm_r_group_id,
                        cm_raag_tal: datas.PropertyData[i].cm_raag_tal,
                        cm_rank: datas.PropertyData[i].cm_rank,
                        cm_release_year: datas.PropertyData[i].cm_release_year,
                        cm_religion: datas.PropertyData[i].cm_religion,
                        cm_short_desc: datas.PropertyData[i].cm_short_desc,
                        cm_signature: datas.PropertyData[i].cm_signature,
                        cm_singer: datas.PropertyData[i].cm_singer,
                        cm_starts_from: GetPropertyData(datas.PropertyData[i].cm_starts_from),
                        cm_state: datas.PropertyData[i].cm_state,
                        cm_sub_content_type: datas.PropertyData[i].cm_sub_content_type,
                        cm_sub_genre: datas.PropertyData[i].cm_sub_genre,
                        cm_thumb_url: datas.PropertyData[i].cm_thumb_url,
                        cm_title: datas.PropertyData[i].cm_title,
                        cm_vendor: datas.PropertyData[i].cm_vendor,
                        vd_created_by: datas.VendorData[j].vd_created_by,
                        vd_created_on: datas.VendorData[j].vd_created_on,
                        vd_desc: datas.VendorData[j].vd_desc,
                        vd_display_name: datas.VendorData[j].vd_display_name,
                        vd_email_id: datas.VendorData[j].vd_email_id,
                        vd_end_on: datas.VendorData[j].vd_end_on,
                        vd_id: datas.VendorData[j].vd_id,
                        vd_is_active: datas.VendorData[j].vd_is_active,
                        vd_mobile_no: datas.VendorData[j].vd_mobile_no,
                        vd_modified_on: datas.VendorData[j].vd_modified_on,
                        vd_modifief_by: datas.VendorData[j].vd_modifief_by,
                        vd_name: datas.VendorData[j].vd_name,
                        vd_starts_on: datas.VendorData[j].vd_starts_on,
                        vd_vendor_of: datas.VendorData[j].vd_vendor_of,
                        vp_r_group_id: datas.PropertyData[i].vp_r_group_id,
                        vp_rights_at_property_level: datas.PropertyData[i].vp_rights_at_property_level,
                        vp_vendor_id: datas.PropertyData[i].vp_vendor_id,
                        UserRole: datas.UserRole,
                        title: GetTitle(datas.UserRole, datas.VendorData[j].vd_is_active, datas.VendorData[j].vd_end_on, datas.PropertyData[i].cm_is_active, datas.PropertyData[i].cm_expires_on),
                        propertystatus: PropertyStatus(datas.UserRole, datas.VendorData[j].vd_is_active, datas.VendorData[j].vd_end_on, datas.PropertyData[i].cm_is_active, datas.PropertyData[i].cm_expires_on),
                        IsEditvisible: EditVisible(datas.UserRole, datas.VendorData[j].vd_is_active, datas.VendorData[j].vd_end_on, datas.PropertyData[i].cm_is_active, datas.PropertyData[i].cm_expires_on),
                        buttoncolor: ButtonColor(datas.UserRole, datas.VendorData[j].vd_is_active, datas.VendorData[j].vd_end_on, datas.PropertyData[i].cm_is_active, datas.PropertyData[i].cm_expires_on)
                    });
                }
            }
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.BlockColor = function (id) {
        for (var i in $scope.PropertyList) {
            if ($scope.PropertyList[i].cm_id == id) {
                if (Datewithouttime($scope.PropertyList[i].cm_expires_on) < Datewithouttime(new Date())) {
                    return "darkorange";
                }
                else {
                    if ($scope.PropertyList[i].cm_is_active == 1) {
                        return "green";
                    }
                    else {
                        return "red";
                    }
                }
            }
        }
    }

    $scope.Searchvendorclick = function (data) {
        $scope.serchvendorquery = $scope.vendorlistquery;
    }

    $scope.Searchpropertyclick = function (data) {
        $scope.serchpropertyquery = $scope.propertylistquery;
    }

    $scope.exportPropertyData = function (tableId) {
        //var exportHref = Excel.tableToExcel(tableId, 'Vendor Info');
        //$timeout(function () { location.href = exportHref; }, 100);
        var propertyListExport = [];
        $scope.PropertyList.forEach(function (data) {
            if (data.cm_title.toString().toLowerCase().indexOf($scope.serchpropertyquery) !== -1) {
                propertyListExport.push(data);
            }
        });
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportPropertyExcel',
            data: { propertyListExport: propertyListExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'properyList.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.BlockProperty = function (propertyid) {
        for (var i in $scope.PropertyList) {
            if ($scope.PropertyList[i].cm_id == propertyid) {
                if ($scope.PropertyList[i].buttoncolor != "darkorange") {
                    if ($scope.PropertyList[i].buttoncolor == "green") {
                        if (confirm("Are you want to sure block this Property?")) {
                            ngProgress.start();
                            var post_request = $http({
                                method: "Post",
                                url: 'addproperty/BlockProperty',
                                data: { cm_Id: propertyid },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            post_request.success(function (data) {
                                if (data.Result == "BlockProperty") {
                                    for (var i in $scope.PropertyList) {
                                        if ($scope.PropertyList[i].cm_id == propertyid) {
                                            $scope.PropertyList[i].cm_is_active = 0;
                                            $scope.PropertyList[i].title = GetTitle($scope.PropertyList[i].cm_expires_on, $scope.PropertyList[i].cm_is_active);
                                            $scope.PropertyList[i].propertystatus = PropertyStatus($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                            $scope.PropertyList[i].IsEditvisible = EditVisible($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                            $scope.PropertyList[i].buttoncolor = ButtonColor($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                        }
                                    }
                                }
                                ngProgress.complete();
                            });
                            post_request.error(function (data, status, headers, config) {
                                if (data != undefined) {
                                    $scope.errorvisible = true;
                                    $scope.error = data.substring(1, data.length - 1);
                                    ngProgress.complete();
                                }
                            });
                        }
                    }
                    else {
                        if (confirm("Are you want to sure Unblock this Property?")) {
                            ngProgress.start();
                            var post_request = $http({
                                method: "Post",
                                url: 'addproperty/UnBlockProperty',
                                data: { cm_Id: propertyid },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            post_request.success(function (data) {
                                if (data.Result == "UnBlockProperty") {
                                    for (var i in $scope.PropertyList) {
                                        if ($scope.PropertyList[i].cm_id == propertyid) {
                                            $scope.PropertyList[i].cm_is_active = 1;
                                            $scope.PropertyList[i].title = GetTitle($scope.PropertyList[i].cm_expires_on, $scope.PropertyList[i].cm_is_active);
                                            $scope.PropertyList[i].propertystatus = PropertyStatus($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                            $scope.PropertyList[i].IsEditvisible = EditVisible($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                            $scope.PropertyList[i].buttoncolor = ButtonColor($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                        }
                                    }
                                }
                                ngProgress.complete();
                            });
                            post_request.error(function (data, status, headers, config) {
                                if (data != undefined) {
                                    $scope.errorvisible = true;
                                    $scope.error = data.substring(1, data.length - 1);
                                    ngProgress.complete();
                                }
                            });
                        }
                    }
                }
            }
        }
    }

    $scope.UnBlockProperty = function (propertyid) {
        for (var i in $scope.PropertyList) {
            if ($scope.PropertyList[i].cm_id == propertyid) {
                if (Datewithouttime($scope.PropertyList[i].cm_expires_on) >= Datewithouttime(new Date())) {
                    if (confirm("Are you want to sure Unblock this Property?")) {
                        ngProgress.start();
                        var post_request = $http({
                            method: "Post",
                            url: 'addproperty/UnBlockProperty',
                            data: { cm_Id: propertyid },
                            headers: { 'Content-Type': 'application/json' }
                        });
                        post_request.success(function (data) {
                            if (data.Result == "UnBlockProperty") {
                                for (var i in $scope.PropertyList) {
                                    if ($scope.PropertyList[i].cm_id == propertyid) {
                                        $scope.PropertyList[i].cm_is_active = 1;
                                        $scope.PropertyList[i].title = GetTitle($scope.PropertyList[i].cm_expires_on, $scope.PropertyList[i].cm_is_active);
                                        $scope.PropertyList[i].propertystatus = PropertyStatus($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                        $scope.PropertyList[i].IsEditvisible = EditVisible($scope.PropertyList[i].UserRole, $scope.PropertyList[i].vd_is_active, $scope.PropertyList[i].vd_end_on, $scope.PropertyList[i].cm_is_active, $scope.PropertyList[i].cm_expires_on);
                                    }
                                }
                            }
                            ngProgress.complete();
                        });
                        post_request.error(function (data, status, headers, config) {
                            if (data != undefined) {
                                $scope.errorvisible = true;
                                $scope.error = data.substring(1, data.length - 1);
                                ngProgress.complete();
                            }
                        });
                    }
                }
            }
        }
    }
});

myApp.controller('wallpaperCtrl', function ($scope, $http, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');

    $('#wallpaper').addClass('active');
    $('#addcontentmetadata').addClass('active');
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.Vendor = [];
    $scope.AllProperty = [];
    $scope.Genres = [];
    $scope.SubGenres = [];
    $scope.Mood = [];
    $scope.Languages = [];
    $scope.Nudity = [];
    $scope.Festival = [];
    $scope.Religion = [];
    $scope.AllCountryRights = [];
    $scope.AllChannelRights = [];
    $scope.Celebrity = [];
    $scope.SelfRanking = [];
    //$scope.PhotographerData = [];
    //$scope.LocationData = [];

    $scope.WallPaperDetail = [];

    $scope.Property = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];
    $scope.DisplayTitle = "";
    $scope.Description = "";

    $scope.Duration = "";
    $scope.Location = "";
    $scope.SearchKeywords = "";
    $scope.ContentId = "";
    $scope.PhotoGrapher = "";
    $scope.RightSettingShow = false;

    $scope.VendorValidation = false;
    $scope.PropertyValidation = false;
    $scope.TitleValidation = false;
    $scope.DescriptionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.SubGenresValidation = false;
    $scope.MoodValidation = false;
    $scope.LanguagesValidation = false;
    $scope.FestivalValidation = false;
    $scope.ReligionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.SelfRankingValidation = false;
    $scope.MoodValidation = false;
    $scope.LanguagesValidation = false;
    $scope.GenresValidation = false;
    $scope.NudityValidation = false;
    $scope.KeywordValidation = false;
    $scope.UniqueCPContentId = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;

    $scope.SelectedVendor = 0;
    $scope.SelectedProperty = 0;
    $scope.SelectedGenres = 0;
    $scope.SelectedSubGenres = 0;
    $scope.SelectedMood = 0;
    $scope.SelectedLanguages = 0;
    $scope.SelectedNudity = 0;
    $scope.SelectedFestival = 0;
    $scope.SelectedReligion = 0;
    $scope.SelectedCelebrity = 0;
    $scope.SelectedLocation = 0;
    $scope.SelectedSelfRanking = 0;
    $scope.SelectedCountryRights = [];
    $scope.SelectedChannelRights = [];
    $scope.SaveEnable = false;
    $scope.IsDisable = true;
    $scope.PropertyDisable = true;

    $scope.AllPropertyDetail = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];

    $scope.Startdate = getDate(new Date());
    $scope.Expirydate = "";
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.Permission = true;
    $scope.IsDisabled = false;
    if ($scope.Permission == true) {
        $scope.IsDisabled = false;
    }
    else {
        $scope.IsDisabled = true;
    }

    var get_request = $http({
        method: "Get",
        url: 'wallpaper/GetWallpaperData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        ////console.log(datas);
        if (datas.UserRole === "Content Manager") {
            for (var i in datas.Wallpaperdata) {
                if (datas.Wallpaperdata[i].cd_cm_id == 3) {
                    $scope.AllCountryRights.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 4) {
                    $scope.AllChannelRights.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 5) {
                    $scope.Genres.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 6) {
                    $scope.SubGenres.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 7) {
                    $scope.Mood.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 8) {
                    $scope.Languages.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 9) {
                    $scope.Celebrity.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 10) {
                    $scope.Festival.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 11) {
                    $scope.Religion.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 25) {
                    $scope.SelfRanking.push(datas.Wallpaperdata[i]);
                }
                if (datas.Wallpaperdata[i].cd_cm_id == 26) {
                    $scope.Nudity.push(datas.Wallpaperdata[i]);
                }
            }
            $scope.AllPropertyDetail = angular.copy(datas.AllPropertyData);
            $scope.AllProperty = angular.copy(datas.PropertyData);
            $scope.Vendor = angular.copy(datas.VendorData);


        }
        else {
            location.href = "/";
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.VendorChange = function () {
        $scope.Property = [];
        $scope.PropertyDisable = false;
        $scope.RightSettingShow = false;

        if ($scope.SelectedVendor != 0) {
            for (var i in $scope.AllProperty) {
                if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                    $scope.Property.push($scope.AllProperty[i]);
                    $scope.PropertyDisable = false;
                    $scope.SelectedProperty = 0;
                }
            }
        }
        else {
            $scope.PropertyDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
        if ($scope.Property.length <= 0) {
            $scope.IsDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
    }

    $scope.PropertyChange = function () {
        $scope.RightSettingShow = false;
        $scope.IsDisable = true;
        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        if ($scope.SelectedProperty != 0) {
            for (var i in $scope.Property) {
                if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                    for (var j in $scope.AllCountryRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                    flag = true;
                                }
                                //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            country.push($scope.AllCountryRights[j].cd_id);
                            $scope.CountryRights.push($scope.AllCountryRights[j]);
                        }
                    }
                    for (var j in $scope.AllChannelRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                    flag = true;
                                }
                                //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            channel.push($scope.AllChannelRights[j].cd_id);
                            $scope.ChannelRights.push($scope.AllChannelRights[j]);
                        }
                    }
                    if ($scope.Property[i].r_rights_at_content_level == 1) {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = true;
                    }
                    else {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = false;
                    }
                }
            }
        }
        else {
            $scope.IsDisable = true;
            $scope.RightSettingShow = false;
        }
    }

    $scope.SaveWallPaper = function () {
        $scope.VendorValidation = false;
        $scope.PropertyValidation = false;
        $scope.TitleValidation = false;
        $scope.DescriptionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.SubGenresValidation = false;
        $scope.MoodValidation = false;
        $scope.LanguagesValidation = false;
        $scope.FestivalValidation = false;
        $scope.ReligionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.SelfRankingValidation = false;
        $scope.MoodValidation = false;
        $scope.LanguagesValidation = false;
        $scope.GenresValidation = false;
        $scope.NudityValidation = false;
        $scope.KeywordValidation = false;
        $scope.DateConflictValidation = false;
        $scope.UniqueCPContentId = false;
        $scope.CheckPropertyDateValidation = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;
        var Rights = [];

        if ($scope.SelectedVendor != 0) {
            if ($scope.SelectedProperty != 0) {
                for (var i in $scope.Property) {
                    if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                        //if ($scope.DisplayTitle != "") {
                        //if ($scope.Description != "") {
                        //if ($scope.SelectedCelebrity != 0) {
                        if ($scope.SelectedGenres != 0) {
                            //if ($scope.SelectedSubGenres != 0) {
                            //if ($scope.SelectedMood != 0) {
                            //if ($scope.SelectedLanguages != 0) {
                            if ($scope.SelectedNudity != 0) {
                                //if ($scope.SelectedFestival != 0) {
                                //if ($scope.SelectedReligion != 0) {
                                //if ($scope.SelectedSelfRanking != 0) {
                                if (new Date($scope.Startdate) <= new Date($scope.Expirydate)) {
                                    if (new Date($scope.Property[i].cm_starts_from) <= new Date($scope.Startdate) && new Date($scope.Property[i].cm_expires_on) >= new Date($scope.Expirydate)) {
                                        //if ($scope.SearchKeywords != "") {
                                        if ($scope.RightSettingShow == true) {
                                            if ($scope.SelectedCountryRights.length > 0) {
                                                if ($scope.SelectedChannelRights.length > 0) {
                                                    for (var i in $scope.SelectedCountryRights) {
                                                        for (var j in $scope.SelectedChannelRights) {
                                                            Rights.push({ CountryRights: $scope.SelectedCountryRights[i], ChannelRights: $scope.SelectedChannelRights[j] });
                                                        }
                                                    }
                                                    var datas = {
                                                        DisplayTitle: $scope.DisplayTitle,
                                                        Description: $scope.Description,
                                                        ContentId: $scope.ContentId,
                                                        Vendor: $scope.SelectedVendor,
                                                        Property: $scope.SelectedProperty,
                                                        Genres: $scope.SelectedGenres,
                                                        SubGenres: $scope.SelectedSubGenres,
                                                        Mood: $scope.SelectedMood,
                                                        Languages: $scope.SelectedLanguages,
                                                        Nudity: $scope.SelectedNudity,
                                                        Festival: $scope.SelectedFestival,
                                                        Religion: $scope.SelectedReligion,
                                                        Rights: Rights,
                                                        SelfRanking: $scope.SelectedSelfRanking,
                                                        StartDate: $scope.Startdate,
                                                        ExpiryDate: $scope.Expirydate,
                                                        RightsSetting: $scope.RightSettingShow
                                                    };
                                                    var NewArray = [];
                                                    NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9 });
                                                    NewArray.push({ Name: "PhotoGrapher", Value: $scope.PhotoGrapher, Id: 22 });
                                                    NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23 });
                                                    NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24 });
                                                    NewArray.push({ Name: "datass", Value: datas });

                                                    ngProgress.start();
                                                    if (NewArray.length > 0) {
                                                        var post_request = $http({
                                                            method: "Post",
                                                            url: 'wallpaper/AddWallpaper',
                                                            data: NewArray,
                                                            headers: { 'Content-Type': 'application/json' }
                                                        });
                                                        post_request.success(function (data) {
                                                            ngProgress.complete();
                                                            $scope.Cm_ID = data.cm_id;
                                                            if (data.Result == "Success") {
                                                                $scope.Property = [];
                                                                $scope.CountryRights = [];
                                                                $scope.ChannelRights = [];
                                                                $scope.DisplayTitle = "";
                                                                $scope.Description = "";
                                                                $scope.SelectedCelebrity = 0;
                                                                $scope.Duration = "";
                                                                $scope.Location = "";
                                                                $scope.SearchKeywords = "";
                                                                $scope.ContentId = "";
                                                                $scope.PhotoGrapher = "";
                                                                $scope.RightSettingShow = false;
                                                                $scope.SelectedVendor = 0;
                                                                $scope.SelectedProperty = 0;
                                                                $scope.SelectedGenres = 0;
                                                                $scope.SelectedSubGenres = 0;
                                                                $scope.SelectedMood = 0;
                                                                $scope.SelectedLanguages = 0;
                                                                $scope.SelectedNudity = 0;
                                                                $scope.SelectedFestival = 0;
                                                                $scope.SelectedReligion = 0;
                                                                $scope.SelectedCountryRights = [];
                                                                $scope.SelectedChannelRights = [];
                                                                $scope.SaveEnable = false;
                                                                $scope.IsDisable = true;
                                                                $scope.PropertyDisable = true;
                                                                $scope.Startdate = getDate(new Date());
                                                                $scope.Expirydate = "";
                                                                $scope.successvisible = true;
                                                                $scope.success = "Record inserted successfully. Your Unique MetaData Id is '" + $scope.Cm_ID + "'";
                                                            }
                                                            else if (data.Result == "ContentIdError") {
                                                                $scope.UniqueCPContentId = true;
                                                            }
                                                        });
                                                        post_request.error(function (data, status, headers, config) {
                                                            ngProgress.complete();
                                                            if (data != undefined) {
                                                                $scope.errorvisible = true;
                                                                $scope.error = data.substring(1, data.length - 1);
                                                            }
                                                        });
                                                    }

                                                }
                                                else {
                                                    $scope.ChannelRightsValidation = true;
                                                }
                                            }
                                            else {
                                                $scope.CountryRightsValidation = true;
                                            }
                                        }
                                        else {
                                            Rights = [];
                                            var datas = {
                                                DisplayTitle: $scope.DisplayTitle,
                                                Description: $scope.Description,
                                                ContentId: $scope.ContentId,
                                                Vendor: $scope.SelectedVendor,
                                                Property: $scope.SelectedProperty,
                                                Genres: $scope.SelectedGenres,
                                                SubGenres: $scope.SelectedSubGenres,
                                                Mood: $scope.SelectedMood,
                                                Languages: $scope.SelectedLanguages,
                                                Nudity: $scope.SelectedNudity,
                                                Festival: $scope.SelectedFestival,
                                                Religion: $scope.SelectedReligion,
                                                Rights: Rights,
                                                StartDate: $scope.Startdate,
                                                SelfRanking: $scope.SelectedSelfRanking,
                                                ExpiryDate: $scope.Expirydate,
                                                RightsSetting: $scope.RightSettingShow
                                            };
                                            var NewArray = [];
                                            NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9 });
                                            NewArray.push({ Name: "PhotoGrapher", Value: $scope.PhotoGrapher, Id: 22 });
                                            NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23 });
                                            NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24 });
                                            NewArray.push({ Name: "datass", Value: datas });

                                            ngProgress.start();

                                            if (NewArray.length > 0) {
                                                var post_request = $http({
                                                    method: "Post",
                                                    url: 'wallpaper/AddWallpaper',
                                                    data: NewArray,
                                                    headers: { 'Content-Type': 'application/json' }
                                                });
                                                post_request.success(function (data) {
                                                    ngProgress.complete();
                                                    $scope.Cm_ID = data.cm_id;
                                                    if (data.Result == "Success") {
                                                        $scope.Property = [];
                                                        $scope.CountryRights = [];
                                                        $scope.ChannelRights = [];
                                                        $scope.DisplayTitle = "";
                                                        $scope.Description = "";
                                                        $scope.SelectedCelebrity = 0;
                                                        $scope.Duration = "";
                                                        $scope.Location = "";
                                                        $scope.SearchKeywords = "";
                                                        $scope.ContentId = "";
                                                        $scope.PhotoGrapher = "";
                                                        $scope.RightSettingShow = false;
                                                        $scope.SelectedVendor = 0;
                                                        $scope.SelectedProperty = 0;
                                                        $scope.SelectedGenres = 0;
                                                        $scope.SelectedSubGenres = 0;
                                                        $scope.SelectedMood = 0;
                                                        $scope.SelectedLanguages = 0;
                                                        $scope.SelectedNudity = 0;
                                                        $scope.SelectedFestival = 0;
                                                        $scope.SelectedReligion = 0;
                                                        $scope.SelectedCountryRights = [];
                                                        $scope.SelectedChannelRights = [];
                                                        $scope.SaveEnable = false;
                                                        $scope.IsDisable = true;
                                                        $scope.PropertyDisable = true;
                                                        $scope.Startdate = getDate(new Date());
                                                        $scope.Expirydate = "";
                                                        $scope.successvisible = true;
                                                        $scope.success = "Record inserted successfully. Your Unique MetaData Id is '" + $scope.Cm_ID + "'";
                                                    }
                                                    else if (data.Result == "ContentIdError") {
                                                        $scope.UniqueCPContentId = true;
                                                    }
                                                });
                                                post_request.error(function (data, status, headers, config) {
                                                    ngProgress.complete();
                                                    if (data != undefined) {
                                                        $scope.errorvisible = true;
                                                        $scope.error = data.substring(1, data.length - 1);
                                                    }
                                                });
                                            }

                                        }
                                        //Add Wallpaper In database..


                                        //}
                                        //else {
                                        //    $scope.KeywordValidation = true;
                                        //}
                                    }
                                    else {
                                        $scope.CheckPropertyDateValidation = true;
                                    }
                                }
                                else {
                                    $scope.DateConflictValidation = true;
                                }
                                //}
                                //else {
                                //    $scope.SelfRankingValidation = true;
                                //}
                                //}
                                //else {
                                //    $scope.ReligionValidation = true;
                                //}
                                //}
                                //else {
                                //    $scope.FestivalValidation = true;
                                //}
                            }
                            else {
                                $scope.NudityValidation = true;
                            }
                            //}
                            //else {
                            //    $scope.LanguagesValidation = true;
                            //}
                            //}
                            //else {
                            //    $scope.MoodValidation = true;
                            //}
                            //}
                            //else {
                            //    $scope.SubGenresValidation = true;
                            //}
                        }
                        else {
                            $scope.GenresValidation = true;
                        }
                        //}
                        //else {
                        //    $scope.CelebrityValidation = true;
                        //}
                        //}
                        //else {
                        //    $scope.DescriptionValidation = true;
                        //}
                        //}
                        //else {
                        //    $scope.TitleValidation = true;
                        //}
                    }
                }
            }
            else {
                $scope.PropertyValidation = true;
            }
        }
        else {
            $scope.VendorValidation = true;
        }
    }

    $scope.ResetWallpaper = function () {
        $scope.Property = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        $scope.DisplayTitle = "";
        $scope.Description = "";
        $scope.SelectedCelebrity = 0;
        $scope.Duration = "";
        $scope.Location = "";
        $scope.SearchKeywords = "";
        $scope.ContentId = "";
        $scope.PhotoGrapher = "";
        $scope.RightSettingShow = false;
        $scope.SelectedVendor = 0;
        $scope.SelectedProperty = 0;
        $scope.SelectedGenres = 0;
        $scope.SelectedSubGenres = 0;
        $scope.SelectedMood = 0;
        $scope.SelectedLanguages = 0;
        $scope.SelectedNudity = 0;
        $scope.SelectedFestival = 0;
        $scope.SelectedReligion = 0;
        $scope.SelectedCountryRights = [];
        $scope.SelectedChannelRights = [];
        $scope.SaveEnable = false;
        $scope.IsDisable = true;
        $scope.PropertyDisable = true;
        $scope.Startdate = getDate(new Date());
        $scope.Expirydate = "";
    }

});

myApp.controller('editwallpaperCtrl', function ($scope, $http, $routeParams, $window, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addcontentmetadata').addClass('active');
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.Vendor = [];
    $scope.AllProperty = [];
    $scope.Genres = [];
    $scope.SubGenres = [];
    $scope.Mood = [];
    $scope.Languages = [];
    $scope.Nudity = [];
    $scope.Festival = [];
    $scope.Religion = [];
    $scope.AllCountryRights = [];
    $scope.AllChannelRights = [];
    $scope.Celebrity = [];
    $scope.SelfRanking = [];

    $scope.AllPhotoGraphers = [];
    $scope.AllLocations = [];
    $scope.AllKeywords = [];

    $scope.WallPaperDetail = [];

    $scope.Property = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];
    $scope.Duration = "";
    $scope.Location = "";
    $scope.SearchKeywords = "";

    $scope.PhotoGrapher = "";
    $scope.RightSettingShow = true;

    $scope.VendorValidation = false;
    $scope.PropertyValidation = false;
    $scope.TitleValidation = false;
    $scope.DescriptionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.SubGenresValidation = false;
    $scope.MoodValidation = false;
    $scope.LanguagesValidation = false;
    $scope.FestivalValidation = false;
    $scope.ReligionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.SelfRankingValidation = false;
    $scope.MoodValidation = false;
    $scope.LanguagesValidation = false;
    $scope.GenresValidation = false;
    $scope.NudityValidation = false;
    $scope.KeywordValidation = false;
    $scope.UniqueCPContentId = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;

    $scope.SelectedCountryRights = [];
    $scope.SelectedChannelRights = [];
    $scope.PropertyDisable = false;

    $scope.SelectedOldVendor = "";
    $scope.SelectedOldProperty = "";

    $scope.Startdate = getDate(new Date());
    $scope.Expirydate = "";
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    $scope.AllPropertyDetail = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];

    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.IsDisable = false;

    var get_request = $http({
        method: "Post",
        url: 'wallpaper/GetEditWallpaperData',
        data: { 'cm_id': $routeParams.id },
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        ////console.log(datas);
        $scope.IsDisable = datas.IsEdit;

        $scope.SubGenres.unshift({ cd_id: 0, cd_name: "Select Sub Genres" });
        $scope.Mood.unshift({ cd_id: 0, cd_name: "Select Mood" });
        $scope.Celebrity.unshift({ cd_id: 0, cd_name: "Select Celebrity" });
        $scope.Languages.unshift({ cd_id: 0, cd_name: "Select Languages" });
        $scope.Festival.unshift({ cd_id: 0, cd_name: "Select Festival" });
        $scope.Religion.unshift({ cd_id: 0, cd_name: "Select Religion" });
        $scope.SelfRanking.unshift({ cd_id: 0, cd_name: "Select SelfRanking" });


        for (var i in datas.Wallpaperdata) {
            if (datas.Wallpaperdata[i].cd_cm_id == 3) {
                $scope.AllCountryRights.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 4) {
                $scope.AllChannelRights.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 5) {
                $scope.Genres.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 6) {
                $scope.SubGenres.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 7) {
                $scope.Mood.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 8) {
                $scope.Languages.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 9) {
                $scope.Celebrity.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 10) {
                $scope.Festival.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 11) {
                $scope.Religion.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 25) {
                $scope.SelfRanking.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 26) {
                $scope.Nudity.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 22) {
                $scope.AllPhotoGraphers.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 23) {
                $scope.AllLocations.push(datas.Wallpaperdata[i]);
            }
            if (datas.Wallpaperdata[i].cd_cm_id == 24) {
                $scope.AllKeywords.push(datas.Wallpaperdata[i]);
            }
        }
        for (var i in datas.ContentMetadata) {
            $scope.SelectedVendor = CheckNull(datas.ContentMetadata[0].cm_vendor);
            $scope.SelectedProperty = CheckNull(datas.ContentMetadata[0].cm_property_id);
            $scope.SelectedOldVendor = CheckNull(datas.ContentMetadata[0].cm_vendor);
            $scope.SelectedOldProperty = CheckNull(datas.ContentMetadata[0].cm_property_id);
            $scope.SelectedGenres = CheckNull(datas.ContentMetadata[0].cm_genre);
            $scope.SelectedSubGenres = CheckNull(datas.ContentMetadata[0].cm_sub_genre);
            $scope.SelectedMood = CheckNull(datas.ContentMetadata[0].cm_mood);
            $scope.SelectedLanguages = CheckNull(datas.ContentMetadata[0].cm_language);
            $scope.SelectedNudity = CheckNull(datas.ContentMetadata[0].cm_nudity);
            $scope.SelectedFestival = CheckNull(datas.ContentMetadata[0].cm_festival_occasion);
            $scope.SelectedReligion = CheckNull(datas.ContentMetadata[0].cm_religion);
            $scope.Startdate = getDate(new Date(datas.ContentMetadata[0].cm_starts_from));
            $scope.Expirydate = getDate(new Date(datas.ContentMetadata[0].cm_expires_on));
            //$('#dpStart').datepicker('setDate', new Date(datas.ContentMetadata[0].cm_starts_from));
            //$('#dpStart').datepicker('update');
            //$('#dpEnd').datepicker('setDate', new Date(datas.ContentMetadata[0].cm_expires_on));
            //$('#dpEnd').datepicker('update');
            $scope.SelectedSelfRanking = CheckNull(datas.ContentMetadata[0].cm_rank);
            $scope.DisplayTitle = datas.ContentMetadata[0].cm_title;
            $scope.Description = datas.ContentMetadata[0].cm_short_desc;
            $scope.SearchKeywords = datas.ContentMetadata[0].keyword_cd_name;
            $scope.SelectedCelebrity = CheckNull(datas.ContentMetadata[0].celebrity_cd_id);
            $scope.ContentId = datas.ContentMetadata[0].cm_cp_content_id;
            $scope.CelebrityGroupId = datas.ContentMetadata[0].celebrity_cmd_id;
            $scope.KeywordGroupId = datas.ContentMetadata[0].keyword_group;
            $scope.CM_ID = datas.ContentMetadata[0].cm_id;
            $scope.PhotoGrapherId = datas.ContentMetadata[0].cm_protographer;
            $scope.LocationId = datas.ContentMetadata[0].cm_location;
            $scope.KeyWordId = datas.ContentMetadata[0].keyword_cd_id;
            $scope.GroupId = datas.ContentMetadata[0].cm_r_group_id;
        }
        $scope.selectedrightsdata = angular.copy(datas.RightsData);
        $scope.OldRightData = $scope.selectedrightsdata;

        ////console.log($scope.OldRightData, "$scope.OldRightData");

        $scope.SelectedCountryRights = [];
        $scope.SelectedChannelRights = [];

        for (var i in $scope.selectedrightsdata) {
            if ($scope.SelectedCountryRights.indexOf($scope.selectedrightsdata[i].r_country_distribution_rights) == -1) {
                $scope.SelectedCountryRights.push($scope.selectedrightsdata[i].r_country_distribution_rights);
            }
            if ($scope.SelectedChannelRights.indexOf($scope.selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                $scope.SelectedChannelRights.push($scope.selectedrightsdata[i].r_channel_distribution_rights);
            }
        }
        for (var i in $scope.AllPhotoGraphers) {
            if ($scope.AllPhotoGraphers[i].cd_id == $scope.PhotoGrapherId) {
                $scope.PhotoGrapher = $scope.AllPhotoGraphers[i].cd_name;
            }
        }
        for (var i in $scope.AllLocations) {
            if ($scope.AllLocations[i].cd_id == $scope.LocationId) {
                $scope.Location = $scope.AllLocations[i].cd_name;
            }
        }

        $scope.AllPropertyDetail = angular.copy(datas.AllPropertyData);
        $scope.AllProperty = angular.copy(datas.PropertyData);
        $scope.Vendor = angular.copy(datas.VendorData);

        for (var i in $scope.AllProperty) {
            if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                $scope.Property.push($scope.AllProperty[i]);
                $scope.PropertyDisable = false;
                $scope.SelectedProperty = datas.ContentMetadata[0].cm_property_id;
                $scope.RightSettingShow = true;
            }
        }


        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        for (var i in $scope.Property) {
            if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                for (var j in $scope.AllCountryRights) {
                    var flag = false;
                    for (var k in $scope.AllPropertyDetail) {
                        if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                            if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                flag = true;
                            }
                            //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                            //    flag = true;
                            //}
                        }
                    }
                    if (flag) {
                        country.push($scope.AllCountryRights[j].cd_id);
                        $scope.CountryRights.push($scope.AllCountryRights[j]);
                    }
                }
                for (var j in $scope.AllChannelRights) {
                    var flag = false;
                    for (var k in $scope.AllPropertyDetail) {
                        if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                            if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                flag = true;
                            }
                            //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                            //    flag = true;
                            //}
                        }
                    }
                    if (flag) {
                        channel.push($scope.AllChannelRights[j].cd_id);
                        $scope.ChannelRights.push($scope.AllChannelRights[j]);
                    }
                }
                if ($scope.Property[i].r_rights_at_content_level == 1) {
                    $scope.IsDisable = false;
                    $scope.RightSettingShow = true;
                }
                else {
                    $scope.IsDisable = false;
                    $scope.RightSettingShow = false;
                }
            }
            //$scope.IsDisable = false;
            //$scope.RightSettingShow = true;

        }
        $scope.VendorDisable = datas.IsEdit;
        $scope.PropertyDisable = datas.IsEdit;
        $scope.IsDisable = datas.IsEdit;

    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.VendorChange = function () {
        $scope.Property = [];
        $scope.PropertyDisable = false;
        $scope.RightSettingShow = false;
        $scope.Property.unshift({ cm_id: 0, cm_title: "Select Property" });
        if ($scope.SelectedVendor != 0) {
            for (var i in $scope.AllProperty) {
                if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                    $scope.Property.push($scope.AllProperty[i]);
                    $scope.PropertyDisable = false;
                    $scope.SelectedProperty = 0;
                    if ($scope.SelectedOldVendor != $scope.SelectedVendor) {
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];
                    }
                    else {
                        $scope.OldRightData = $scope.selectedrightsdata;
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                        for (var i in $scope.selectedrightsdata) {
                            if ($scope.SelectedCountryRights.indexOf($scope.selectedrightsdata[i].r_country_distribution_rights) == -1) {
                                $scope.SelectedCountryRights.push($scope.selectedrightsdata[i].r_country_distribution_rights);
                            }
                            if ($scope.SelectedChannelRights.indexOf($scope.selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                                $scope.SelectedChannelRights.push($scope.selectedrightsdata[i].r_channel_distribution_rights);
                            }
                        }
                    }
                }
            }
        }
        else {
            $scope.PropertyDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
        if ($scope.Property.length == 1) {
            $scope.SelectedProperty = 0;
        }
    }

    $scope.PropertyChange = function () {
        $scope.RightSettingShow = false;
        $scope.IsDisable = true;
        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        if ($scope.SelectedProperty != 0) {
            for (var i in $scope.Property) {
                if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                    for (var j in $scope.AllCountryRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                    flag = true;
                                }
                                //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            country.push($scope.AllCountryRights[j].cd_id);
                            $scope.CountryRights.push($scope.AllCountryRights[j]);
                        }
                    }
                    for (var j in $scope.AllChannelRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                    flag = true;
                                }
                                //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            channel.push($scope.AllChannelRights[j].cd_id);
                            $scope.ChannelRights.push($scope.AllChannelRights[j]);
                        }
                    }
                    if ($scope.Property[i].r_rights_at_content_level == 1) {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = true;
                    }
                    else {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = false;
                    }
                    if ($scope.SelectedOldProperty != $scope.SelectedProperty) {
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];
                    }
                    else {
                        $scope.OldRightData = $scope.selectedrightsdata;
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                        for (var i in $scope.selectedrightsdata) {
                            if ($scope.SelectedCountryRights.indexOf($scope.selectedrightsdata[i].r_country_distribution_rights) == -1) {
                                $scope.SelectedCountryRights.push($scope.selectedrightsdata[i].r_country_distribution_rights);
                            }
                            if ($scope.SelectedChannelRights.indexOf($scope.selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                                $scope.SelectedChannelRights.push($scope.selectedrightsdata[i].r_channel_distribution_rights);
                            }
                        }
                    }
                }


            }
        }
        else {
            $scope.IsDisable = true;
            $scope.RightSettingShow = false;
        }
    }

    function GetDeleteRights(OldRights, SelectedRights) {
        var DeleteArray = [];
        for (var i in OldRights) {
            var flag = true;
            for (var j in SelectedRights) {
                if (SelectedRights[j].vendorid == OldRights[i].cm_vendor && OldRights[i].cm_property_id == SelectedRights[j].propertyid) {
                    if (OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryRights) {
                        flag = false;
                    }
                }
            }
            if (flag) {
                DeleteArray.push(OldRights[i]);
            }
        }
        return DeleteArray;
    }

    function GetAddRights(OldRights, SelectedRights) {
        var AddArray = [];
        for (var j in SelectedRights) {
            var flag = true;
            for (var i in OldRights) {
                if (SelectedRights[j].vendorid == OldRights[i].cm_vendor && OldRights[i].cm_property_id == SelectedRights[j].propertyid && OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryRights) {
                    flag = false;
                }
            }
            if (flag) {
                AddArray.push({ CountryRights: SelectedRights[j].CountryRights, ChannelRights: SelectedRights[j].ChannelRights });
            }
        }
        return AddArray;
    }

    $scope.SaveWallPaper = function () {
        $scope.VendorValidation = false;
        $scope.PropertyValidation = false;
        $scope.TitleValidation = false;
        $scope.DescriptionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.SubGenresValidation = false;
        $scope.MoodValidation = false;
        $scope.LanguagesValidation = false;
        $scope.FestivalValidation = false;
        $scope.ReligionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.SelfRankingValidation = false;
        $scope.MoodValidation = false;
        $scope.LanguagesValidation = false;
        $scope.GenresValidation = false;
        $scope.NudityValidation = false;
        $scope.KeywordValidation = false;
        $scope.DateConflictValidation = false;
        $scope.UniqueCPContentId = false;
        $scope.CheckPropertyDateValidation = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;
        var Rights = [];

        if ($scope.SelectedVendor != 0) {
            if ($scope.SelectedProperty != 0) {
                for (var i in $scope.Property) {
                    if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                        //if ($scope.DisplayTitle != "") {
                        //if ($scope.Description != "") {
                        // if ($scope.SelectedCelebrity != 0) {
                        if ($scope.SelectedGenres != 0) {
                            // if ($scope.SelectedSubGenres != 0) {
                            //  if ($scope.SelectedMood != 0) {
                            // if ($scope.SelectedLanguages != 0) {
                            if ($scope.SelectedNudity != 0) {
                                // if ($scope.SelectedFestival != 0) {
                                //  if ($scope.SelectedReligion != 0) {
                                //   if ($scope.SelectedSelfRanking != 0) {
                                if (new Date($scope.Startdate) <= new Date($scope.Expirydate)) {
                                    if (new Date($scope.Property[i].cm_starts_from) <= new Date($scope.Startdate) && new Date($scope.Property[i].cm_expires_on) >= new Date($scope.Expirydate)) {
                                        //if ($scope.SearchKeywords != "") {
                                        if ($scope.RightSettingShow == true) {
                                            if ($scope.SelectedCountryRights.length > 0) {
                                                if ($scope.SelectedChannelRights.length > 0) {
                                                    for (var i in $scope.SelectedCountryRights) {
                                                        for (var j in $scope.SelectedChannelRights) {
                                                            Rights.push({ propertyid: $scope.SelectedProperty, vendorid: $scope.SelectedVendor, CountryRights: $scope.SelectedCountryRights[i], ChannelRights: $scope.SelectedChannelRights[j] });
                                                        }
                                                    }
                                                    var AddRights = GetAddRights($scope.OldRightData, Rights);
                                                    var DeleteRights = GetDeleteRights($scope.OldRightData, Rights);
                                                    var datas = {
                                                        cm_Id: $scope.CM_ID,
                                                        GroupId: $scope.GroupId,
                                                        DisplayTitle: $scope.DisplayTitle,
                                                        Description: $scope.Description,
                                                        ContentId: $scope.ContentId,
                                                        Vendor: $scope.SelectedVendor,
                                                        Property: $scope.SelectedProperty,
                                                        Genres: $scope.SelectedGenres,
                                                        SubGenres: $scope.SelectedSubGenres,
                                                        Mood: $scope.SelectedMood,
                                                        Languages: $scope.SelectedLanguages,
                                                        Nudity: $scope.SelectedNudity,
                                                        Festival: $scope.SelectedFestival,
                                                        Religion: $scope.SelectedReligion,
                                                        AddRights: AddRights,
                                                        DeleteRights: DeleteRights,
                                                        //Rights: Rights,
                                                        SelfRanking: $scope.SelectedSelfRanking,
                                                        StartDate: new Date($scope.Startdate),
                                                        ExpiryDate: new Date($scope.Expirydate),
                                                        RightsSetting: $scope.RightSettingShow
                                                    };
                                                    var NewArray = [];
                                                    NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9, GroupId: $scope.CelebrityGroupId, cm_Id: $scope.CM_ID });
                                                    NewArray.push({ Name: "PhotoGrapher", Value: $scope.PhotoGrapher, Id: 22, cm_Id: $scope.CM_ID, PhotoId: $scope.PhotoGrapherId });
                                                    NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23, cm_Id: $scope.CM_ID, LocationId: $scope.LocationId });
                                                    NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24, GroupId: $scope.KeywordGroupId, KeyId: $scope.KeyWordId, cm_Id: $scope.CM_ID });
                                                    NewArray.push({ Name: "datass", Value: datas });

                                                    ////console.log(NewArray);

                                                    if (NewArray.length > 0) {
                                                        ngProgress.start();
                                                        var post_request = $http({
                                                            method: "Post",
                                                            url: 'wallpaper/UpdateWallpaper',
                                                            data: NewArray,
                                                            headers: { 'Content-Type': 'application/json' }
                                                        });
                                                        post_request.success(function (data) {
                                                            ngProgress.complete();
                                                            if (data.Result == "WallpaperUpdated") {
                                                                $scope.successvisible = true;
                                                                $scope.success = "Record Updated successfully.";
                                                                ngProgress.complete();
                                                                if (data.GroupId != undefined || data.GroupId == null) {
                                                                    $scope.CelebrityGroupId = data.GroupId;
                                                                }
                                                                if (data.PhotoId != undefined || data.PhotoId == null) {
                                                                    $scope.PhotoGrapherId = data.PhotoId;
                                                                }
                                                                if (data.LocId != undefined || data.LocId == null) {
                                                                    $scope.LocationId = data.LocId;
                                                                }
                                                                $scope.SelectedVendor = data.VendorId;
                                                                $scope.SelectedProperty = data.PropertyId;
                                                                $scope.SelectedOldVendor = data.VendorId;
                                                                $scope.SelectedOldProperty = data.PropertyId;
                                                                $scope.OldRightData = [];
                                                                $scope.selectedrightsdata = angular.copy(data.RightsData);
                                                                $scope.OldRightData = $scope.selectedrightsdata;

                                                                ////console.log($scope.OldRightData, "datas$scope.OldRightData");
                                                            }
                                                            else if (data.Result == "ContentIdError") {
                                                                $scope.UniqueCPContentId = true;
                                                                ngProgress.complete();
                                                            }

                                                        });
                                                        post_request.error(function (data, status, headers, config) {
                                                            ngProgress.complete();
                                                            if (data != undefined) {
                                                                $scope.errorvisible = true;
                                                                $scope.error = data.substring(1, data.length - 1);
                                                            }
                                                        });
                                                    }

                                                }
                                                else {
                                                    $scope.ChannelRightsValidation = true;
                                                }
                                            }
                                            else {
                                                $scope.CountryRightsValidation = true;
                                            }
                                        }
                                        else {

                                            var AddRights = GetAddRights($scope.OldRightData, Rights);
                                            var DeleteRights = GetDeleteRights($scope.OldRightData, Rights);

                                            var datas = {
                                                cm_Id: $scope.CM_ID,
                                                DisplayTitle: $scope.DisplayTitle,
                                                Description: $scope.Description,
                                                ContentId: $scope.ContentId,
                                                Vendor: $scope.SelectedVendor,
                                                Property: $scope.SelectedProperty,
                                                Genres: $scope.SelectedGenres,
                                                SubGenres: $scope.SelectedSubGenres,
                                                Mood: $scope.SelectedMood,
                                                Languages: $scope.SelectedLanguages,
                                                Nudity: $scope.SelectedNudity,
                                                Festival: $scope.SelectedFestival,
                                                Religion: $scope.SelectedReligion,
                                                AddRights: AddRights,
                                                DeleteRights: DeleteRights,
                                                StartDate: $scope.Startdate,
                                                SelfRanking: $scope.SelectedSelfRanking,
                                                ExpiryDate: $scope.Expirydate,
                                                RightsSetting: $scope.RightSettingShow
                                            };
                                            var NewArray = [];
                                            NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9, GroupId: $scope.CelebrityGroupId, cm_Id: $scope.CM_ID });
                                            NewArray.push({ Name: "PhotoGrapher", Value: $scope.PhotoGrapher, Id: 22, cm_Id: $scope.CM_ID, PhotoId: $scope.PhotoGrapherId });
                                            NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23, cm_Id: $scope.CM_ID, LocationId: $scope.LocationId });
                                            NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24, GroupId: $scope.KeywordGroupId, KeyId: $scope.KeyWordId, cm_Id: $scope.CM_ID });
                                            NewArray.push({ Name: "datass", Value: datas });

                                            ngProgress.start();
                                            if (NewArray.length > 0) {
                                                var post_request = $http({
                                                    method: "Post",
                                                    url: 'wallpaper/UpdateWallpaper',
                                                    data: NewArray,
                                                    headers: { 'Content-Type': 'application/json' }
                                                });
                                                post_request.success(function (data) {
                                                    ngProgress.complete();
                                                    if (data.Result == "WallpaperUpdated") {
                                                        $scope.successvisible = true;
                                                        $scope.success = "Record Updated successfully.";
                                                        ngProgress.complete();
                                                        if (data.GroupId != undefined || data.GroupId == null) {
                                                            $scope.CelebrityGroupId = data.GroupId;
                                                        }
                                                        if (data.PhotoId != undefined || data.PhotoId == null) {
                                                            $scope.PhotoGrapherId = data.PhotoId;
                                                        }
                                                        if (data.LocId != undefined || data.LocId == null) {
                                                            $scope.LocationId = data.LocId;
                                                        }

                                                        $scope.SelectedVendor = data.VendorId;
                                                        $scope.SelectedProperty = data.PropertyId;
                                                        $scope.SelectedOldVendor = data.VendorId;
                                                        $scope.SelectedOldProperty = data.PropertyId;

                                                        $scope.OldRightData = [];
                                                        $scope.selectedrightsdata = angular.copy(data.RightsData);
                                                        $scope.OldRightData = $scope.selectedrightsdata;
                                                    }
                                                    else if (data.Result == "ContentIdError") {
                                                        $scope.UniqueCPContentId = true;
                                                        ngProgress.complete();
                                                    }

                                                });
                                                post_request.error(function (data, status, headers, config) {
                                                    ngProgress.complete();
                                                    if (data != undefined) {
                                                        $scope.errorvisible = true;
                                                        $scope.error = data.substring(1, data.length - 1);
                                                    }
                                                });
                                            }
                                        }
                                        //Add Wallpaper In database..

                                        //}
                                        //else {
                                        //    $scope.KeywordValidation = true;
                                        //}
                                    }
                                    else {
                                        $scope.CheckPropertyDateValidation = true;
                                    }
                                }
                                else {
                                    $scope.DateConflictValidation = true;
                                }
                                //        }
                                //        else {
                                //            $scope.SelfRankingValidation = true;
                                //        }
                                //    }
                                //    else {
                                //        $scope.ReligionValidation = true;
                                //    }
                                //}
                                //else {
                                //    $scope.FestivalValidation = true;
                                //}
                            }
                            else {
                                $scope.NudityValidation = true;
                            }
                            //        }
                            //        else {
                            //            $scope.LanguagesValidation = true;
                            //        }
                            //    }
                            //    else {
                            //        $scope.MoodValidation = true;
                            //    }
                            //}
                            //else {
                            //    $scope.SubGenresValidation = true;
                            //}
                        }
                        else {
                            $scope.GenresValidation = true;
                        }
                        //    }
                        //    else {
                        //        $scope.CelebrityValidation = true;
                        //    }
                        //}
                        //else {
                        //    $scope.DescriptionValidation = true;
                        //}
                        //}
                        //else {
                        //    $scope.TitleValidation = true;
                        //}
                    }
                }
            }
            else {
                $scope.PropertyValidation = true;
            }
        }
        else {
            $scope.VendorValidation = true;
        }
    }

    $scope.BackToContentCatalog = function () {
        $window.location.href = "#content-catalog";
    }
});

myApp.controller('videoCtrl', function ($scope, $http, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#video').addClass('active');
    $('#addcontentmetadata').addClass('active');
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.Vendor = [];
    $scope.AllProperty = [];
    $scope.VideoType = [];
    $scope.Genres = [];
    $scope.SubGenres = [];
    $scope.Mood = [];
    $scope.Singers = [];
    $scope.MusicDirectors = [];
    $scope.VideoQuality = [];
    $scope.Languages = [];
    $scope.Nudity = [];
    $scope.Festival = [];
    $scope.Religion = [];
    $scope.AllCountryRights = [];
    $scope.AllChannelRights = [];
    $scope.Celebrity = [];
    $scope.Location = "";
    $scope.SelfRanking = [];

    $scope.AllVideoDetail = [];
    $scope.AllPropertyDetail = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];

    $scope.Property = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];
    $scope.DisplayTitle = "";
    $scope.Description = "";

    $scope.Duration = "";

    $scope.SearchKeywords = "";
    $scope.ContentId = "";
    $scope.RightSettingShow = false;

    $scope.VendorValidation = false;
    $scope.PropertyValidation = false;
    $scope.TitleValidation = false;
    $scope.DescriptionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.VideoTypeValidation = false;
    $scope.DurationValidation = false;
    $scope.GenresValidation = false;
    $scope.SubGenresValidation = false;
    $scope.MoodValidation = false;
    $scope.VideoQualityValidation = false;
    $scope.LanguagesValidation = false;
    $scope.NudityValidation = false;
    $scope.SelfRankingValidation = false;
    $scope.FestivalValidation = false;
    $scope.ReligionValidation = false;
    $scope.UniqueCPContentId = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;

    $scope.SelectedVendor = 0;
    $scope.SelectedProperty = 0;
    $scope.SelectedVideoType = 0;
    $scope.SelectedGenres = 0;
    $scope.SelectedSubGenres = 0;
    $scope.SelectedMood = 0;
    $scope.SelectedSingers = 0;
    $scope.SelectedMusicDirectors = 0;
    $scope.SelectedVideoQuality = 0;
    $scope.SelectedLanguages = 0;
    $scope.SelectedNudity = 0;
    $scope.SelectedFestival = 0;
    $scope.SelectedReligion = 0;
    $scope.SelectedCelebrity = 0;
    $scope.SelectedSelfRanking = 0;
    $scope.SelectedCountryRights = [];
    $scope.SelectedChannelRights = [];
    $scope.SaveEnable = false;
    $scope.IsDisable = true;
    $scope.PropertyDisable = true;

    $scope.Startdate = getDate(new Date());
    $scope.Expirydate = "";
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.Permission = true;
    $scope.IsDisabled = false;
    if ($scope.Permission == true) {
        $scope.IsDisabled = false;
    }
    else {
        $scope.IsDisabled = true;
    }

    var get_request = $http({
        method: "Get",
        url: 'video/GetVideoData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        if (datas.UserRole === "Content Manager") {
            for (var i in datas.Videodata) {
                if (datas.Videodata[i].cd_cm_id == 3) {
                    $scope.AllCountryRights.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 4) {
                    $scope.AllChannelRights.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 5) {
                    $scope.Genres.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 6) {
                    $scope.SubGenres.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 7) {
                    $scope.Mood.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 8) {
                    $scope.Languages.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 9) {
                    $scope.Celebrity.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 10) {
                    $scope.Festival.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 11) {
                    $scope.Religion.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 12) {
                    $scope.Singers.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 13) {
                    $scope.MusicDirectors.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 26) {
                    $scope.Nudity.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 27) {
                    $scope.VideoType.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 29) {
                    $scope.VideoQuality.push(datas.Videodata[i]);
                }
                if (datas.Videodata[i].cd_cm_id == 25) {
                    $scope.SelfRanking.push(datas.Videodata[i]);
                }
            }
            $scope.AllPropertyDetail = angular.copy(datas.AllPropertyData);
            $scope.AllProperty = angular.copy(datas.PropertyData);
            $scope.Vendor = angular.copy(datas.VendorData);
        }
        else {
            location.href = "/";
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });


    $scope.VendorChange = function () {
        $scope.Property = [];
        $scope.PropertyDisable = false;
        $scope.RightSettingShow = false;

        if ($scope.SelectedVendor != 0) {
            for (var i in $scope.AllProperty) {
                if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                    $scope.Property.push($scope.AllProperty[i]);
                    $scope.PropertyDisable = false;
                    $scope.SelectedProperty = 0;
                }
            }
        }
        else {
            $scope.PropertyDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
        if ($scope.Property.length <= 0) {
            $scope.IsDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
    }

    $scope.PropertyChange = function () {
        $scope.RightSettingShow = false;
        $scope.IsDisable = true;
        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        if ($scope.SelectedProperty != 0) {
            for (var i in $scope.Property) {
                if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                    for (var j in $scope.AllCountryRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                    flag = true;
                                }
                                //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            country.push($scope.AllCountryRights[j].cd_id);
                            $scope.CountryRights.push($scope.AllCountryRights[j]);
                        }
                    }
                    for (var j in $scope.AllChannelRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                    flag = true;
                                }
                                //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            channel.push($scope.AllChannelRights[j].cd_id);
                            $scope.ChannelRights.push($scope.AllChannelRights[j]);
                        }
                    }
                    if ($scope.Property[i].r_rights_at_content_level == 1) {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = true;
                    }
                    else {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = false;
                    }
                }
            }
        }
        else {
            $scope.IsDisable = true;
            $scope.RightSettingShow = false;
        }
    }

    var datas;
    $scope.SaveVideo = function () {
        $scope.VendorValidation = false;
        $scope.PropertyValidation = false;
        $scope.TitleValidation = false;
        $scope.DescriptionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.VideoTypeValidation = false;
        $scope.DurationValidation = false;
        $scope.GenresValidation = false;
        $scope.SubGenresValidation = false;
        $scope.MoodValidation = false;
        $scope.VideoQualityValidation = false;
        $scope.LanguagesValidation = false;
        $scope.NudityValidation = false;
        $scope.SelfRankingValidation = false;
        $scope.FestivalValidation = false;
        $scope.ReligionValidation = false;
        $scope.DateConflictValidation = false;
        $scope.CheckPropertyDateValidation = false;
        $scope.UniqueCPContentId = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;


        var Rights = [];
        if ($scope.SelectedVendor != 0) {
            if ($scope.SelectedProperty != 0) {
                for (var i in $scope.Property) {
                    if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                        //if ($scope.Description != "") {
                        //if ($scope.SelectedCelebrity != 0) {
                        if ($scope.SelectedVideoType != 0) {
                            if ($scope.Duration != "" && !isNaN($scope.Duration) && $scope.Duration.length <= 10) {
                                if ($scope.SelectedGenres != 0) {
                                    //if ($scope.SelectedSubGenres != 0) {
                                    //if ($scope.SelectedMood != 0) {
                                    if ($scope.SelectedVideoQuality != 0) {
                                        //if ($scope.SelectedLanguages != 0) {
                                        if ($scope.SelectedNudity != 0) {
                                            //if ($scope.SelectedSelfRanking != 0) {
                                            //if ($scope.SelectedFestival != 0) {
                                            //if ($scope.SelectedReligion != 0) {
                                            if (new Date($scope.Startdate) <= new Date($scope.Expirydate)) {
                                                if (new Date($scope.Property[i].cm_starts_from) <= new Date($scope.Startdate) && new Date($scope.Property[i].cm_expires_on) >= new Date($scope.Expirydate)) {
                                                    //if ($scope.SearchKeywords != "") {
                                                    if ($scope.RightSettingShow == true) {
                                                        if ($scope.SelectedCountryRights.length > 0) {
                                                            if ($scope.SelectedChannelRights.length > 0) {
                                                                for (var i in $scope.SelectedCountryRights) {
                                                                    for (var j in $scope.SelectedChannelRights) {
                                                                        Rights.push({ CountryRights: $scope.SelectedCountryRights[i], ChannelRights: $scope.SelectedChannelRights[j] });
                                                                    }
                                                                }
                                                                var datas = {
                                                                    DisplayTitle: $scope.DisplayTitle,
                                                                    Description: $scope.Description,
                                                                    Duration: parseFloat($scope.Duration),
                                                                    ContentId: $scope.ContentId,
                                                                    Vendor: $scope.SelectedVendor,
                                                                    Property: $scope.SelectedProperty,
                                                                    VideoType: $scope.SelectedVideoType,
                                                                    Genres: $scope.SelectedGenres,
                                                                    SubGenres: $scope.SelectedSubGenres,
                                                                    Mood: $scope.SelectedMood,
                                                                    Singers: $scope.SelectedSingers,
                                                                    MusicDirectors: $scope.SelectedMusicDirectors,
                                                                    VideoQuality: $scope.SelectedVideoQuality,
                                                                    Languages: $scope.SelectedLanguages,
                                                                    Nudity: $scope.SelectedNudity,
                                                                    Festival: $scope.SelectedFestival,
                                                                    Religion: $scope.SelectedReligion,
                                                                    Rights: Rights,
                                                                    SelfRanking: $scope.SelectedSelfRanking,
                                                                    StartDate: $scope.Startdate,
                                                                    ExpiryDate: $scope.Expirydate,
                                                                    RightsSetting: $scope.RightSettingShow
                                                                };

                                                                var NewArray = [];
                                                                NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9 });
                                                                NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23 });
                                                                NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24 });
                                                                NewArray.push({ Name: "datass", Value: datas });

                                                                ngProgress.start();
                                                                if (NewArray.length > 0) {
                                                                    var post_request = $http({
                                                                        method: "Post",
                                                                        url: 'video/AddVideo',
                                                                        data: NewArray,
                                                                        headers: { 'Content-Type': 'application/json' }
                                                                    });
                                                                    post_request.success(function (data) {
                                                                        $scope.Cm_ID = data.cm_id;
                                                                        if (data.Result == "Success") {
                                                                            $scope.Property = [];
                                                                            $scope.CountryRights = [];
                                                                            $scope.ChannelRights = [];
                                                                            $scope.DisplayTitle = "";
                                                                            $scope.Description = "";
                                                                            $scope.SelectedCelebrity = 0;
                                                                            $scope.Duration = "";
                                                                            $scope.SelectedLocation = 0;
                                                                            $scope.SearchKeywords = "";
                                                                            $scope.ContentId = "";
                                                                            $scope.RightSettingShow = false;
                                                                            $scope.SelectedVendor = 0;
                                                                            $scope.SelectedProperty = 0;
                                                                            $scope.SelectedVideoType = 0;
                                                                            $scope.SelectedGenres = 0;
                                                                            $scope.SelectedSubGenres = 0;
                                                                            $scope.SelectedMood = 0;
                                                                            $scope.SelectedSingers = 0;
                                                                            $scope.SelectedMusicDirectors = 0;
                                                                            $scope.SelectedVideoQuality = 0;
                                                                            $scope.SelectedLanguages = 0;
                                                                            $scope.SelectedNudity = 0;
                                                                            $scope.SelectedFestival = 0;
                                                                            $scope.SelectedReligion = 0;
                                                                            $scope.SelectedCountryRights = 0;
                                                                            $scope.SelectedChannelRights = 0;
                                                                            $scope.SaveEnable = false;
                                                                            $scope.IsDisable = true;
                                                                            $scope.PropertyDisable = true;
                                                                            $scope.Startdate = getDate(new Date());
                                                                            $scope.Expirydate = "";
                                                                            $scope.successvisible = true;
                                                                            $scope.success = "Record inserted successfully. Your Unique MetaData Id is '" + $scope.Cm_ID + "'";
                                                                            ngProgress.complete();
                                                                        }
                                                                        else if (data.Result == "ContentIdError") {
                                                                            $scope.UniqueCPContentId = true;
                                                                        }
                                                                    });
                                                                    post_request.error(function (data, status, headers, config) {
                                                                        if (data != undefined) {
                                                                            $scope.errorvisible = true;
                                                                            $scope.error = data.substring(1, data.length - 1);
                                                                            ngProgress.complete();
                                                                        }
                                                                    });
                                                                }
                                                            }
                                                            else {
                                                                $scope.ChannelRightsValidation = true;
                                                            }
                                                        }
                                                        else {
                                                            $scope.CountryRightsValidation = true;
                                                        }
                                                    }
                                                    else {
                                                        Rights = [];
                                                        var datas = {
                                                            DisplayTitle: $scope.DisplayTitle,
                                                            Description: $scope.Description,
                                                            Duration: parseFloat($scope.Duration),
                                                            ContentId: $scope.ContentId,
                                                            Vendor: $scope.SelectedVendor,
                                                            Property: $scope.SelectedProperty,
                                                            VideoType: $scope.SelectedVideoType,
                                                            Genres: $scope.SelectedGenres,
                                                            SubGenres: $scope.SelectedSubGenres,
                                                            Mood: $scope.SelectedMood,
                                                            Singers: $scope.SelectedSingers,
                                                            MusicDirectors: $scope.SelectedMusicDirectors,
                                                            VideoQuality: $scope.SelectedVideoQuality,
                                                            Languages: $scope.SelectedLanguages,
                                                            Nudity: $scope.SelectedNudity,
                                                            Festival: $scope.SelectedFestival,
                                                            Religion: $scope.SelectedReligion,
                                                            Rights: Rights,
                                                            SelfRanking: $scope.SelectedSelfRanking,
                                                            StartDate: $scope.Startdate,
                                                            ExpiryDate: $scope.Expirydate,
                                                            RightsSetting: $scope.RightSettingShow
                                                        };
                                                        var NewArray = [];
                                                        NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9 });
                                                        NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23 });
                                                        NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24 });
                                                        NewArray.push({ Name: "datass", Value: datas });

                                                        ngProgress.start();
                                                        if (NewArray.length > 0) {
                                                            var post_request = $http({
                                                                method: "Post",
                                                                url: 'video/AddVideo',
                                                                data: NewArray,
                                                                headers: { 'Content-Type': 'application/json' }
                                                            });
                                                            post_request.success(function (data) {
                                                                $scope.Cm_ID = data.cm_id;
                                                                if (data.Result == "Success") {
                                                                    $scope.Property = [];
                                                                    $scope.CountryRights = [];
                                                                    $scope.ChannelRights = [];
                                                                    $scope.DisplayTitle = "";
                                                                    $scope.Description = "";
                                                                    $scope.SelectedCelebrity = 0;
                                                                    $scope.Duration = "";
                                                                    $scope.SelectedLocation = 0;
                                                                    $scope.SearchKeywords = "";
                                                                    $scope.ContentId = "";
                                                                    $scope.RightSettingShow = false;
                                                                    $scope.SelectedVendor = 0;
                                                                    $scope.SelectedProperty = 0;
                                                                    $scope.SelectedVideoType = 0;
                                                                    $scope.SelectedGenres = 0;
                                                                    $scope.SelectedSubGenres = 0;
                                                                    $scope.SelectedMood = 0;
                                                                    $scope.SelectedSingers = 0;
                                                                    $scope.SelectedMusicDirectors = 0;
                                                                    $scope.SelectedVideoQuality = 0;
                                                                    $scope.SelectedLanguages = 0;
                                                                    $scope.SelectedNudity = 0;
                                                                    $scope.SelectedFestival = 0;
                                                                    $scope.SelectedReligion = 0;
                                                                    $scope.SelectedCountryRights = 0;
                                                                    $scope.SelectedChannelRights = 0;
                                                                    $scope.SaveEnable = false;
                                                                    $scope.IsDisable = true;
                                                                    $scope.PropertyDisable = true;
                                                                    $scope.Startdate = getDate(new Date());
                                                                    $scope.Expirydate = "";
                                                                    $scope.successvisible = true;
                                                                    $scope.success = "Record inserted successfully. Your Unique MetaData Id is '" + $scope.Cm_ID + "'";
                                                                    ngProgress.complete();
                                                                }
                                                                else if (data.Result == "ContentIdError") {
                                                                    $scope.UniqueCPContentId = true;
                                                                }
                                                            });
                                                            post_request.error(function (data, status, headers, config) {
                                                                if (data != undefined) {
                                                                    $scope.errorvisible = true;
                                                                    $scope.error = data.substring(1, data.length - 1);
                                                                    ngProgress.complete();
                                                                }
                                                            });
                                                        }
                                                    }


                                                    //}
                                                    //else {
                                                    //    $scope.KeywordValidation = true;
                                                    //}
                                                }
                                                else {
                                                    $scope.CheckPropertyDateValidation = true;
                                                }
                                            }
                                            else {
                                                $scope.DateConflictValidation = true;
                                            }
                                            //}
                                            //else {
                                            //    $scope.ReligionValidation = true;
                                            //}
                                            //}
                                            //else {
                                            //    $scope.FestivalValidation = true;
                                            //}
                                            //}
                                            //else {
                                            //    $scope.SelfRankingValidation = true;
                                            //}
                                        }
                                        else {
                                            $scope.NudityValidation = true;
                                        }
                                        //}
                                        //else {
                                        //    $scope.LanguagesValidation = true;
                                        //}
                                    }
                                    else {
                                        $scope.VideoQualityValidation = true;
                                    }
                                    //}
                                    //else {
                                    //    $scope.MoodValidation = true;
                                    //}
                                    //}
                                    //else {
                                    //    $scope.SubGenresValidation = true;
                                    //}
                                }
                                else {
                                    $scope.GenresValidation = true;
                                }
                            }
                            else {
                                $scope.DurationValidation = true;
                            }
                        }
                        else {
                            $scope.VideoTypeValidation = true;
                        }
                        //}
                        //else {
                        //    $scope.CelebrityValidation = true;
                        //}
                        //}
                        //else {
                        //    $scope.DescriptionValidation = true;
                        //}
                    }
                }
            }
            else {
                $scope.PropertyValidation = true;
            }
        }
        else {
            $scope.VendorValidation = true;
        }
    }

    $scope.ResetVideo = function () {
        $scope.Property = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        $scope.DisplayTitle = "";
        $scope.Description = "";
        $scope.SelectedCelebrity = 0;
        $scope.Duration = "";
        $scope.SelectedLocation = 0;
        $scope.SearchKeywords = "";
        $scope.ContentId = "";
        $scope.RightSettingShow = false;
        $scope.SelectedVendor = 0;
        $scope.SelectedProperty = 0;
        $scope.SelectedVideoType = 0;
        $scope.SelectedGenres = 0;
        $scope.SelectedSubGenres = 0;
        $scope.SelectedMood = 0;
        $scope.SelectedSingers = 0;
        $scope.SelectedMusicDirectors = 0;
        $scope.SelectedVideoQuality = 0;
        $scope.SelectedLanguages = 0;
        $scope.SelectedNudity = 0;
        $scope.SelectedFestival = 0;
        $scope.SelectedReligion = 0;
        $scope.SelectedCountryRights = 0;
        $scope.SelectedChannelRights = 0;
        $scope.SaveEnable = false;
        $scope.IsDisable = true;
        $scope.PropertyDisable = true;
        $scope.Startdate = getDate(new Date());
        $scope.Expirydate = "";
    }
});

myApp.controller('editvideoCtrl', function ($scope, $http, $routeParams, $window, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addcontentmetadata').addClass('active');
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.Vendor = [];
    $scope.AllProperty = [];
    $scope.VideoType = [];
    $scope.Genres = [];
    $scope.SubGenres = [];
    $scope.Mood = [];
    $scope.Singers = [];
    $scope.MusicDirectors = [];
    $scope.VideoQuality = [];
    $scope.Languages = [];
    $scope.Nudity = [];
    $scope.Festival = [];
    $scope.Religion = [];
    $scope.AllCountryRights = [];
    $scope.AllChannelRights = [];
    $scope.Celebrity = [];
    $scope.Location = "";
    $scope.SelfRanking = [];

    $scope.AllLocations = [];
    $scope.AllKeywords = [];

    $scope.AllVideoDetail = [];

    $scope.Property = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];
    $scope.DisplayTitle = "";
    $scope.Description = "";


    $scope.SearchKeywords = "";
    $scope.ContentId = "";
    $scope.RightSettingShow = false;

    $scope.VendorValidation = false;
    $scope.PropertyValidation = false;
    $scope.TitleValidation = false;
    $scope.DescriptionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.VideoTypeValidation = false;
    $scope.DurationValidation = false;
    $scope.GenresValidation = false;
    $scope.SubGenresValidation = false;
    $scope.MoodValidation = false;
    $scope.VideoQualityValidation = false;
    $scope.LanguagesValidation = false;
    $scope.NudityValidation = false;
    $scope.SelfRankingValidation = false;
    $scope.FestivalValidation = false;
    $scope.ReligionValidation = false;
    $scope.UniqueCPContentId = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;

    $scope.SelectedOldVendor = "";
    $scope.SelectedOldProperty = "";

    $scope.SelectedVendor = 0;
    $scope.SelectedProperty = 0;
    $scope.SelectedGenres = 0;
    $scope.SelectedSubGenres = 0;
    $scope.SelectedMood = 0;
    $scope.SelectedSingers = 0;
    $scope.SelectedMusicDirectors = 0;
    $scope.SelectedVideoQuality = 0;
    $scope.SelectedVideoType = 0;
    $scope.SelectedLanguages = 0;
    $scope.SelectedNudity = 0;
    $scope.SelectedFestival = 0;
    $scope.SelectedReligion = 0;
    $scope.SelectedCelebrity = 0;
    $scope.SelectedSelfRanking = 0;
    $scope.SelectedCountryRights = [];
    $scope.SelectedChannelRights = [];
    $scope.IsDisable = false;
    $scope.PropertyDisable = true;

    $scope.Startdate = getDate(new Date());
    $scope.Expirydate = "";
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    $scope.AllPropertyDetail = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];

    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.Permission = true;
    $scope.IsDisabled = false;
    if ($scope.Permission == true) {
        $scope.IsDisabled = false;
    }
    else {
        $scope.IsDisabled = true;
    }

    var get_request = $http({
        method: "Post",
        url: 'video/GetEditVideoData',
        data: { 'cm_id': $routeParams.id },
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        $scope.SubGenres.unshift({ cd_id: 0, cd_name: "Select Sub Genres" });
        $scope.Mood.unshift({ cd_id: 0, cd_name: "Select Mood" });
        $scope.Languages.unshift({ cd_id: 0, cd_name: "Select Languages" });
        $scope.Festival.unshift({ cd_id: 0, cd_name: "Select Festival" });
        $scope.Celebrity.unshift({ cd_id: 0, cd_name: "Select Celebrity" });
        $scope.Religion.unshift({ cd_id: 0, cd_name: "Select Religion" });
        $scope.VideoType.unshift({ cd_id: 0, cd_name: "Select VideoType" });
        $scope.VideoQuality.unshift({ cd_id: 0, cd_name: "Select VideoQuality" });
        $scope.SelfRanking.unshift({ cd_id: 0, cd_name: "Select SelfRanking" });
        $scope.Singers.unshift({ cd_id: 0, cd_name: "Select Singers" });
        $scope.MusicDirectors.unshift({ cd_id: 0, cd_name: "Select MusicDirectors" });


        for (var i in datas.Videodata) {
            if (datas.Videodata[i].cd_cm_id == 3) {
                $scope.AllCountryRights.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 4) {
                $scope.AllChannelRights.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 5) {
                $scope.Genres.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 6) {
                $scope.SubGenres.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 7) {
                $scope.Mood.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 8) {
                $scope.Languages.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 9) {
                $scope.Celebrity.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 10) {
                $scope.Festival.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 11) {
                $scope.Religion.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 12) {
                $scope.Singers.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 13) {
                $scope.MusicDirectors.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 23) {
                $scope.AllLocations.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 24) {
                $scope.AllKeywords.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 26) {
                $scope.Nudity.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 27) {
                $scope.VideoType.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 29) {
                $scope.VideoQuality.push(datas.Videodata[i]);
            }
            if (datas.Videodata[i].cd_cm_id == 25) {
                $scope.SelfRanking.push(datas.Videodata[i]);
            }
        }
        for (var i in datas.ContentMetadata) {
            $scope.SelectedVendor = CheckNull(datas.ContentMetadata[0].cm_vendor);
            $scope.SelectedOldVendor = CheckNull(datas.ContentMetadata[0].cm_vendor);
            $scope.SelectedOldProperty = CheckNull(datas.ContentMetadata[0].cm_property_id);
            $scope.SelectedGenres = CheckNull(datas.ContentMetadata[0].cm_genre);
            $scope.SelectedSubGenres = CheckNull(datas.ContentMetadata[0].cm_sub_genre);
            $scope.SelectedMood = CheckNull(datas.ContentMetadata[0].cm_mood);
            $scope.SelectedVideoQuality = CheckNull(datas.ContentMetadata[0].cm_content_quality);
            $scope.SelectedCelebrity = CheckNull(datas.ContentMetadata[0].celebrity_cd_id);
            $scope.SelectedVideoType = CheckNull(datas.ContentMetadata[0].cm_sub_content_type);
            $scope.SelectedLanguages = CheckNull(datas.ContentMetadata[0].cm_language);
            $scope.SelectedNudity = CheckNull(datas.ContentMetadata[0].cm_nudity);
            $scope.SelectedFestival = CheckNull(datas.ContentMetadata[0].cm_festival_occasion);
            $scope.SelectedReligion = CheckNull(datas.ContentMetadata[0].cm_religion);
            $scope.SelectedVideoQuality = CheckNull(datas.ContentMetadata[0].cm_content_quality);
            $scope.SelectedSingers = (CheckNull(datas.ContentMetadata[0].cm_singer));
            $scope.SelectedMusicDirectors = (CheckNull(datas.ContentMetadata[0].cm_music_director));
            $scope.Startdate = getDate(new Date(datas.ContentMetadata[0].cm_starts_from));
            $scope.Expirydate = getDate(new Date(datas.ContentMetadata[0].cm_expires_on));
            //$('#dpStart').datepicker('setDate', new Date(datas.ContentMetadata[0].cm_starts_from));
            //$('#dpStart').datepicker('update');
            //$('#dpEnd').datepicker('setDate', new Date(datas.ContentMetadata[0].cm_expires_on));
            //$('#dpEnd').datepicker('update');
            $scope.SelectedSelfRanking = CheckNull(datas.ContentMetadata[0].cm_rank);
            $scope.SearchKeywords = datas.ContentMetadata[0].keyword_cd_name;
            $scope.DisplayTitle = datas.ContentMetadata[0].cm_title;
            $scope.Description = datas.ContentMetadata[0].cm_short_desc;
            $scope.ContentId = datas.ContentMetadata[0].cm_cp_content_id;
            $scope.Duration = datas.ContentMetadata[0].cm_content_duration;
            $scope.CelebrityGroupId = datas.ContentMetadata[0].celebrity_cmd_id;
            $scope.KeywordGroupId = datas.ContentMetadata[0].keyword_group;
            $scope.CM_ID = datas.ContentMetadata[0].cm_id;
            $scope.LocationId = datas.ContentMetadata[0].cm_location;
            $scope.KeyWordId = datas.ContentMetadata[0].keyword_cd_id;
            $scope.GroupId = datas.ContentMetadata[0].cm_r_group_id;
            for (var i in $scope.AllLocations) {
                if ($scope.AllLocations[i].cd_id == datas.ContentMetadata[0].cm_location) {
                    $scope.Location = $scope.AllLocations[i].cd_name;
                }
            }
        }
        var selectedrightsdata = angular.copy(datas.RightsData);
        $scope.OldRightData = selectedrightsdata;


        $scope.SelectedCountryRights = [];
        $scope.SelectedChannelRights = [];

        for (var i in selectedrightsdata) {
            if ($scope.SelectedCountryRights.indexOf(selectedrightsdata[i].r_country_distribution_rights) == -1) {
                $scope.SelectedCountryRights.push(selectedrightsdata[i].r_country_distribution_rights);
            }
            if ($scope.SelectedChannelRights.indexOf(selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                $scope.SelectedChannelRights.push(selectedrightsdata[i].r_channel_distribution_rights);
            }
        }



        $scope.AllPropertyDetail = angular.copy(datas.AllPropertyData);
        $scope.AllProperty = angular.copy(datas.PropertyData);
        $scope.Vendor = angular.copy(datas.VendorData);

        for (var i in $scope.AllProperty) {
            if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                $scope.Property.push($scope.AllProperty[i]);
                $scope.PropertyDisable = false;
                $scope.SelectedProperty = datas.ContentMetadata[0].cm_property_id;
                $scope.RightSettingShow = true;
            }
        }

        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        for (var i in $scope.Property) {
            if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                for (var j in $scope.AllCountryRights) {
                    var flag = false;
                    for (var k in $scope.AllPropertyDetail) {
                        if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                            if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                flag = true;
                            }
                            //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                            //    flag = true;
                            //}
                        }
                    }
                    if (flag) {
                        country.push($scope.AllCountryRights[j].cd_id);
                        $scope.CountryRights.push($scope.AllCountryRights[j]);
                    }
                }
                for (var j in $scope.AllChannelRights) {
                    var flag = false;
                    for (var k in $scope.AllPropertyDetail) {
                        if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                            if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                flag = true;
                            }
                            //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                            //    flag = true;
                            //}
                        }
                    }
                    if (flag) {
                        channel.push($scope.AllChannelRights[j].cd_id);
                        $scope.ChannelRights.push($scope.AllChannelRights[j]);
                    }
                }
                if ($scope.Property[i].r_rights_at_content_level == 1) {
                    $scope.IsDisable = false;
                    $scope.RightSettingShow = true;
                }
                else {
                    $scope.IsDisable = false;
                    $scope.RightSettingShow = false;
                }
            }

        }
        $scope.VendorDisable = datas.IsEdit;
        $scope.PropertyDisable = datas.IsEdit;
        $scope.IsDisable = datas.IsEdit;
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });


    $scope.VendorChange = function () {
        $scope.Property = [];
        $scope.PropertyDisable = false;
        $scope.RightSettingShow = false;

        $scope.Property.unshift({ cm_id: 0, cm_title: "Select Property" });
        if ($scope.SelectedVendor != 0) {
            for (var i in $scope.AllProperty) {
                if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                    $scope.Property.push($scope.AllProperty[i]);
                    $scope.PropertyDisable = false;
                    $scope.SelectedProperty = 0;
                    if ($scope.SelectedOldVendor != $scope.SelectedVendor) {
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];
                    }
                    else {
                        $scope.OldRightData = $scope.selectedrightsdata;
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                        for (var i in $scope.selectedrightsdata) {
                            if ($scope.SelectedCountryRights.indexOf($scope.selectedrightsdata[i].r_country_distribution_rights) == -1) {
                                $scope.SelectedCountryRights.push($scope.selectedrightsdata[i].r_country_distribution_rights);
                            }
                            if ($scope.SelectedChannelRights.indexOf($scope.selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                                $scope.SelectedChannelRights.push($scope.selectedrightsdata[i].r_channel_distribution_rights);
                            }
                        }
                    }
                }
            }
        }
        else {
            $scope.PropertyDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
        if ($scope.Property.length == 1) {
            $scope.SelectedProperty = 0;
        }
    }

    $scope.PropertyChange = function () {
        $scope.RightSettingShow = false;
        $scope.IsDisable = true;
        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];

        if ($scope.SelectedProperty != 0) {
            for (var i in $scope.Property) {
                if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                    for (var j in $scope.AllCountryRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                    flag = true;
                                }
                                //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            country.push($scope.AllCountryRights[j].cd_id);
                            $scope.CountryRights.push($scope.AllCountryRights[j]);
                        }
                    }
                    for (var j in $scope.AllChannelRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                    flag = true;
                                }
                                //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            channel.push($scope.AllChannelRights[j].cd_id);
                            $scope.ChannelRights.push($scope.AllChannelRights[j]);
                        }
                    }
                    if ($scope.Property[i].r_rights_at_content_level == 1) {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = true;
                    }
                    else {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = false;
                    }
                    if ($scope.SelectedOldProperty != $scope.SelectedProperty) {
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                    }
                    else {
                        $scope.OldRightData = $scope.selectedrightsdata;
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                        for (var i in $scope.selectedrightsdata) {
                            if ($scope.SelectedCountryRights.indexOf($scope.selectedrightsdata[i].r_country_distribution_rights) == -1) {
                                $scope.SelectedCountryRights.push($scope.selectedrightsdata[i].r_country_distribution_rights);
                            }
                            if ($scope.SelectedChannelRights.indexOf($scope.selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                                $scope.SelectedChannelRights.push($scope.selectedrightsdata[i].r_channel_distribution_rights);
                            }
                        }
                    }
                }


            }
        }
        else {
            $scope.IsDisable = true;
            $scope.RightSettingShow = false;
        }
    }

    function GetDeleteRights(OldRights, SelectedRights) {
        var DeleteArray = [];
        for (var i in OldRights) {
            var flag = true;
            for (var j in SelectedRights) {
                if (SelectedRights[j].vendorid == OldRights[i].cm_vendor && OldRights[i].cm_property_id == SelectedRights[j].propertyid) {
                    if (OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryRights) {
                        flag = false;
                    }
                }
            }
            if (flag) {
                DeleteArray.push(OldRights[i]);
            }
        }
        return DeleteArray;
    }

    function GetAddRights(OldRights, SelectedRights) {
        var AddArray = [];
        for (var j in SelectedRights) {
            var flag = true;
            for (var i in OldRights) {
                if (SelectedRights[j].vendorid == OldRights[i].cm_vendor && OldRights[i].cm_property_id == SelectedRights[j].propertyid && OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryRights) {
                    flag = false;
                }
            }
            if (flag) {
                AddArray.push({ CountryRights: SelectedRights[j].CountryRights, ChannelRights: SelectedRights[j].ChannelRights });
            }
        }
        return AddArray;
    }

    var datas;
    $scope.SaveVideo = function () {
        $scope.VendorValidation = false;
        $scope.PropertyValidation = false;
        $scope.TitleValidation = false;
        $scope.DescriptionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.VideoTypeValidation = false;
        $scope.DurationValidation = false;
        $scope.GenresValidation = false;
        $scope.SubGenresValidation = false;
        $scope.MoodValidation = false;
        $scope.VideoQualityValidation = false;
        $scope.LanguagesValidation = false;
        $scope.NudityValidation = false;
        $scope.SelfRankingValidation = false;
        $scope.FestivalValidation = false;
        $scope.ReligionValidation = false;
        $scope.DateConflictValidation = false;
        $scope.CheckPropertyDateValidation = false;
        $scope.UniqueCPContentId = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;


        var Rights = [];
        if ($scope.SelectedVendor != 0) {
            if ($scope.SelectedProperty != 0) {
                for (var i in $scope.Property) {
                    if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                        //if ($scope.Description != "") {
                        // if ($scope.SelectedCelebrity != 0) {
                        if ($scope.SelectedVideoType != 0) {
                            if ($scope.Duration != "" && !isNaN($scope.Duration) && $scope.Duration.toString().length <= 10) {
                                if ($scope.SelectedGenres != 0) {
                                    //if ($scope.SelectedSubGenres != 0) {
                                    //if ($scope.SelectedMood != 0) {
                                    if ($scope.SelectedVideoQuality != 0) {
                                        //if ($scope.SelectedLanguages != 0) {
                                        if ($scope.SelectedNudity != 0) {
                                            //if ($scope.SelectedSelfRanking != 0) {
                                            //if ($scope.SelectedFestival != 0) {
                                            //if ($scope.SelectedReligion != 0) {
                                            if (new Date($scope.Startdate) <= new Date($scope.Expirydate)) {
                                                if (new Date($scope.Property[i].cm_starts_from) <= new Date($scope.Startdate) && new Date($scope.Property[i].cm_expires_on) >= new Date($scope.Expirydate)) {
                                                    //if ($scope.SearchKeywords != "") {
                                                    if ($scope.RightSettingShow == true) {
                                                        if ($scope.SelectedCountryRights.length > 0) {
                                                            if ($scope.SelectedChannelRights.length > 0) {
                                                                for (var i in $scope.SelectedCountryRights) {
                                                                    for (var j in $scope.SelectedChannelRights) {
                                                                        Rights.push({ propertyid: $scope.SelectedProperty, vendorid: $scope.SelectedVendor, CountryRights: $scope.SelectedCountryRights[i], ChannelRights: $scope.SelectedChannelRights[j] });
                                                                    }
                                                                }
                                                                var AddRights = GetAddRights($scope.OldRightData, Rights);
                                                                var DeleteRights = GetDeleteRights($scope.OldRightData, Rights);
                                                                var datas = {
                                                                    cm_Id: $scope.CM_ID,
                                                                    GroupId: $scope.GroupId,
                                                                    DisplayTitle: $scope.DisplayTitle,
                                                                    Description: $scope.Description,
                                                                    Duration: parseFloat($scope.Duration),
                                                                    ContentId: $scope.ContentId,
                                                                    Vendor: $scope.SelectedVendor,
                                                                    Property: $scope.SelectedProperty,
                                                                    VideoType: $scope.SelectedVideoType,
                                                                    Genres: $scope.SelectedGenres,
                                                                    SubGenres: $scope.SelectedSubGenres,
                                                                    Mood: $scope.SelectedMood,
                                                                    Singers: $scope.SelectedSingers,
                                                                    MusicDirectors: $scope.SelectedMusicDirectors,
                                                                    VideoQuality: $scope.SelectedVideoQuality,
                                                                    Languages: $scope.SelectedLanguages,
                                                                    Nudity: $scope.SelectedNudity,
                                                                    Festival: $scope.SelectedFestival,
                                                                    Religion: $scope.SelectedReligion,
                                                                    AddRights: AddRights,
                                                                    DeleteRights: DeleteRights,
                                                                    //Rights: Rights,
                                                                    SelfRanking: $scope.SelectedSelfRanking,
                                                                    StartDate: $scope.Startdate,
                                                                    ExpiryDate: $scope.Expirydate,
                                                                    RightsSetting: $scope.RightSettingShow
                                                                };

                                                                var NewArray = [];
                                                                NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9, GroupId: $scope.CelebrityGroupId, cm_Id: $scope.CM_ID });
                                                                NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23, cm_Id: $scope.CM_ID, LocationId: $scope.LocationId });
                                                                NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24, GroupId: $scope.KeywordGroupId, KeyId: $scope.KeyWordId, cm_Id: $scope.CM_ID });
                                                                NewArray.push({ Name: "datass", Value: datas });


                                                                ngProgress.start();
                                                                if (NewArray.length > 0) {
                                                                    var post_request = $http({
                                                                        method: "Post",
                                                                        url: 'video/UpdateVideo',
                                                                        data: NewArray,
                                                                        headers: { 'Content-Type': 'application/json' }
                                                                    });
                                                                    post_request.success(function (data) {
                                                                        if (data.Result == "VideoUpdated") {
                                                                            $scope.successvisible = true;
                                                                            $scope.success = "Record Updated successfully.";
                                                                            ngProgress.complete();
                                                                            if (data.GroupId != undefined || data.GroupId == null) {
                                                                                $scope.CelebrityGroupId = data.GroupId;
                                                                            }
                                                                            if (data.LocId != undefined || data.LocId == null) {
                                                                                $scope.LocationId = data.LocId;
                                                                            }
                                                                            $scope.SelectedVendor = data.VendorId;
                                                                            $scope.SelectedProperty = data.PropertyId;
                                                                            $scope.SelectedOldVendor = data.VendorId;
                                                                            $scope.SelectedOldProperty = data.PropertyId;

                                                                            var selectedrightsdata = angular.copy(data.RightsData);
                                                                            $scope.OldRightData = selectedrightsdata;

                                                                        }
                                                                        else if (data.Result == "ContentIdError") {
                                                                            $scope.UniqueCPContentId = true;
                                                                            ngProgress.complete();
                                                                        }

                                                                    });
                                                                    post_request.error(function (data, status, headers, config) {
                                                                        if (data != undefined) {
                                                                            $scope.errorvisible = true;
                                                                            $scope.error = data.substring(1, data.length - 1);
                                                                            ngProgress.complete();
                                                                        }
                                                                    });
                                                                }
                                                            }
                                                            else {
                                                                $scope.ChannelRightsValidation = true;
                                                            }
                                                        }
                                                        else {
                                                            $scope.CountryRightsValidation = true;
                                                        }
                                                    }
                                                    else {

                                                        var AddRights = GetAddRights($scope.OldRightData, Rights);
                                                        var DeleteRights = GetDeleteRights($scope.OldRightData, Rights);

                                                        var datas = {
                                                            cm_Id: $scope.CM_ID,
                                                            DisplayTitle: $scope.DisplayTitle,
                                                            Description: $scope.Description,
                                                            Duration: parseFloat($scope.Duration),
                                                            ContentId: $scope.ContentId,
                                                            Vendor: $scope.SelectedVendor,
                                                            Property: $scope.SelectedProperty,
                                                            VideoType: $scope.SelectedVideoType,
                                                            Genres: $scope.SelectedGenres,
                                                            SubGenres: $scope.SelectedSubGenres,
                                                            Mood: $scope.SelectedMood,
                                                            Singers: $scope.SelectedSingers,
                                                            MusicDirectors: $scope.SelectedMusicDirectors,
                                                            VideoQuality: $scope.SelectedVideoQuality,
                                                            Languages: $scope.SelectedLanguages,
                                                            Nudity: $scope.SelectedNudity,
                                                            Festival: $scope.SelectedFestival,
                                                            Religion: $scope.SelectedReligion,
                                                            AddRights: AddRights,
                                                            DeleteRights: DeleteRights,
                                                            SelfRanking: $scope.SelectedSelfRanking,
                                                            StartDate: $scope.Startdate,
                                                            ExpiryDate: $scope.Expirydate,
                                                            RightsSetting: $scope.RightSettingShow
                                                        };
                                                        var NewArray = [];
                                                        NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9, GroupId: $scope.CelebrityGroupId, cm_Id: $scope.CM_ID });
                                                        NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23, cm_Id: $scope.CM_ID, LocationId: $scope.LocationId });
                                                        NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24, GroupId: $scope.KeywordGroupId, KeyId: $scope.KeyWordId, cm_Id: $scope.CM_ID });
                                                        NewArray.push({ Name: "datass", Value: datas });

                                                        ngProgress.start();
                                                        if (NewArray.length > 0) {
                                                            var post_request = $http({
                                                                method: "Post",
                                                                url: 'video/UpdateVideo',
                                                                data: NewArray,
                                                                headers: { 'Content-Type': 'application/json' }
                                                            });
                                                            post_request.success(function (data) {

                                                                if (data.Result == "VideoUpdated") {
                                                                    $scope.successvisible = true;
                                                                    $scope.success = "Record Updated successfully.";
                                                                    ngProgress.complete();
                                                                    if (data.GroupId != undefined || data.GroupId == null) {
                                                                        $scope.CelebrityGroupId = data.GroupId;
                                                                    }
                                                                    if (data.LocId != undefined || data.LocId == null) {
                                                                        $scope.LocationId = data.LocId;
                                                                    }
                                                                    $scope.SelectedVendor = data.VendorId;
                                                                    $scope.SelectedProperty = data.PropertyId;
                                                                    $scope.SelectedOldVendor = data.VendorId;
                                                                    $scope.SelectedOldProperty = data.PropertyId;

                                                                    var selectedrightsdata = angular.copy(data.RightsData);
                                                                    $scope.OldRightData = selectedrightsdata;
                                                                }
                                                                else if (data.Result == "ContentIdError") {
                                                                    $scope.UniqueCPContentId = true;
                                                                    ngProgress.complete();
                                                                }

                                                            });
                                                            post_request.error(function (data, status, headers, config) {
                                                                if (data != undefined) {
                                                                    $scope.errorvisible = true;
                                                                    $scope.error = data.substring(1, data.length - 1);
                                                                    ngProgress.complete();
                                                                }
                                                            });
                                                        }
                                                    }

                                                    //}
                                                    //else {
                                                    //    $scope.KeywordValidation = true;
                                                    //}
                                                }
                                                else {
                                                    $scope.CheckPropertyDateValidation = true;
                                                }
                                            }
                                            else {
                                                $scope.DateConflictValidation = true;
                                            }
                                            //                }
                                            //                else {
                                            //                    $scope.ReligionValidation = true;
                                            //                }
                                            //            }
                                            //            else {
                                            //                $scope.FestivalValidation = true;
                                            //            }
                                            //        }
                                            //        else {
                                            //            $scope.SelfRankingValidation = true;
                                            //        }
                                        }
                                        else {
                                            $scope.NudityValidation = true;
                                        }
                                        //}
                                        //else {
                                        //    $scope.LanguagesValidation = true;
                                        //}
                                    }
                                    else {
                                        $scope.VideoQualityValidation = true;
                                    }
                                    //    }
                                    //    else {
                                    //        $scope.MoodValidation = true;
                                    //    }
                                    //}
                                    //else {
                                    //    $scope.SubGenresValidation = true;
                                    //}
                                }
                                else {
                                    $scope.GenresValidation = true;
                                }
                            }
                            else {
                                $scope.DurationValidation = true;
                            }
                        }
                        else {
                            $scope.VideoTypeValidation = true;
                        }
                        //    }
                        //    else {
                        //        $scope.CelebrityValidation = true;
                        //    }
                        //}
                        //else {
                        //    $scope.DescriptionValidation = true;
                        //}
                    }
                }
            }
            else {
                $scope.PropertyValidation = true;
            }
        }
        else {
            $scope.VendorValidation = true;
        }
    }

    $scope.BackToContentCatalog = function () {
        $window.location.href = "#content-catalog";
    }
});

myApp.controller('audioCtrl', function ($scope, $http, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#audio').addClass('active');
    $('#addcontentmetadata').addClass('active');
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.Vendor = [];
    $scope.AllProperty = [];
    $scope.AudioType = [];
    $scope.Genres = [];
    $scope.SubGenres = [];
    $scope.Mood = [];
    $scope.Singers = [];
    $scope.MusicDirectors = [];
    $scope.Languages = [];
    $scope.Nudity = [];
    $scope.Festival = [];
    $scope.Religion = [];
    $scope.RaagTaal = [];
    $scope.Instruments = [];
    $scope.AllCountryRights = [];
    $scope.AllChannelRights = [];
    $scope.Celebrity = [];
    $scope.Location = "";
    $scope.SelfRanking = [];
    $scope.AllAudioDetail = [];

    $scope.Property = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];
    $scope.DisplayTitle = "";
    $scope.Description = "";

    $scope.Duration = "";

    $scope.SearchKeywords = "";
    $scope.ContentId = "";
    $scope.RightSettingShow = false;

    $scope.VendorValidation = false;
    $scope.PropertyValidation = false;
    $scope.TitleValidation = false;
    $scope.DescriptionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.AudioTypeValidation = false;
    $scope.DurationValidation = false;
    $scope.GenresValidation = false;
    $scope.SubGenresValidation = false;
    $scope.MoodValidation = false;
    $scope.LanguagesValidation = false;
    $scope.NudityValidation = false;
    $scope.SelfRankingValidation = false;
    $scope.FestivalValidation = false;
    $scope.ReligionValidation = false;
    $scope.RaagTaalValidation = false;
    $scope.InstrumentsValidation = false;
    $scope.UniqueCPContentId = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;


    $scope.SelectedVendor = 0;
    $scope.SelectedProperty = 0;
    $scope.SelectedAudioType = 0;
    $scope.SelectedGenres = 0;
    $scope.SelectedSubGenres = 0;
    $scope.SelectedMood = 0;
    $scope.SelectedSingers = 0;
    $scope.SelectedMusicDirectors = 0;
    $scope.SelectedVideoQuality = 0;
    $scope.SelectedLanguages = 0;
    $scope.SelectedNudity = 0;
    $scope.SelectedFestival = 0;
    $scope.SelectedReligion = 0;
    $scope.SelectedRaagTaal = 0;
    $scope.SelectedInstruments = 0;
    $scope.SelectedCelebrity = 0;
    $scope.SelectedCountryRights = 0;
    $scope.SelectedChannelRights = 0;
    $scope.SelectedSelfRanking = 0;
    $scope.SaveEnable = false;
    $scope.IsDisable = true;
    $scope.PropertyDisable = true;

    $scope.Startdate = getDate(new Date());
    $scope.Expirydate = "";
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    $scope.AllPropertyDetail = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];

    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.Permission = true;
    $scope.IsDisabled = false;
    if ($scope.Permission == true) {
        $scope.IsDisabled = false;
    }
    else {
        $scope.IsDisabled = true;
    }

    var get_request = $http({
        method: "Get",
        url: 'audio/GetAudioData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        if (datas.UserRole === "Content Manager") {
            for (var i in datas.Audiodata) {
                if (datas.Audiodata[i].cd_cm_id == 3) {
                    $scope.AllCountryRights.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 4) {
                    $scope.AllChannelRights.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 5) {
                    $scope.Genres.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 6) {
                    $scope.SubGenres.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 7) {
                    $scope.Mood.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 8) {
                    $scope.Languages.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 9) {
                    $scope.Celebrity.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 10) {
                    $scope.Festival.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 11) {
                    $scope.Religion.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 12) {
                    $scope.Singers.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 13) {
                    $scope.MusicDirectors.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 14) {
                    $scope.RaagTaal.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 15) {
                    $scope.Instruments.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 25) {
                    $scope.SelfRanking.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 26) {
                    $scope.Nudity.push(datas.Audiodata[i]);
                }
                if (datas.Audiodata[i].cd_cm_id == 28) {
                    $scope.AudioType.push(datas.Audiodata[i]);
                }
            }
            $scope.AllPropertyDetail = angular.copy(datas.AllPropertyData);
            $scope.AllProperty = angular.copy(datas.PropertyData);
            $scope.Vendor = angular.copy(datas.VendorData);


        }
        else {
            location.href = "/";
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.VendorChange = function () {
        $scope.Property = [];
        $scope.PropertyDisable = false;
        $scope.RightSettingShow = false;

        if ($scope.SelectedVendor != 0) {
            for (var i in $scope.AllProperty) {
                if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                    $scope.Property.push($scope.AllProperty[i]);
                    $scope.PropertyDisable = false;
                    $scope.SelectedProperty = 0;
                }
            }
        }
        else {
            $scope.PropertyDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
        if ($scope.Property.length <= 0) {
            $scope.IsDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
    }

    $scope.PropertyChange = function () {
        $scope.RightSettingShow = false;
        $scope.IsDisable = true;
        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        if ($scope.SelectedProperty != 0) {
            for (var i in $scope.Property) {
                if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                    for (var j in $scope.AllCountryRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                    flag = true;
                                }
                                //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            country.push($scope.AllCountryRights[j].cd_id);
                            $scope.CountryRights.push($scope.AllCountryRights[j]);
                        }
                    }
                    for (var j in $scope.AllChannelRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                    flag = true;
                                }
                                //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            channel.push($scope.AllChannelRights[j].cd_id);
                            $scope.ChannelRights.push($scope.AllChannelRights[j]);
                        }
                    }
                    if ($scope.Property[i].r_rights_at_content_level == 1) {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = true;
                    }
                    else {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = false;
                    }
                }
            }
        }
        else {
            $scope.IsDisable = true;
            $scope.RightSettingShow = false;
        }
    }

    $scope.SaveAudio = function () {
        $scope.VendorValidation = false;
        $scope.PropertyValidation = false;
        $scope.TitleValidation = false;
        $scope.DescriptionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.AudioTypeValidation = false;
        $scope.DurationValidation = false;
        $scope.GenresValidation = false;
        $scope.SubGenresValidation = false;
        $scope.MoodValidation = false;
        $scope.LanguagesValidation = false;
        $scope.NudityValidation = false;
        $scope.SelfRankingValidation = false;
        $scope.FestivalValidation = false;
        $scope.ReligionValidation = false;
        $scope.RaagTaalValidation = false;
        $scope.InstrumentsValidation = false;
        $scope.DateConflictValidation = false;
        $scope.CheckPropertyDateValidation = false;
        $scope.UniqueCPContentId = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;

        var Rights = [];
        if ($scope.SelectedVendor != 0) {
            if ($scope.SelectedProperty != 0) {
                for (var i in $scope.Property) {
                    if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                        //if ($scope.Description != "") {
                        //if ($scope.SelectedCelebrity != 0) {
                        if ($scope.SelectedAudioType != 0) {
                            if ($scope.Duration != "" && !isNaN($scope.Duration) && $scope.Duration.length <= 10) {
                                if ($scope.SelectedGenres != 0) {
                                    // if ($scope.SelectedSubGenres != 0) {
                                    //if ($scope.SelectedMood != 0) {
                                    //if ($scope.SelectedLanguages != 0) {
                                    if ($scope.SelectedNudity != 0) {
                                        // if ($scope.SelectedSelfRanking != 0) {
                                        //if ($scope.SelectedFestival != 0) {
                                        //if ($scope.SelectedReligion != 0) {
                                        // if ($scope.SelectedRaagTaal != 0) {
                                        // if ($scope.SelectedInstruments != 0) {
                                        if (new Date($scope.Startdate) <= new Date($scope.Expirydate)) {
                                            if (new Date($scope.Property[i].cm_starts_from) <= new Date($scope.Startdate) && new Date($scope.Property[i].cm_expires_on) >= new Date($scope.Expirydate)) {
                                                if ($scope.RightSettingShow == true) {
                                                    if ($scope.SelectedCountryRights.length > 0) {
                                                        if ($scope.SelectedChannelRights.length > 0) {
                                                            for (var i in $scope.SelectedCountryRights) {
                                                                for (var j in $scope.SelectedChannelRights) {
                                                                    Rights.push({ CountryRights: $scope.SelectedCountryRights[i], ChannelRights: $scope.SelectedChannelRights[j] });
                                                                }
                                                            }
                                                            var datas = {
                                                                DisplayTitle: $scope.DisplayTitle,
                                                                Description: $scope.Description,
                                                                Celebrity: $scope.SelectedCelebrity,
                                                                Duration: parseFloat($scope.Duration),
                                                                Location: $scope.Location,
                                                                search: $scope.SearchKeywords,
                                                                ContentId: $scope.ContentId,
                                                                Vendor: $scope.SelectedVendor,
                                                                Property: $scope.SelectedProperty,
                                                                AudioType: $scope.SelectedAudioType,
                                                                Genres: $scope.SelectedGenres,
                                                                SubGenres: $scope.SelectedSubGenres,
                                                                Mood: $scope.SelectedMood,
                                                                Singers: $scope.SelectedSingers,
                                                                MusicDirectors: $scope.SelectedMusicDirectors,
                                                                Languages: $scope.SelectedLanguages,
                                                                Nudity: $scope.SelectedNudity,
                                                                Festival: $scope.SelectedFestival,
                                                                Religion: $scope.SelectedReligion,
                                                                Rights: Rights,
                                                                //RaagTaal:
                                                                SelfRanking: $scope.SelectedSelfRanking,
                                                                StartDate: $scope.Startdate,
                                                                ExpiryDate: $scope.Expirydate,
                                                                RightsSetting: $scope.RightSettingShow
                                                            };

                                                            var NewArray = [];
                                                            NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9 });
                                                            NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23 });
                                                            NewArray.push({ Name: "RaagTaal", Value: $scope.SelectedRaagTaal, Id: 14 });
                                                            NewArray.push({ Name: "Instruments", Value: $scope.SelectedInstruments, Id: 15 });
                                                            NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24 });
                                                            NewArray.push({ Name: "datass", Value: datas });

                                                            ngProgress.start();
                                                            if (NewArray.length > 0) {
                                                                var post_request = $http({
                                                                    method: "Post",
                                                                    url: 'audio/AddAudio',
                                                                    data: NewArray,
                                                                    headers: { 'Content-Type': 'application/json' }
                                                                });
                                                                post_request.success(function (data) {
                                                                    $scope.Cm_ID = data.cm_id;
                                                                    if (data.Result == "Success") {
                                                                        $scope.Property = [];
                                                                        $scope.CountryRights = [];
                                                                        $scope.ChannelRights = [];
                                                                        $scope.DisplayTitle = "";
                                                                        $scope.Description = "";
                                                                        $scope.SelectedCelebrity = 0;
                                                                        $scope.Duration = "";
                                                                        $scope.Location = "";
                                                                        $scope.SearchKeywords = "";
                                                                        $scope.ContentId = "";
                                                                        $scope.RightSettingShow = false;
                                                                        $scope.SelectedVendor = 0;
                                                                        $scope.SelectedProperty = 0;
                                                                        $scope.SelectedAudioType = 0;
                                                                        $scope.SelectedGenres = 0;
                                                                        $scope.SelectedSubGenres = 0;
                                                                        $scope.SelectedMood = 0;
                                                                        $scope.SelectedSingers = 0;
                                                                        $scope.SelectedMusicDirectors = 0;
                                                                        $scope.SelectedVideoQuality = 0;
                                                                        $scope.SelectedLanguages = 0;
                                                                        $scope.SelectedNudity = 0;
                                                                        $scope.SelectedFestival = 0;
                                                                        $scope.SelectedReligion = 0;
                                                                        $scope.SelectedRaagTaal = 0;
                                                                        $scope.SelectedInstruments = 0;
                                                                        $scope.SelectedCountryRights = 0;
                                                                        $scope.SelectedChannelRights = 0;
                                                                        $scope.SaveEnable = false;
                                                                        $scope.IsDisable = true;
                                                                        $scope.PropertyDisable = true;

                                                                        $scope.Startdate = getDate(new Date());
                                                                        $scope.Expirydate = "";
                                                                        $scope.successvisible = true;
                                                                        $scope.success = "Record inserted successfully. Your Unique MetaData Id is '" + $scope.Cm_ID + "'";
                                                                        ngProgress.complete();
                                                                    }
                                                                    else if (data.Result == "ContentIdError") {
                                                                        $scope.UniqueCPContentId = true;
                                                                    }
                                                                });
                                                                post_request.error(function (data, status, headers, config) {
                                                                    if (data != undefined) {
                                                                        $scope.errorvisible = true;
                                                                        $scope.error = data.substring(1, data.length - 1);
                                                                        ngProgress.complete();
                                                                    }
                                                                });
                                                            }
                                                        }
                                                        else {
                                                            $scope.ChannelRightsValidation = true;
                                                        }
                                                    }
                                                    else {
                                                        $scope.CountryRightsValidation = true;
                                                    }

                                                }
                                                else {
                                                    Rights = [];
                                                    var datas = {
                                                        DisplayTitle: $scope.DisplayTitle,
                                                        Description: $scope.Description,
                                                        Celebrity: $scope.SelectedCelebrity,
                                                        Duration: parseFloat($scope.Duration),
                                                        Location: $scope.Location,
                                                        search: $scope.SearchKeywords,
                                                        ContentId: $scope.ContentId,
                                                        Vendor: $scope.SelectedVendor,
                                                        Property: $scope.SelectedProperty,
                                                        AudioType: $scope.SelectedAudioType,
                                                        Genres: $scope.SelectedGenres,
                                                        SubGenres: $scope.SelectedSubGenres,
                                                        Mood: $scope.SelectedMood,
                                                        Singers: $scope.SelectedSingers,
                                                        MusicDirectors: $scope.SelectedMusicDirectors,
                                                        Languages: $scope.SelectedLanguages,
                                                        Nudity: $scope.SelectedNudity,
                                                        Festival: $scope.SelectedFestival,
                                                        Religion: $scope.SelectedReligion,
                                                        Rights: Rights,
                                                        SelfRanking: $scope.SelectedSelfRanking,
                                                        StartDate: $scope.Startdate,
                                                        ExpiryDate: $scope.Expirydate,
                                                        RightsSetting: $scope.RightSettingShow
                                                    };
                                                    var NewArray = [];
                                                    NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9 });
                                                    NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23 });
                                                    NewArray.push({ Name: "RaagTaal", Value: $scope.SelectedRaagTaal, Id: 14 });
                                                    NewArray.push({ Name: "Instruments", Value: $scope.SelectedInstruments, Id: 15 });
                                                    NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24 });
                                                    NewArray.push({ Name: "datass", Value: datas });


                                                    ngProgress.start();
                                                    if (NewArray.length > 0) {
                                                        var post_request = $http({
                                                            method: "Post",
                                                            url: 'audio/AddAudio',
                                                            data: NewArray,
                                                            headers: { 'Content-Type': 'application/json' }
                                                        });
                                                        post_request.success(function (data) {
                                                            $scope.Cm_ID = data.cm_id;
                                                            if (data.Result == "Success") {
                                                                $scope.Property = [];
                                                                $scope.CountryRights = [];
                                                                $scope.ChannelRights = [];
                                                                $scope.DisplayTitle = "";
                                                                $scope.Description = "";
                                                                $scope.SelectedCelebrity = 0;
                                                                $scope.Duration = "";
                                                                $scope.Location = "";
                                                                $scope.SearchKeywords = "";
                                                                $scope.ContentId = "";
                                                                $scope.RightSettingShow = false;
                                                                $scope.SelectedVendor = 0;
                                                                $scope.SelectedProperty = 0;
                                                                $scope.SelectedAudioType = 0;
                                                                $scope.SelectedGenres = 0;
                                                                $scope.SelectedSubGenres = 0;
                                                                $scope.SelectedMood = 0;
                                                                $scope.SelectedSingers = 0;
                                                                $scope.SelectedMusicDirectors = 0;
                                                                $scope.SelectedVideoQuality = 0;
                                                                $scope.SelectedLanguages = 0;
                                                                $scope.SelectedNudity = 0;
                                                                $scope.SelectedFestival = 0;
                                                                $scope.SelectedReligion = 0;
                                                                $scope.SelectedRaagTaal = 0;
                                                                $scope.SelectedInstruments = 0;
                                                                $scope.SelectedCountryRights = 0;
                                                                $scope.SelectedChannelRights = 0;
                                                                $scope.SaveEnable = false;
                                                                $scope.IsDisable = true;
                                                                $scope.PropertyDisable = true;

                                                                $scope.Startdate = getDate(new Date());
                                                                $scope.Expirydate = "";
                                                                $scope.successvisible = true;
                                                                $scope.success = "Record inserted successfully. Your Unique MetaData Id is '" + $scope.Cm_ID + "'";
                                                                ngProgress.complete();
                                                            }
                                                            else if (data.Result == "ContentIdError") {
                                                                $scope.UniqueCPContentId = true;
                                                            }
                                                        });
                                                        post_request.error(function (data, status, headers, config) {
                                                            if (data != undefined) {
                                                                $scope.errorvisible = true;
                                                                $scope.error = data.substring(1, data.length - 1);
                                                                ngProgress.complete();
                                                            }
                                                        });
                                                    }
                                                }

                                            }
                                            else {
                                                $scope.CheckPropertyDateValidation = true;
                                            }
                                        }
                                        else {
                                            $scope.DateConflictValidation = true;
                                        }
                                        //                }
                                        //                else {
                                        //                    $scope.InstrumentsValidation = true;
                                        //                }
                                        //            }
                                        //            else {
                                        //                $scope.RaagTaalValidation = true;
                                        //            }
                                        //        }
                                        //        else {
                                        //            $scope.ReligionValidation = true;
                                        //        }
                                        //    }
                                        //    else {
                                        //        $scope.FestivalValidation = true;
                                        //    }
                                        //}
                                        //else {
                                        //    $scope.SelfRankingValidation = true;
                                        //}
                                    }
                                    else {
                                        $scope.NudityValidation = true;
                                    }
                                    //        }
                                    //        else {
                                    //            $scope.LanguagesValidation = true;
                                    //        }
                                    //    }
                                    //    else {
                                    //        $scope.MoodValidation = true;
                                    //    }
                                    //}
                                    //else {
                                    //    $scope.SubGenresValidation = true;
                                    //}
                                }
                                else {
                                    $scope.GenresValidation = true;
                                }
                            }
                            else {
                                $scope.DurationValidation = true;
                            }
                        }
                        else {
                            $scope.AudioTypeValidation = true;
                        }
                        //    }
                        //    else {
                        //        $scope.CelebrityValidation = true;
                        //    }
                        //}
                        //else {
                        //    $scope.DescriptionValidation = true;
                        //}
                    }
                }
            }
            else {
                $scope.PropertyValidation = true;
            }
        }
        else {
            $scope.VendorValidation = true;
        }
    }

    $scope.ResetAudio = function () {
        $scope.Property = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        $scope.DisplayTitle = "";
        $scope.Description = "";
        $scope.SelectedCelebrity = 0;
        $scope.Duration = "";
        $scope.Location = "";
        $scope.SearchKeywords = "";
        $scope.ContentId = "";
        $scope.RightSettingShow = false;
        $scope.SelectedVendor = 0;
        $scope.SelectedProperty = 0;
        $scope.SelectedAudioType = 0;
        $scope.SelectedGenres = 0;
        $scope.SelectedSubGenres = 0;
        $scope.SelectedMood = 0;
        $scope.SelectedSingers = 0;
        $scope.SelectedMusicDirectors = 0;
        $scope.SelectedVideoQuality = 0;
        $scope.SelectedLanguages = 0;
        $scope.SelectedNudity = 0;
        $scope.SelectedFestival = 0;
        $scope.SelectedReligion = 0;
        $scope.SelectedRaagTaal = 0;
        $scope.SelectedInstruments = 0;
        $scope.SelectedCountryRights = 0;
        $scope.SelectedChannelRights = 0;
        $scope.SaveEnable = false;
        $scope.IsDisable = true;
        $scope.PropertyDisable = true;

        $scope.Startdate = getDate(new Date());
        $scope.Expirydate = "";
    }
});

myApp.controller('editaudioCtrl', function ($scope, $http, $routeParams, $window, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addcontentmetadata').addClass('active');
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.Vendor = [];
    $scope.AllProperty = [];
    $scope.AudioType = [];
    $scope.Genres = [];
    $scope.SubGenres = [];
    $scope.Mood = [];
    $scope.Singers = [];
    $scope.MusicDirectors = [];
    $scope.Languages = [];
    $scope.Nudity = [];
    $scope.Festival = [];
    $scope.Religion = [];
    $scope.RaagTaal = [];
    $scope.Instruments = [];
    $scope.AllCountryRights = [];
    $scope.AllChannelRights = [];
    $scope.Celebrity = [];
    $scope.Location = "";
    $scope.SelfRanking = [];
    $scope.AllAudioDetail = [];
    $scope.AllLocations = [];
    $scope.AllKeywords = [];
    $scope.Property = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];
    $scope.DisplayTitle = "";
    $scope.Description = "";

    $scope.Duration = "";

    $scope.SearchKeywords = "";
    $scope.ContentId = "";
    $scope.RightSettingShow = true;

    $scope.VendorValidation = false;
    $scope.PropertyValidation = false;
    $scope.TitleValidation = false;
    $scope.DescriptionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.AudioTypeValidation = false;
    $scope.DurationValidation = false;
    $scope.GenresValidation = false;
    $scope.SubGenresValidation = false;
    $scope.MoodValidation = false;
    $scope.LanguagesValidation = false;
    $scope.NudityValidation = false;
    $scope.SelfRankingValidation = false;
    $scope.FestivalValidation = false;
    $scope.ReligionValidation = false;
    $scope.RaagTaalValidation = false;
    $scope.InstrumentsValidation = false;
    $scope.UniqueCPContentId = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;
    $scope.SelectedOldVendor = "";
    $scope.SelectedOldProperty = "";

    $scope.SelectedVendor = 0;
    $scope.SelectedProperty = 0;
    $scope.SelectedAudioType = 0;
    $scope.SelectedGenres = 0;
    $scope.SelectedSubGenres = 0;
    $scope.SelectedMood = 0;
    $scope.SelectedSingers = 0;
    $scope.SelectedMusicDirectors = 0;
    $scope.SelectedVideoQuality = 0;
    $scope.SelectedLanguages = 0;
    $scope.SelectedNudity = 0;
    $scope.SelectedFestival = 0;
    $scope.SelectedReligion = 0;
    $scope.SelectedRaagTaal = 0;
    $scope.SelectedInstruments = 0;
    $scope.SelectedCelebrity = 0;
    $scope.SelectedCountryRights = 0;
    $scope.SelectedChannelRights = 0;
    $scope.SelectedSelfRanking = 0;
    $scope.IsDisable = false;
    $scope.PropertyDisable = true;

    $scope.Startdate = getDate(new Date());
    $scope.Expirydate = "";
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";

    $scope.AllPropertyDetail = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];

    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.Permission = true;
    $scope.IsDisabled = false;
    if ($scope.Permission == true) {
        $scope.IsDisabled = false;
    }
    else {
        $scope.IsDisabled = true;
    }

    var get_request = $http({
        method: "Post",
        url: 'audio/GetEditAudioData',
        data: { 'cm_id': $routeParams.id },
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        $scope.SubGenres.unshift({ cd_id: 0, cd_name: "Select Sub Genres" });
        $scope.Mood.unshift({ cd_id: 0, cd_name: "Select Mood" });
        $scope.Languages.unshift({ cd_id: 0, cd_name: "Select Languages" });
        $scope.Festival.unshift({ cd_id: 0, cd_name: "Select Festival" });
        $scope.Celebrity.unshift({ cd_id: 0, cd_name: "Select Celebrity" });
        $scope.Religion.unshift({ cd_id: 0, cd_name: "Select Religion" });
        $scope.AudioType.unshift({ cd_id: 0, cd_name: "Select VideoType" });
        $scope.SelfRanking.unshift({ cd_id: 0, cd_name: "Select SelfRanking" });
        $scope.RaagTaal.unshift({ cd_id: 0, cd_name: "Select RaagTaal" });
        $scope.Instruments.unshift({ cd_id: 0, cd_name: "Select Instruments" });
        $scope.Singers.unshift({ cd_id: 0, cd_name: "Select Singers" });
        $scope.MusicDirectors.unshift({ cd_id: 0, cd_name: "Select MusicDirectors" });

        for (var i in datas.Audiodata) {
            if (datas.Audiodata[i].cd_cm_id == 3) {
                $scope.AllCountryRights.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 4) {
                $scope.AllChannelRights.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 5) {
                $scope.Genres.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 6) {
                $scope.SubGenres.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 7) {
                $scope.Mood.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 8) {
                $scope.Languages.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 9) {
                $scope.Celebrity.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 10) {
                $scope.Festival.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 11) {
                $scope.Religion.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 12) {
                $scope.Singers.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 13) {
                $scope.MusicDirectors.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 14) {
                $scope.RaagTaal.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 15) {
                $scope.Instruments.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 23) {
                $scope.AllLocations.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 24) {
                $scope.AllKeywords.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 25) {
                $scope.SelfRanking.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 26) {
                $scope.Nudity.push(datas.Audiodata[i]);
            }
            if (datas.Audiodata[i].cd_cm_id == 28) {
                $scope.AudioType.push(datas.Audiodata[i]);
            }
        }
        for (var i in datas.ContentMetadata) {
            $scope.SelectedVendor = CheckNull(datas.ContentMetadata[0].cm_vendor);
            $scope.SelectedOldVendor = CheckNull(datas.ContentMetadata[0].cm_vendor);
            $scope.SelectedOldProperty = CheckNull(datas.ContentMetadata[0].cm_property_id);
            $scope.SelectedGenres = CheckNull(datas.ContentMetadata[0].cm_genre);
            $scope.SelectedSubGenres = CheckNull(datas.ContentMetadata[0].cm_sub_genre);
            $scope.SelectedMood = CheckNull(datas.ContentMetadata[0].cm_mood);
            $scope.SelectedAudioType = CheckNull(datas.ContentMetadata[0].cm_sub_content_type);
            $scope.SelectedLanguages = CheckNull(datas.ContentMetadata[0].cm_language);
            $scope.SelectedNudity = CheckNull(datas.ContentMetadata[0].cm_nudity);
            $scope.SelectedFestival = CheckNull(datas.ContentMetadata[0].cm_festival_occasion);
            $scope.SelectedReligion = CheckNull(datas.ContentMetadata[0].cm_religion);
            $scope.SelectedSingers = CheckNull((datas.ContentMetadata[0].cm_singer));
            $scope.SelectedMusicDirectors = CheckNull((datas.ContentMetadata[0].cm_music_director));
            $scope.Startdate = getDate(new Date(datas.ContentMetadata[0].cm_starts_from));
            $scope.Expirydate = getDate(new Date(datas.ContentMetadata[0].cm_expires_on));
            //$('#dpStart').datepicker('setDate', new Date(datas.ContentMetadata[0].cm_starts_from));
            //$('#dpStart').datepicker('update');
            //$('#dpEnd').datepicker('setDate', new Date(datas.ContentMetadata[0].cm_expires_on));
            //$('#dpEnd').datepicker('update');
            $scope.SelectedRaagTaal = CheckNull(datas.ContentMetadata[0].raagtaal_cd_id);
            $scope.DisplayTitle = datas.ContentMetadata[0].cm_title;
            $scope.Description = datas.ContentMetadata[0].cm_short_desc;
            $scope.ContentId = datas.ContentMetadata[0].cm_cp_content_id;
            $scope.Duration = datas.ContentMetadata[0].cm_content_duration;
            $scope.SelectedSelfRanking = CheckNull(datas.ContentMetadata[0].cm_rank);
            $scope.SearchKeywords = datas.ContentMetadata[0].keyword_cd_name;
            $scope.SelectedInstruments = CheckNull(datas.ContentMetadata[0].instruments_cd_id);
            $scope.SelectedCelebrity = CheckNull(datas.ContentMetadata[0].celebrity_cd_id);
            $scope.CelebrityGroupId = datas.ContentMetadata[0].celebrity_cmd_id;
            $scope.KeywordGroupId = datas.ContentMetadata[0].keyword_group;
            $scope.CM_ID = datas.ContentMetadata[0].cm_id;
            $scope.LocationId = datas.ContentMetadata[0].cm_location;
            $scope.KeyWordId = datas.ContentMetadata[0].keyword_cd_id;
            $scope.GroupId = datas.ContentMetadata[0].cm_r_group_id;
            $scope.RaagGroupId = datas.ContentMetadata[0].raagtaal_cmd_id;
            $scope.InstrumentsGroupId = datas.ContentMetadata[0].instruments_cmd_id;
            for (var i in $scope.AllLocations) {
                if ($scope.AllLocations[i].cd_id == datas.ContentMetadata[0].cm_location) {
                    $scope.Location = $scope.AllLocations[i].cd_name;
                }
            }
        }
        var selectedrightsdata = angular.copy(datas.RightsData);
        $scope.OldRightData = selectedrightsdata;


        $scope.SelectedCountryRights = [];
        $scope.SelectedChannelRights = [];

        for (var i in selectedrightsdata) {
            if ($scope.SelectedCountryRights.indexOf(selectedrightsdata[i].r_country_distribution_rights) == -1) {
                $scope.SelectedCountryRights.push(selectedrightsdata[i].r_country_distribution_rights);
            }
            if ($scope.SelectedChannelRights.indexOf(selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                $scope.SelectedChannelRights.push(selectedrightsdata[i].r_channel_distribution_rights);
            }
        }



        $scope.AllPropertyDetail = angular.copy(datas.AllPropertyData);
        $scope.AllProperty = angular.copy(datas.PropertyData);
        $scope.Vendor = angular.copy(datas.VendorData);

        for (var i in $scope.AllProperty) {
            if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                $scope.Property.push($scope.AllProperty[i]);
                $scope.PropertyDisable = false;
                $scope.SelectedProperty = datas.ContentMetadata[0].cm_property_id;
                $scope.RightSettingShow = true;
            }
        }

        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        for (var i in $scope.Property) {
            if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                for (var j in $scope.AllCountryRights) {
                    var flag = false;
                    for (var k in $scope.AllPropertyDetail) {
                        if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                            if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                flag = true;
                            }
                            //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                            //    flag = true;
                            //}
                        }
                    }
                    if (flag) {
                        country.push($scope.AllCountryRights[j].cd_id);
                        $scope.CountryRights.push($scope.AllCountryRights[j]);
                    }
                }
                for (var j in $scope.AllChannelRights) {
                    var flag = false;
                    for (var k in $scope.AllPropertyDetail) {
                        if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                            if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                flag = true;
                            }
                            //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                            //    flag = true;
                            //}
                        }
                    }
                    if (flag) {
                        channel.push($scope.AllChannelRights[j].cd_id);
                        $scope.ChannelRights.push($scope.AllChannelRights[j]);
                    }
                }
                if ($scope.Property[i].r_rights_at_content_level == 1) {
                    $scope.IsDisable = false;
                    $scope.RightSettingShow = true;
                }
                else {
                    $scope.IsDisable = false;
                    $scope.RightSettingShow = false;
                }
            }

        }
        $scope.VendorDisable = datas.IsEdit;
        $scope.PropertyDisable = datas.IsEdit;
        $scope.IsDisable = datas.IsEdit;
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.VendorChange = function () {
        $scope.Property = [];
        $scope.PropertyDisable = false;
        $scope.RightSettingShow = false;

        $scope.Property.unshift({ cm_id: 0, cm_title: "Select Property" });
        if ($scope.SelectedVendor != 0) {
            for (var i in $scope.AllProperty) {
                if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                    $scope.Property.push($scope.AllProperty[i]);
                    $scope.PropertyDisable = false;
                    $scope.SelectedProperty = 0;
                    if ($scope.SelectedOldVendor != $scope.SelectedVendor) {
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];
                    }
                    else {
                        $scope.OldRightData = $scope.selectedrightsdata;
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                        for (var i in $scope.selectedrightsdata) {
                            if ($scope.SelectedCountryRights.indexOf($scope.selectedrightsdata[i].r_country_distribution_rights) == -1) {
                                $scope.SelectedCountryRights.push($scope.selectedrightsdata[i].r_country_distribution_rights);
                            }
                            if ($scope.SelectedChannelRights.indexOf($scope.selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                                $scope.SelectedChannelRights.push($scope.selectedrightsdata[i].r_channel_distribution_rights);
                            }
                        }
                    }
                }
            }
        }
        else {
            $scope.PropertyDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
        if ($scope.Property.length == 1) {
            $scope.IsDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
    }

    $scope.PropertyChange = function () {
        $scope.RightSettingShow = false;
        $scope.IsDisable = true;
        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        $scope.OldDeleteData = [];
        $scope.OldDeleteData = $scope.OldRightData;
        if ($scope.SelectedProperty != 0) {
            for (var i in $scope.Property) {
                if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                    for (var j in $scope.AllCountryRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                    flag = true;
                                }
                                //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            country.push($scope.AllCountryRights[j].cd_id);
                            $scope.CountryRights.push($scope.AllCountryRights[j]);
                        }
                    }
                    for (var j in $scope.AllChannelRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                    flag = true;
                                }
                                //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            channel.push($scope.AllChannelRights[j].cd_id);
                            $scope.ChannelRights.push($scope.AllChannelRights[j]);
                        }
                    }
                    if ($scope.Property[i].r_rights_at_content_level == 1) {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = true;
                    }
                    else {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = false;
                    }
                    if ($scope.SelectedOldProperty != $scope.SelectedProperty) {
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                    }
                    else {
                        $scope.OldRightData = $scope.selectedrightsdata;
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                        for (var i in $scope.selectedrightsdata) {
                            if ($scope.SelectedCountryRights.indexOf($scope.selectedrightsdata[i].r_country_distribution_rights) == -1) {
                                $scope.SelectedCountryRights.push($scope.selectedrightsdata[i].r_country_distribution_rights);
                            }
                            if ($scope.SelectedChannelRights.indexOf($scope.selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                                $scope.SelectedChannelRights.push($scope.selectedrightsdata[i].r_channel_distribution_rights);
                            }
                        }
                    }
                }


            }
        }
        else {
            $scope.IsDisable = true;
            $scope.RightSettingShow = false;
        }
    }

    function GetDeleteRights(OldRights, SelectedRights) {
        var DeleteArray = [];
        for (var i in OldRights) {
            var flag = true;
            for (var j in SelectedRights) {
                if (SelectedRights[j].vendorid == OldRights[i].cm_vendor && OldRights[i].cm_property_id == SelectedRights[j].propertyid) {
                    if (OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryRights) {
                        flag = false;
                    }
                }
            }
            if (flag) {
                DeleteArray.push(OldRights[i]);
            }
        }
        return DeleteArray;
    }

    function GetAddRights(OldRights, SelectedRights) {
        var AddArray = [];
        for (var j in SelectedRights) {
            var flag = true;
            for (var i in OldRights) {
                if (SelectedRights[j].vendorid == OldRights[i].cm_vendor && OldRights[i].cm_property_id == SelectedRights[j].propertyid && OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryRights) {
                    flag = false;
                }
            }
            if (flag) {
                AddArray.push({ CountryRights: SelectedRights[j].CountryRights, ChannelRights: SelectedRights[j].ChannelRights });
            }
        }
        return AddArray;
    }

    $scope.SaveAudio = function () {
        $scope.VendorValidation = false;
        $scope.PropertyValidation = false;
        $scope.TitleValidation = false;
        $scope.DescriptionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.AudioTypeValidation = false;
        $scope.DurationValidation = false;
        $scope.GenresValidation = false;
        $scope.SubGenresValidation = false;
        $scope.MoodValidation = false;
        $scope.LanguagesValidation = false;
        $scope.NudityValidation = false;
        $scope.SelfRankingValidation = false;
        $scope.FestivalValidation = false;
        $scope.ReligionValidation = false;
        $scope.RaagTaalValidation = false;
        $scope.InstrumentsValidation = false;
        $scope.DateConflictValidation = false;
        $scope.CheckPropertyDateValidation = false;
        $scope.UniqueCPContentId = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;

        var Rights = [];
        if ($scope.SelectedVendor != 0) {
            if ($scope.SelectedProperty != 0) {
                for (var i in $scope.Property) {
                    if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                        // if ($scope.Description != "") {
                        // if ($scope.SelectedCelebrity != 0) {
                        if ($scope.SelectedAudioType != 0) {
                            if ($scope.Duration != "" && !isNaN($scope.Duration) && $scope.Duration.toString().length <= 10) {
                                if ($scope.SelectedGenres != 0) {
                                    // if ($scope.SelectedSubGenres != 0) {
                                    //if ($scope.SelectedMood != 0) {
                                    // if ($scope.SelectedLanguages != 0) {
                                    if ($scope.SelectedNudity != 0) {
                                        //if ($scope.SelectedSelfRanking != 0) {
                                        //if ($scope.SelectedFestival != 0) {
                                        // if ($scope.SelectedReligion != 0) {
                                        //if ($scope.SelectedRaagTaal != 0) {
                                        // if ($scope.SelectedInstruments != 0) {
                                        if (new Date($scope.Startdate) <= new Date($scope.Expirydate)) {
                                            if (new Date($scope.Property[i].cm_starts_from) <= new Date($scope.Startdate) && new Date($scope.Property[i].cm_expires_on) >= new Date($scope.Expirydate)) {
                                                if ($scope.RightSettingShow == true) {
                                                    if ($scope.SelectedCountryRights.length > 0) {
                                                        if ($scope.SelectedChannelRights.length > 0) {
                                                            for (var i in $scope.SelectedCountryRights) {
                                                                for (var j in $scope.SelectedChannelRights) {
                                                                    Rights.push({ propertyid: $scope.SelectedProperty, vendorid: $scope.SelectedVendor, CountryRights: $scope.SelectedCountryRights[i], ChannelRights: $scope.SelectedChannelRights[j] });
                                                                }
                                                            }

                                                            var AddRights = GetAddRights($scope.OldRightData, Rights);
                                                            var DeleteRights = GetDeleteRights($scope.OldRightData, Rights);

                                                            var datas = {
                                                                cm_Id: $scope.CM_ID,
                                                                GroupId: $scope.GroupId,
                                                                DisplayTitle: $scope.DisplayTitle,
                                                                Description: $scope.Description,
                                                                Celebrity: $scope.SelectedCelebrity,
                                                                Duration: parseFloat($scope.Duration),
                                                                Location: $scope.Location,
                                                                search: $scope.SearchKeywords,
                                                                ContentId: $scope.ContentId,
                                                                Vendor: $scope.SelectedVendor,
                                                                Property: $scope.SelectedProperty,
                                                                AudioType: $scope.SelectedAudioType,
                                                                Genres: $scope.SelectedGenres,
                                                                SubGenres: $scope.SelectedSubGenres,
                                                                Mood: $scope.SelectedMood,
                                                                Singers: $scope.SelectedSingers,
                                                                MusicDirectors: $scope.SelectedMusicDirectors,
                                                                Languages: $scope.SelectedLanguages,
                                                                Nudity: $scope.SelectedNudity,
                                                                Festival: $scope.SelectedFestival,
                                                                Religion: $scope.SelectedReligion,
                                                                AddRights: AddRights,
                                                                DeleteRights: DeleteRights,
                                                                //Rights: Rights,
                                                                SelfRanking: $scope.SelectedSelfRanking,
                                                                StartDate: $scope.Startdate,
                                                                ExpiryDate: $scope.Expirydate,
                                                                RightsSetting: $scope.RightSettingShow
                                                            };

                                                            var NewArray = [];
                                                            NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9, GroupId: $scope.CelebrityGroupId, cm_Id: $scope.CM_ID });
                                                            NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23, cm_Id: $scope.CM_ID, LocationId: $scope.LocationId });
                                                            NewArray.push({ Name: "RaagTaal", Value: $scope.SelectedRaagTaal, Id: 14, GroupId: $scope.RaagGroupId, cm_Id: $scope.CM_ID });
                                                            NewArray.push({ Name: "Instruments", Value: $scope.SelectedInstruments, Id: 15, GroupId: $scope.InstrumentsGroupId, cm_Id: $scope.CM_ID });
                                                            NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24, GroupId: $scope.KeywordGroupId, KeyId: $scope.KeyWordId, cm_Id: $scope.CM_ID });
                                                            NewArray.push({ Name: "datass", Value: datas });

                                                            ngProgress.start();


                                                            if (NewArray.length > 0) {
                                                                var post_request = $http({
                                                                    method: "Post",
                                                                    url: 'audio/UpdateAudio',
                                                                    data: NewArray,
                                                                    headers: { 'Content-Type': 'application/json' }
                                                                });
                                                                post_request.success(function (data) {
                                                                    if (data.Result == "AudioUpdated") {
                                                                        $scope.successvisible = true;
                                                                        $scope.success = "Record Updated successfully.";
                                                                        ngProgress.complete();
                                                                        if (data.GroupId != undefined || data.GroupId == null) {
                                                                            $scope.CelebrityGroupId = data.GroupId;
                                                                        }
                                                                        if (data.InstrumentId != undefined || data.InstrumentId == null) {
                                                                            $scope.InstrumentsGroupId = data.InstrumentId;
                                                                        }
                                                                        if (data.RaagId != undefined || data.RaagId == null) {
                                                                            $scope.RaagGroupId = data.RaagId;
                                                                        }
                                                                        if (data.LocId != undefined || data.LocId == null) {
                                                                            $scope.LocationId = data.LocId;
                                                                        }
                                                                        $scope.SelectedVendor = data.VendorId;
                                                                        $scope.SelectedProperty = data.PropertyId;
                                                                        $scope.SelectedOldVendor = data.VendorId;
                                                                        $scope.SelectedOldProperty = data.PropertyId;

                                                                        var selectedrightsdata = angular.copy(data.RightsData);
                                                                        $scope.OldRightData = selectedrightsdata;
                                                                    }
                                                                    else if (data.Result == "ContentIdError") {
                                                                        $scope.UniqueCPContentId = true;
                                                                        ngProgress.complete();
                                                                    }

                                                                });
                                                                post_request.error(function (data, status, headers, config) {
                                                                    if (data != undefined) {
                                                                        $scope.errorvisible = true;
                                                                        $scope.error = data.substring(1, data.length - 1);
                                                                        ngProgress.complete();
                                                                    }
                                                                });
                                                            }

                                                        }
                                                        else {
                                                            $scope.ChannelRightsValidation = true;
                                                        }
                                                    }
                                                    else {
                                                        $scope.CountryRightsValidation = true;
                                                    }

                                                }
                                                else {

                                                    var AddRights = GetAddRights($scope.OldRightData, Rights);
                                                    var DeleteRights = GetDeleteRights($scope.OldRightData, Rights);

                                                    var datas = {
                                                        cm_Id: $scope.CM_ID,
                                                        DisplayTitle: $scope.DisplayTitle,
                                                        Description: $scope.Description,
                                                        Celebrity: $scope.SelectedCelebrity,
                                                        Duration: parseFloat($scope.Duration),
                                                        Location: $scope.Location,
                                                        search: $scope.SearchKeywords,
                                                        ContentId: $scope.ContentId,
                                                        Vendor: $scope.SelectedVendor,
                                                        Property: $scope.SelectedProperty,
                                                        AudioType: $scope.SelectedAudioType,
                                                        Genres: $scope.SelectedGenres,
                                                        SubGenres: $scope.SelectedSubGenres,
                                                        Mood: $scope.SelectedMood,
                                                        Singers: $scope.SelectedSingers,
                                                        MusicDirectors: $scope.SelectedMusicDirectors,
                                                        Languages: $scope.SelectedLanguages,
                                                        Nudity: $scope.SelectedNudity,
                                                        Festival: $scope.SelectedFestival,
                                                        Religion: $scope.SelectedReligion,
                                                        AddRights: AddRights,
                                                        DeleteRights: DeleteRights,
                                                        SelfRanking: $scope.SelectedSelfRanking,
                                                        StartDate: $scope.Startdate,
                                                        ExpiryDate: $scope.Expirydate,
                                                        RightsSetting: $scope.RightSettingShow
                                                    };
                                                    var NewArray = [];
                                                    NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9, GroupId: $scope.CelebrityGroupId });
                                                    NewArray.push({ Name: "Location", Value: $scope.Location, Id: 23, cm_Id: $scope.CM_ID, LocationId: $scope.LocationId });
                                                    NewArray.push({ Name: "RaagTaal", Value: $scope.SelectedRaagTaal, Id: 14, GroupId: $scope.RaagGroupId });
                                                    NewArray.push({ Name: "Instruments", Value: $scope.SelectedInstruments, Id: 15, GroupId: $scope.InstrumentsGroupId });
                                                    NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24, GroupId: $scope.KeywordGroupId, KeyId: $scope.KeyWordId });
                                                    NewArray.push({ Name: "datass", Value: datas });

                                                    ngProgress.start();
                                                    if (NewArray.length > 0) {
                                                        var post_request = $http({
                                                            method: "Post",
                                                            url: 'audio/UpdateAudio',
                                                            data: NewArray,
                                                            headers: { 'Content-Type': 'application/json' }
                                                        });
                                                        post_request.success(function (data) {
                                                            if (data.Result == "AudioUpdated") {
                                                                $scope.successvisible = true;
                                                                $scope.success = "Record Updated successfully.";
                                                                ngProgress.complete();
                                                                if (data.GroupId != undefined || data.GroupId == null) {
                                                                    $scope.CelebrityGroupId = data.GroupId;
                                                                }
                                                                if (data.InstrumentId != undefined || data.InstrumentId == null) {
                                                                    $scope.InstrumentsGroupId = data.InstrumentId;
                                                                }
                                                                if (data.RaagId != undefined || data.RaagId == null) {
                                                                    $scope.RaagGroupId = data.RaagId;
                                                                }
                                                                if (data.LocId != undefined || data.LocId == null) {
                                                                    $scope.LocationId = data.LocId;
                                                                }
                                                                $scope.SelectedVendor = data.VendorId;
                                                                $scope.SelectedProperty = data.PropertyId;
                                                                $scope.SelectedOldVendor = data.VendorId;
                                                                $scope.SelectedOldProperty = data.PropertyId;

                                                                var selectedrightsdata = angular.copy(data.RightsData);
                                                                $scope.OldRightData = selectedrightsdata;
                                                            }
                                                            else if (data.Result == "ContentIdError") {
                                                                $scope.UniqueCPContentId = true;
                                                                ngProgress.complete();
                                                            }
                                                        });
                                                        post_request.error(function (data, status, headers, config) {
                                                            if (data != undefined) {
                                                                $scope.errorvisible = true;
                                                                $scope.error = data.substring(1, data.length - 1);
                                                                ngProgress.complete();
                                                            }
                                                        });
                                                    }
                                                }

                                            }
                                            else {
                                                $scope.CheckPropertyDateValidation = true;
                                            }
                                        }
                                        else {
                                            $scope.DateConflictValidation = true;
                                        }
                                        //                }
                                        //                else {
                                        //                    $scope.InstrumentsValidation = true;
                                        //                }
                                        //            }
                                        //            else {
                                        //                $scope.RaagTaalValidation = true;
                                        //            }
                                        //        }
                                        //        else {
                                        //            $scope.ReligionValidation = true;
                                        //        }
                                        //    }
                                        //    else {
                                        //        $scope.FestivalValidation = true;
                                        //    }
                                        //}
                                        //else {
                                        //    $scope.SelfRankingValidation = true;
                                        //}
                                    }
                                    else {
                                        $scope.NudityValidation = true;
                                    }
                                    //        }
                                    //        else {
                                    //            $scope.LanguagesValidation = true;
                                    //        }
                                    //    }
                                    //    else {
                                    //        $scope.MoodValidation = true;
                                    //    }
                                    //}
                                    //else {
                                    //    $scope.SubGenresValidation = true;
                                    //}
                                }
                                else {
                                    $scope.GenresValidation = true;
                                }
                            }
                            else {
                                $scope.DurationValidation = true;
                            }
                        }
                        else {
                            $scope.AudioTypeValidation = true;
                        }
                        //    }
                        //    else {
                        //        $scope.CelebrityValidation = true;
                        //    }
                        //}
                        //else {
                        //    $scope.DescriptionValidation = true;
                        //}
                    }
                }
            }
            else {
                $scope.PropertyValidation = true;
            }
        }
        else {
            $scope.VendorValidation = true;
        }
    }

    $scope.BackToContentCatalog = function () {
        $window.location.href = "#content-catalog";
    }
});

myApp.controller('apps-gamesCtrl', function ($scope, $http, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#appsgames').addClass('active');
    $('#addcontentmetadata').addClass('active');
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.Vendor = [];
    $scope.AllProperty = [];
    $scope.Mode = [];
    $scope.Genres = [];
    $scope.SubGenres = [];
    $scope.SupportAppPurchase = [];
    $scope.Mood = [];
    $scope.Languages = [];
    $scope.Nudity = [];
    $scope.Festival = [];
    $scope.Religion = [];
    $scope.Instruments = [];
    $scope.AllCountryRights = [];
    $scope.AllChannelRights = [];
    $scope.Celebrity = [];
    $scope.SelfRanking = [];
    $scope.AppsGamesDetail = [];

    $scope.Property = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];
    $scope.DisplayTitle = "";
    $scope.ShortDescription = "";
    $scope.LongDescription = "";

    $scope.Duration = "";

    $scope.SearchKeywords = "";
    $scope.ContentId = "";
    $scope.PhotoGrapher = "";
    $scope.RightSettingShow = false;

    $scope.VendorValidation = false;
    $scope.PropertyValidation = false;
    $scope.TitleValidation = false;
    $scope.ShortDescriptionValidation = false;
    $scope.LongDescriptionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.ModeValidation = false;
    $scope.GenresValidation = false;
    $scope.SubGenresValidation = false;
    $scope.MoodValidation = false;
    $scope.LanguagesValidation = false;
    $scope.NudityValidation = false;
    $scope.InstrumentsValidation = false;
    $scope.FestivalValidation = false;
    $scope.ReligionValidation = false;
    $scope.InAppPurchaseValidation = false;
    $scope.SelfRankingValidation = false;
    $scope.DateConflictValidation = false;
    $scope.CheckPropertyDateValidation = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;
    $scope.UniqueCPContentId = false;

    $scope.SelectedVendor = 0;
    $scope.SelectedProperty = 0;
    $scope.SelectedMode = 0;
    $scope.SelectedGenres = 0;
    $scope.SelectedSubGenres = 0;
    $scope.SelectedSupportAppPurchase = 0;
    $scope.SelectedMood = 0;
    $scope.SelectedLanguages = 0;
    $scope.SelectedNudity = 0;
    $scope.SelectedFestival = 0;
    $scope.SelectedReligion = 0;
    $scope.SelectedInstruments = 0;
    $scope.SelectedCelebrity = 0;
    $scope.SelectedCountryRights = 0;
    $scope.SelectedChannelRights = 0;
    $scope.SelectedSelfRanking = 0;
    $scope.SaveEnable = false;
    $scope.IsDisable = true;
    $scope.PropertyDisable = true;

    $scope.Startdate = getDate(new Date());
    $scope.Expirydate = "";
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    $scope.AllPropertyDetail = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];

    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.Permission = true;
    $scope.IsDisabled = false;
    if ($scope.Permission == true) {
        $scope.IsDisabled = false;
    }
    else {
        $scope.IsDisabled = true;
    }

    var get_request = $http({
        method: "Get",
        url: 'gamesandapps/GetGamesAppsData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        if (datas.UserRole === "Content Manager") {
            for (var i in datas.GamesAppsData) {
                if (datas.GamesAppsData[i].cd_cm_id == 3) {
                    $scope.AllCountryRights.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 4) {
                    $scope.AllChannelRights.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 5) {
                    $scope.Genres.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 6) {
                    $scope.SubGenres.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 7) {
                    $scope.Mood.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 8) {
                    $scope.Languages.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 9) {
                    $scope.Celebrity.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 10) {
                    $scope.Festival.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 11) {
                    $scope.Religion.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 15) {
                    $scope.Instruments.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 25) {
                    $scope.SelfRanking.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 26) {
                    $scope.Nudity.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 30) {
                    $scope.Mode.push(datas.GamesAppsData[i]);
                }
                if (datas.GamesAppsData[i].cd_cm_id == 31) {
                    $scope.SupportAppPurchase.push(datas.GamesAppsData[i]);
                }
            }
            $scope.AllPropertyDetail = angular.copy(datas.AllPropertyData);
            $scope.AllProperty = angular.copy(datas.PropertyData);
            $scope.Vendor = angular.copy(datas.VendorData);
        }
        else {
            location.href = "/";
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.VendorChange = function () {
        $scope.Property = [];
        $scope.PropertyDisable = false;
        $scope.RightSettingShow = false;

        if ($scope.SelectedVendor != 0) {
            for (var i in $scope.AllProperty) {
                if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                    $scope.Property.push($scope.AllProperty[i]);
                    $scope.PropertyDisable = false;
                    $scope.SelectedProperty = 0;
                }
            }
        }
        else {
            $scope.PropertyDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
        if ($scope.Property.length <= 0) {
            $scope.IsDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
    }

    $scope.PropertyChange = function () {
        $scope.RightSettingShow = false;
        $scope.IsDisable = true;
        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        if ($scope.SelectedProperty != 0) {
            for (var i in $scope.Property) {
                if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                    for (var j in $scope.AllCountryRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                    flag = true;
                                }
                                //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            country.push($scope.AllCountryRights[j].cd_id);
                            $scope.CountryRights.push($scope.AllCountryRights[j]);
                        }
                    }
                    for (var j in $scope.AllChannelRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                    flag = true;
                                }
                                //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            channel.push($scope.AllChannelRights[j].cd_id);
                            $scope.ChannelRights.push($scope.AllChannelRights[j]);
                        }
                    }
                    if ($scope.Property[i].r_rights_at_content_level == 1) {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = true;
                    }
                    else {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = false;
                    }
                }
            }
        }
        else {
            $scope.IsDisable = true;
            $scope.RightSettingShow = false;
        }
    }

    $scope.SaveAppsGames = function () {
        $scope.VendorValidation = false;
        $scope.PropertyValidation = false;
        $scope.TitleValidation = false;
        $scope.ShortDescriptionValidation = false;
        $scope.LongDescriptionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.ModeValidation = false;
        $scope.GenresValidation = false;
        $scope.SubGenresValidation = false;
        $scope.MoodValidation = false;
        $scope.LanguagesValidation = false;
        $scope.NudityValidation = false;
        $scope.InstrumentsValidation = false;
        $scope.FestivalValidation = false;
        $scope.ReligionValidation = false;
        $scope.InAppPurchaseValidation = false;
        $scope.SelfRankingValidation = false;
        $scope.DateConflictValidation = false;
        $scope.CheckPropertyDateValidation = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;
        $scope.UniqueCPContentId = false;

        var Rights = [];
        if ($scope.SelectedVendor != 0) {
            if ($scope.SelectedProperty != 0) {
                for (var i in $scope.Property) {
                    if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                        // if ($scope.ShortDescription != "") {
                        //if ($scope.LongDescription != "") {
                        //if ($scope.SelectedCelebrity != 0) {
                        if ($scope.SelectedMode != 0) {
                            if ($scope.SelectedGenres != 0) {
                                //if ($scope.SelectedSubGenres != 0) {
                                // if ($scope.SelectedMood != 0) {
                                //if ($scope.SelectedLanguages != 0) {
                                if ($scope.SelectedNudity != 0) {
                                    //if ($scope.SelectedInstruments != 0) {
                                    //if ($scope.SelectedFestival != 0) {
                                    //if ($scope.SelectedReligion != 0) {
                                    //if ($scope.SelectedSupportAppPurchase != 0) {
                                    //if ($scope.SelectedSelfRanking != 0) {
                                    if (new Date($scope.Startdate) <= new Date($scope.Expirydate)) {
                                        if (new Date($scope.Property[i].cm_starts_from) <= new Date($scope.Startdate) && new Date($scope.Property[i].cm_expires_on) >= new Date($scope.Expirydate)) {
                                            if ($scope.RightSettingShow == true) {
                                                if ($scope.SelectedCountryRights.length > 0) {
                                                    if ($scope.SelectedChannelRights.length > 0) {
                                                        for (var i in $scope.SelectedCountryRights) {
                                                            for (var j in $scope.SelectedChannelRights) {
                                                                Rights.push({ CountryRights: $scope.SelectedCountryRights[i], ChannelRights: $scope.SelectedChannelRights[j] });
                                                            }
                                                        }
                                                        var datas = {
                                                            "DisplayTitle": $scope.DisplayTitle,
                                                            "ShortDescription": $scope.ShortDescription,
                                                            "LongDescription": $scope.LongDescription,
                                                            "Duration": $scope.Duration,
                                                            "Mode": $scope.SelectedMode,
                                                            "SupportAppPurchase": $scope.SelectedSupportAppPurchase,
                                                            "ContentId": $scope.ContentId,
                                                            "Vendor": $scope.SelectedVendor,
                                                            "Property": $scope.SelectedProperty,
                                                            "Genres": $scope.SelectedGenres,
                                                            "SubGenres": $scope.SelectedSubGenres,
                                                            "Mood": $scope.SelectedMood,
                                                            "Languages": $scope.SelectedLanguages,
                                                            "Nudity": $scope.SelectedNudity,
                                                            "Festival": $scope.SelectedFestival,
                                                            "Religion": $scope.SelectedReligion,
                                                            "Rights": Rights,
                                                            "SelfRanking": $scope.SelectedSelfRanking,
                                                            "StartDate": $scope.Startdate,
                                                            "ExpiryDate": $scope.Expirydate,
                                                            "RightsSetting": $scope.RightSettingShow
                                                        };
                                                        var NewArray = [];
                                                        NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9 });
                                                        NewArray.push({ Name: "Instruments", Value: $scope.SelectedInstruments, Id: 15 });
                                                        NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24 });
                                                        NewArray.push({ Name: "datass", Value: datas });

                                                        ngProgress.start();
                                                        if (NewArray.length > 0) {
                                                            var post_request = $http({
                                                                method: "Post",
                                                                url: 'gamesandapps/AddGamesAndApps',
                                                                data: NewArray,
                                                                headers: { 'Content-Type': 'application/json' }
                                                            });
                                                            post_request.success(function (data) {
                                                                $scope.Cm_ID = data.cm_id;
                                                                if (data.Result == "Success") {
                                                                    $scope.Property = [];
                                                                    $scope.CountryRights = [];
                                                                    $scope.ChannelRights = [];
                                                                    $scope.DisplayTitle = "";
                                                                    $scope.ShortDescription = "";
                                                                    $scope.LongDescription = "";
                                                                    $scope.SelectedCelebrity = 0;
                                                                    $scope.Duration = "";
                                                                    $scope.SearchKeywords = "";
                                                                    $scope.ContentId = "";
                                                                    $scope.SelectedVendor = 0;
                                                                    $scope.SelectedProperty = 0;
                                                                    $scope.SelectedMode = 0;
                                                                    $scope.SelectedGenres = 0;
                                                                    $scope.SelectedSubGenres = 0;
                                                                    $scope.SelectedSupportAppPurchase = 0;
                                                                    $scope.SelectedMood = 0;
                                                                    $scope.SelectedLanguages = 0;
                                                                    $scope.SelectedNudity = 0;
                                                                    $scope.SelectedFestival = 0;
                                                                    $scope.SelectedReligion = 0;
                                                                    $scope.SelectedInstruments = 0;
                                                                    $scope.SelectedCountryRights = 0;
                                                                    $scope.SelectedChannelRights = 0;
                                                                    $scope.IsDisable = true;
                                                                    $scope.PropertyDisable = true;
                                                                    $scope.Startdate = getDate(new Date());
                                                                    $scope.Expirydate = "";
                                                                    $scope.successvisible = true;
                                                                    $scope.success = "Record inserted successfully. Your Unique MetaData Id is '" + $scope.Cm_ID + "'";
                                                                    ngProgress.complete();
                                                                }
                                                                else if (data.Result == "ContentIdError") {
                                                                    $scope.UniqueCPContentId = true;
                                                                }
                                                            });
                                                            post_request.error(function (data, status, headers, config) {
                                                                if (data != undefined) {
                                                                    $scope.errorvisible = true;
                                                                    $scope.error = data.substring(1, data.length - 1);
                                                                    ngProgress.complete();
                                                                }
                                                            });
                                                        }
                                                    }
                                                    else {
                                                        $scope.ChannelRightsValidation = true;
                                                    }
                                                }
                                                else {
                                                    $scope.CountryRightsValidation = true;
                                                }

                                            }
                                            else {
                                                Rights = [];
                                                var datas = {
                                                    "DisplayTitle": $scope.DisplayTitle,
                                                    "ShortDescription": $scope.ShortDescription,
                                                    "LongDescription": $scope.LongDescription,
                                                    "Duration": $scope.Duration,
                                                    "Mode": $scope.SelectedMode,
                                                    "SupportAppPurchase": $scope.SelectedSupportAppPurchase,
                                                    "ContentId": $scope.ContentId,
                                                    "Vendor": $scope.SelectedVendor,
                                                    "Property": $scope.SelectedProperty,
                                                    "Genres": $scope.SelectedGenres,
                                                    "SubGenres": $scope.SelectedSubGenres,
                                                    "Mood": $scope.SelectedMood,
                                                    "Languages": $scope.SelectedLanguages,
                                                    "Nudity": $scope.SelectedNudity,
                                                    "Festival": $scope.SelectedFestival,
                                                    "Religion": $scope.SelectedReligion,
                                                    "Rights": Rights,
                                                    "SelfRanking": $scope.SelectedSelfRanking,
                                                    "StartDate": $scope.Startdate,
                                                    "ExpiryDate": $scope.Expirydate,
                                                    "RightsSetting": $scope.RightSettingShow
                                                };
                                                var NewArray = [];
                                                NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9 });
                                                NewArray.push({ Name: "Instruments", Value: $scope.SelectedInstruments, Id: 15 });
                                                NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24 });
                                                NewArray.push({ Name: "datass", Value: datas });

                                                ngProgress.start();
                                                if (NewArray.length > 0) {
                                                    var post_request = $http({
                                                        method: "Post",
                                                        url: 'gamesandapps/AddGamesAndApps',
                                                        data: NewArray,
                                                        headers: { 'Content-Type': 'application/json' }
                                                    });
                                                    post_request.success(function (data) {
                                                        $scope.Cm_ID = data.cm_id;
                                                        if (data.Result == "Success") {
                                                            $scope.Property = [];
                                                            $scope.CountryRights = [];
                                                            $scope.ChannelRights = [];
                                                            $scope.DisplayTitle = "";
                                                            $scope.ShortDescription = "";
                                                            $scope.LongDescription = "";
                                                            $scope.SelectedCelebrity = 0;
                                                            $scope.Duration = "";
                                                            $scope.SearchKeywords = "";
                                                            $scope.ContentId = "";
                                                            $scope.SelectedVendor = 0;
                                                            $scope.SelectedProperty = 0;
                                                            $scope.SelectedMode = 0;
                                                            $scope.SelectedGenres = 0;
                                                            $scope.SelectedSubGenres = 0;
                                                            $scope.SelectedSupportAppPurchase = 0;
                                                            $scope.SelectedMood = 0;
                                                            $scope.SelectedLanguages = 0;
                                                            $scope.SelectedNudity = 0;
                                                            $scope.SelectedFestival = 0;
                                                            $scope.SelectedReligion = 0;
                                                            $scope.SelectedInstruments = 0;
                                                            $scope.SelectedCountryRights = 0;
                                                            $scope.SelectedChannelRights = 0;
                                                            $scope.IsDisable = true;
                                                            $scope.PropertyDisable = true;
                                                            $scope.Startdate = getDate(new Date());
                                                            $scope.Expirydate = "";
                                                            $scope.successvisible = true;
                                                            $scope.success = "Record inserted successfully. Your Unique MetaData Id is '" + $scope.Cm_ID + "'";
                                                            ngProgress.complete();
                                                        }
                                                        else if (data.Result == "ContentIdError") {
                                                            $scope.UniqueCPContentId = true;
                                                        }
                                                    });
                                                    post_request.error(function (data, status, headers, config) {
                                                        if (data != undefined) {
                                                            $scope.errorvisible = true;
                                                            $scope.error = data.substring(1, data.length - 1);
                                                            ngProgress.complete();
                                                        }
                                                    });
                                                }
                                            }

                                        }
                                        else {
                                            $scope.CheckPropertyDateValidation = true;
                                        }
                                    }
                                    else {
                                        $scope.DateConflictValidation = true;
                                    }
                                    //                }
                                    //                else {
                                    //                    $scope.SelfRankingValidation = true;
                                    //                }
                                    //            }
                                    //            else {
                                    //                $scope.InAppPurchaseValidation = true;
                                    //            }
                                    //        }
                                    //        else {
                                    //            $scope.ReligionValidation = true;
                                    //        }
                                    //    }
                                    //    else {
                                    //        $scope.FestivalValidation = true;
                                    //    }
                                    //}
                                    //else {
                                    //    $scope.InstrumentsValidation = true;
                                    //}
                                }
                                else {
                                    $scope.NudityValidation = true;
                                }
                                //        }
                                //        else {
                                //            $scope.LanguagesValidation = true;
                                //        }
                                //    }
                                //    else {
                                //        $scope.MoodValidation = true;
                                //    }
                                //}
                                //else {
                                //    $scope.SubGenresValidation = true;
                                //}
                            }
                            else {
                                $scope.GenresValidation = true;
                            }
                        }
                        else {
                            $scope.ModeValidation = true;
                        }
                        //        }
                        //        else {
                        //            $scope.CelebrityValidation = true;
                        //        }
                        //    }
                        //    else {
                        //        $scope.LongDescriptionValidation = true;
                        //    }
                        //}
                        //else {
                        //    $scope.ShortDescriptionValidation = true;
                        //}
                    }
                }
            }
            else {
                $scope.PropertyValidation = true;
            }
        }
        else {
            $scope.VendorValidation = true;
        }
    }

    $scope.ResetAppsGames = function () {
        $scope.Property = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];
        $scope.DisplayTitle = "";
        $scope.ShortDescription = "";
        $scope.LongDescription = "";
        $scope.SelectedCelebrity = 0;
        $scope.Duration = "";
        $scope.SearchKeywords = "";
        $scope.ContentId = "";
        $scope.SelectedVendor = 0;
        $scope.SelectedProperty = 0;
        $scope.SelectedMode = 0;
        $scope.SelectedGenres = 0;
        $scope.SelectedSubGenres = 0;
        $scope.SelectedSupportAppPurchase = 0;
        $scope.SelectedMood = 0;
        $scope.SelectedLanguages = 0;
        $scope.SelectedNudity = 0;
        $scope.SelectedFestival = 0;
        $scope.SelectedReligion = 0;
        $scope.SelectedInstruments = 0;
        $scope.SelectedCountryRights = 0;
        $scope.SelectedChannelRights = 0;
        $scope.IsDisable = true;
        $scope.PropertyDisable = true;
        $scope.Startdate = getDate(new Date());
        $scope.Expirydate = "";
    }
});

myApp.controller('editapps-gamesCtrl', function ($scope, $http, $routeParams, $window, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addcontentmetadata').addClass('active');
    $scope.open1 = false;
    $scope.open2 = false;
    $scope.openDatepicker = function (evt) {
        $scope.open2 = false;
        evt.preventDefault();
        evt.stopPropagation();
        $scope.open1 = !$scope.open1;
    }

    $scope.openEndDatepicker = function (evt1) {
        $scope.open1 = false;
        evt1.preventDefault();
        evt1.stopPropagation();
        $scope.open2 = !$scope.open2;
    }
    $scope.Vendor = [];
    $scope.AllProperty = [];
    $scope.Mode = [];
    $scope.Genres = [];
    $scope.SubGenres = [];
    $scope.SupportAppPurchase = [];
    $scope.Mood = [];
    $scope.Languages = [];
    $scope.Nudity = [];
    $scope.Festival = [];
    $scope.Religion = [];
    $scope.Instruments = [];
    $scope.AllCountryRights = [];
    $scope.AllChannelRights = [];
    $scope.Celebrity = [];
    $scope.SelfRanking = [];
    $scope.AllKeywords = [];
    $scope.AppsGamesDetail = [];

    $scope.Property = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];
    $scope.DisplayTitle = "";
    $scope.ShortDescription = "";
    $scope.LongDescription = "";

    $scope.SearchKeywords = "";
    $scope.ContentId = "";
    $scope.RightSettingShow = false;

    $scope.VendorValidation = false;
    $scope.PropertyValidation = false;
    $scope.TitleValidation = false;
    $scope.ShortDescriptionValidation = false;
    $scope.LongDescriptionValidation = false;
    $scope.CelebrityValidation = false;
    $scope.ModeValidation = false;
    $scope.GenresValidation = false;
    $scope.SubGenresValidation = false;
    $scope.MoodValidation = false;
    $scope.LanguagesValidation = false;
    $scope.NudityValidation = false;
    $scope.InstrumentsValidation = false;
    $scope.FestivalValidation = false;
    $scope.ReligionValidation = false;
    $scope.InAppPurchaseValidation = false;
    $scope.SelfRankingValidation = false;
    $scope.DateConflictValidation = false;
    $scope.CheckPropertyDateValidation = false;
    $scope.CountryRightsValidation = false;
    $scope.ChannelRightsValidation = false;
    $scope.UniqueCPContentId = false;
    $scope.SelectedOldVendor = "";
    $scope.SelectedOldProperty = "";

    $scope.SelectedOldVendor = "";
    $scope.SelectedOldProperty = "";
    $scope.SelectedVendor = 0;
    $scope.SelectedProperty = 0;
    $scope.SelectedMode = 0;
    $scope.SelectedGenres = 0;
    $scope.SelectedSubGenres = 0;
    $scope.SelectedSupportAppPurchase = 0;
    $scope.SelectedMood = 0;
    $scope.SelectedLanguages = 0;
    $scope.SelectedNudity = 0;
    $scope.SelectedFestival = 0;
    $scope.SelectedReligion = 0;
    $scope.SelectedInstruments = 0;
    $scope.SelectedCelebrity = 0;
    $scope.SelectedCountryRights = 0;
    $scope.SelectedChannelRights = 0;
    $scope.SelectedSelfRanking = 0;
    $scope.IsDisable = false;
    $scope.PropertyDisable = true;

    $scope.Startdate = getDate(new Date());
    $scope.Expirydate = "";
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    $scope.AllPropertyDetail = [];
    $scope.CountryRights = [];
    $scope.ChannelRights = [];

    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.Permission = true;
    $scope.IsDisabled = false;
    if ($scope.Permission == true) {
        $scope.IsDisabled = false;
    }
    else {
        $scope.IsDisabled = true;
    }

    var get_request = $http({
        method: "Post",
        url: 'gamesandapps/GetEditGamesAppsData',
        data: { 'cm_id': $routeParams.id },
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        $scope.SubGenres.unshift({ cd_id: 0, cd_name: "Select Sub Genres" });
        $scope.Mood.unshift({ cd_id: 0, cd_name: "Select Mood" });
        $scope.Languages.unshift({ cd_id: 0, cd_name: "Select Languages" });
        $scope.Festival.unshift({ cd_id: 0, cd_name: "Select Festival" });
        $scope.Celebrity.unshift({ cd_id: 0, cd_name: "Select Celebrity" });
        $scope.Religion.unshift({ cd_id: 0, cd_name: "Select Religion" });
        $scope.SelfRanking.unshift({ cd_id: 0, cd_name: "Select SelfRanking" });
        $scope.Instruments.unshift({ cd_id: 0, cd_name: "Select Instruments" });
        $scope.SupportAppPurchase.unshift({ cd_id: 0, cd_name: "Select SupportAppPurchase" });

        for (var i in datas.GamesAppsData) {
            if (datas.GamesAppsData[i].cd_cm_id == 3) {
                $scope.AllCountryRights.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 4) {
                $scope.AllChannelRights.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 5) {
                $scope.Genres.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 6) {
                $scope.SubGenres.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 7) {
                $scope.Mood.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 8) {
                $scope.Languages.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 9) {
                $scope.Celebrity.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 10) {
                $scope.Festival.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 11) {
                $scope.Religion.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 15) {
                $scope.Instruments.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 24) {
                $scope.AllKeywords.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 25) {
                $scope.SelfRanking.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 26) {
                $scope.Nudity.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 30) {
                $scope.Mode.push(datas.GamesAppsData[i]);
            }
            if (datas.GamesAppsData[i].cd_cm_id == 31) {
                $scope.SupportAppPurchase.push(datas.GamesAppsData[i]);
            }
        }
        for (var i in datas.ContentMetadata) {
            $scope.SelectedVendor = CheckNull(datas.ContentMetadata[0].cm_vendor);
            $scope.SelectedOldVendor = CheckNull(datas.ContentMetadata[0].cm_vendor);
            $scope.SelectedOldProperty = CheckNull(datas.ContentMetadata[0].cm_property_id);
            $scope.SelectedGenres = CheckNull(datas.ContentMetadata[0].cm_genre);
            $scope.SelectedOldVendor = CheckNull(datas.ContentMetadata[0].cm_vendor);
            $scope.SelectedOldProperty = CheckNull(datas.ContentMetadata[0].cm_genre);
            $scope.SelectedSubGenres = CheckNull(datas.ContentMetadata[0].cm_sub_genre);
            $scope.SelectedMood = CheckNull(datas.ContentMetadata[0].cm_mood);
            $scope.SelectedMode = CheckNull(datas.ContentMetadata[0].cm_mode);
            $scope.SelectedSupportAppPurchase = CheckNull(datas.ContentMetadata[0].cm_is_app_store_purchase);
            $scope.SelectedLanguages = CheckNull(datas.ContentMetadata[0].cm_language);
            $scope.SelectedNudity = CheckNull(datas.ContentMetadata[0].cm_nudity);
            $scope.SelectedFestival = CheckNull(datas.ContentMetadata[0].cm_festival_occasion);
            $scope.SelectedReligion = CheckNull(datas.ContentMetadata[0].cm_religion);
            $scope.Startdate = getDate(new Date(datas.ContentMetadata[0].cm_starts_from));
            $scope.Expirydate = getDate(new Date(datas.ContentMetadata[0].cm_expires_on));
            //$('#dpStart').datepicker('setDate', new Date(datas.ContentMetadata[0].cm_starts_from));
            //$('#dpStart').datepicker('update');
            //$('#dpEnd').datepicker('setDate', new Date(datas.ContentMetadata[0].cm_expires_on));
            //$('#dpEnd').datepicker('update');
            $scope.DisplayTitle = datas.ContentMetadata[0].cm_title;
            $scope.ShortDescription = datas.ContentMetadata[0].cm_short_desc;
            $scope.LongDescription = datas.ContentMetadata[0].cm_long_description;
            $scope.ContentId = datas.ContentMetadata[0].cm_cp_content_id;
            $scope.SelectedSelfRanking = CheckNull(datas.ContentMetadata[0].cm_rank);
            $scope.SearchKeywords = datas.ContentMetadata[0].keyword_cd_name;
            $scope.SelectedInstruments = CheckNull(datas.ContentMetadata[0].instruments_cd_id);
            $scope.SelectedCelebrity = CheckNull(datas.ContentMetadata[0].celebrity_cd_id);
            $scope.CelebrityGroupId = datas.ContentMetadata[0].celebrity_cmd_id;
            $scope.KeywordGroupId = datas.ContentMetadata[0].keyword_group;
            $scope.CM_ID = datas.ContentMetadata[0].cm_id;
            $scope.KeyWordId = datas.ContentMetadata[0].keyword_cd_id;
            $scope.GroupId = datas.ContentMetadata[0].cm_r_group_id;
            $scope.InstrumentsGroupId = datas.ContentMetadata[0].instruments_cmd_id;
        }


        var selectedrightsdata = angular.copy(datas.RightsData);
        $scope.OldRightData = selectedrightsdata;


        $scope.SelectedCountryRights = [];
        $scope.SelectedChannelRights = [];

        for (var i in selectedrightsdata) {
            if ($scope.SelectedCountryRights.indexOf(selectedrightsdata[i].r_country_distribution_rights) == -1) {
                $scope.SelectedCountryRights.push(selectedrightsdata[i].r_country_distribution_rights);
            }
            if ($scope.SelectedChannelRights.indexOf(selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                $scope.SelectedChannelRights.push(selectedrightsdata[i].r_channel_distribution_rights);
            }
        }
        $scope.AllPropertyDetail = angular.copy(datas.AllPropertyData);
        $scope.AllProperty = angular.copy(datas.PropertyData);
        $scope.Vendor = angular.copy(datas.VendorData);

        for (var i in $scope.AllProperty) {
            if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                $scope.Property.push($scope.AllProperty[i]);
                $scope.PropertyDisable = false;
                $scope.SelectedProperty = datas.ContentMetadata[0].cm_property_id;
                $scope.RightSettingShow = true;
            }
        }

        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];

        for (var i in $scope.Property) {
            if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                for (var j in $scope.AllCountryRights) {
                    var flag = false;
                    for (var k in $scope.AllPropertyDetail) {
                        if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                            if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                flag = true;
                            }
                            //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                            //    flag = true;
                            //}
                        }
                    }
                    if (flag) {
                        country.push($scope.AllCountryRights[j].cd_id);
                        $scope.CountryRights.push($scope.AllCountryRights[j]);
                    }
                }
                for (var j in $scope.AllChannelRights) {
                    var flag = false;
                    for (var k in $scope.AllPropertyDetail) {
                        if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                            if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                flag = true;
                            }
                            //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                            //    flag = true;
                            //}
                        }
                    }
                    if (flag) {
                        channel.push($scope.AllChannelRights[j].cd_id);
                        $scope.ChannelRights.push($scope.AllChannelRights[j]);
                    }
                }
                if ($scope.Property[i].r_rights_at_content_level == 1) {
                    $scope.IsDisable = false;
                    $scope.RightSettingShow = true;
                }
                else {
                    $scope.IsDisable = false;
                    $scope.RightSettingShow = false;
                }
            }

        }
        $scope.VendorDisable = datas.IsEdit;
        $scope.PropertyDisable = datas.IsEdit;
        $scope.IsDisable = datas.IsEdit;
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.VendorChange = function () {
        $scope.Property = [];
        $scope.PropertyDisable = false;
        $scope.RightSettingShow = false;

        $scope.Property.unshift({ cm_id: 0, cm_title: "Select Property" });
        if ($scope.SelectedVendor != 0) {
            for (var i in $scope.AllProperty) {
                if ($scope.SelectedVendor == $scope.AllProperty[i].cm_vendor) {
                    $scope.Property.push($scope.AllProperty[i]);
                    $scope.PropertyDisable = false;
                    $scope.SelectedProperty = 0;
                    if ($scope.SelectedOldVendor != $scope.SelectedVendor) {
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];
                    }
                    else {
                        $scope.OldRightData = $scope.selectedrightsdata;
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                        for (var i in $scope.selectedrightsdata) {
                            if ($scope.SelectedCountryRights.indexOf($scope.selectedrightsdata[i].r_country_distribution_rights) == -1) {
                                $scope.SelectedCountryRights.push($scope.selectedrightsdata[i].r_country_distribution_rights);
                            }
                            if ($scope.SelectedChannelRights.indexOf($scope.selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                                $scope.SelectedChannelRights.push($scope.selectedrightsdata[i].r_channel_distribution_rights);
                            }
                        }
                    }
                }
            }
        }
        else {
            $scope.PropertyDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
        if ($scope.Property.length == 1) {
            $scope.IsDisable = true;
            $scope.SelectedProperty = 0;
            $scope.RightSettingShow = false;
        }
    }

    $scope.PropertyChange = function () {
        $scope.RightSettingShow = false;
        $scope.IsDisable = true;
        var country = [];
        var channel = [];
        $scope.CountryRights = [];
        $scope.ChannelRights = [];

        if ($scope.SelectedProperty != 0) {
            for (var i in $scope.Property) {
                if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                    for (var j in $scope.AllCountryRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllCountryRights[j].cd_id == $scope.AllPropertyDetail[k].r_country_distribution_rights) {
                                    flag = true;
                                }
                                //if (country.indexOf($scope.AllPropertyDetail[k].r_country_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            country.push($scope.AllCountryRights[j].cd_id);
                            $scope.CountryRights.push($scope.AllCountryRights[j]);
                        }
                    }
                    for (var j in $scope.AllChannelRights) {
                        var flag = false;
                        for (var k in $scope.AllPropertyDetail) {
                            if ($scope.Property[i].cm_r_group_id == $scope.AllPropertyDetail[k].cm_r_group_id) {
                                if ($scope.AllChannelRights[j].cd_id == $scope.AllPropertyDetail[k].r_channel_distribution_rights) {
                                    flag = true;
                                }
                                //if (channel.indexOf($scope.AllPropertyDetail[k].r_channel_distribution_rights) == -1) {
                                //    flag = true;
                                //}
                            }
                        }
                        if (flag) {
                            channel.push($scope.AllChannelRights[j].cd_id);
                            $scope.ChannelRights.push($scope.AllChannelRights[j]);
                        }
                    }
                    if ($scope.Property[i].r_rights_at_content_level == 1) {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = true;
                    }
                    else {
                        $scope.IsDisable = false;
                        $scope.RightSettingShow = false;
                    }
                    if ($scope.SelectedOldProperty != $scope.SelectedProperty) {
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                    }
                    else {
                        $scope.OldRightData = $scope.selectedrightsdata;
                        $scope.SelectedCountryRights = [];
                        $scope.SelectedChannelRights = [];

                        for (var i in $scope.selectedrightsdata) {
                            if ($scope.SelectedCountryRights.indexOf($scope.selectedrightsdata[i].r_country_distribution_rights) == -1) {
                                $scope.SelectedCountryRights.push($scope.selectedrightsdata[i].r_country_distribution_rights);
                            }
                            if ($scope.SelectedChannelRights.indexOf($scope.selectedrightsdata[i].r_channel_distribution_rights) == -1) {
                                $scope.SelectedChannelRights.push($scope.selectedrightsdata[i].r_channel_distribution_rights);
                            }
                        }
                    }
                }


            }
        }
        else {
            $scope.IsDisable = true;
            $scope.RightSettingShow = false;
        }
    }

    function GetDeleteRights(OldRights, SelectedRights) {
        var DeleteArray = [];
        for (var i in OldRights) {
            var flag = true;
            for (var j in SelectedRights) {
                if (SelectedRights[j].vendorid == OldRights[i].cm_vendor && OldRights[i].cm_property_id == SelectedRights[j].propertyid) {
                    if (OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryRights) {
                        flag = false;
                    }
                }
            }
            if (flag) {
                DeleteArray.push(OldRights[i]);
            }
        }
        return DeleteArray;
    }

    function GetAddRights(OldRights, SelectedRights) {
        var AddArray = [];
        for (var j in SelectedRights) {
            var flag = true;
            for (var i in OldRights) {
                if (SelectedRights[j].vendorid == OldRights[i].cm_vendor && OldRights[i].cm_property_id == SelectedRights[j].propertyid && OldRights[i].r_channel_distribution_rights == SelectedRights[j].ChannelRights && OldRights[i].r_country_distribution_rights == SelectedRights[j].CountryRights) {
                    flag = false;
                }
            }
            if (flag) {
                AddArray.push({ CountryRights: SelectedRights[j].CountryRights, ChannelRights: SelectedRights[j].ChannelRights });
            }
        }
        return AddArray;
    }

    $scope.SaveAppsGames = function () {
        $scope.VendorValidation = false;
        $scope.PropertyValidation = false;
        $scope.TitleValidation = false;
        $scope.ShortDescriptionValidation = false;
        $scope.LongDescriptionValidation = false;
        $scope.CelebrityValidation = false;
        $scope.ModeValidation = false;
        $scope.GenresValidation = false;
        $scope.SubGenresValidation = false;
        $scope.MoodValidation = false;
        $scope.LanguagesValidation = false;
        $scope.NudityValidation = false;
        $scope.InstrumentsValidation = false;
        $scope.FestivalValidation = false;
        $scope.ReligionValidation = false;
        $scope.InAppPurchaseValidation = false;
        $scope.SelfRankingValidation = false;
        $scope.DateConflictValidation = false;
        $scope.CheckPropertyDateValidation = false;
        $scope.CountryRightsValidation = false;
        $scope.ChannelRightsValidation = false;
        $scope.UniqueCPContentId = false;

        var Rights = [];
        if ($scope.SelectedVendor != 0) {
            if ($scope.SelectedProperty != 0) {
                for (var i in $scope.Property) {
                    if ($scope.Property[i].cm_id == $scope.SelectedProperty) {
                        //if ($scope.ShortDescription != "") {
                        //if ($scope.LongDescription != "") {
                        //if ($scope.SelectedCelebrity != 0) {
                        if ($scope.SelectedMode != 0) {
                            if ($scope.SelectedGenres != 0) {
                                //if ($scope.SelectedSubGenres != 0) {
                                //if ($scope.SelectedMood != 0) {
                                //if ($scope.SelectedLanguages != 0) {
                                if ($scope.SelectedNudity != 0) {
                                    //if ($scope.SelectedInstruments != 0) {
                                    //if ($scope.SelectedFestival != 0) {
                                    //if ($scope.SelectedReligion != 0) {
                                    //if ($scope.SelectedSupportAppPurchase != 0) {
                                    //if ($scope.SelectedSelfRanking != 0) {
                                    if (new Date($scope.Startdate) <= new Date($scope.Expirydate)) {
                                        if (new Date($scope.Property[i].cm_starts_from) <= new Date($scope.Startdate) && new Date($scope.Property[i].cm_expires_on) >= new Date($scope.Expirydate)) {
                                            if ($scope.RightSettingShow == true) {
                                                if ($scope.SelectedCountryRights.length > 0) {
                                                    if ($scope.SelectedChannelRights.length > 0) {
                                                        for (var i in $scope.SelectedCountryRights) {
                                                            for (var j in $scope.SelectedChannelRights) {
                                                                Rights.push({ propertyid: $scope.SelectedProperty, vendorid: $scope.SelectedVendor, CountryRights: $scope.SelectedCountryRights[i], ChannelRights: $scope.SelectedChannelRights[j] });
                                                            }
                                                        }
                                                        var AddRights = GetAddRights($scope.OldRightData, Rights);
                                                        var DeleteRights = GetDeleteRights($scope.OldRightData, Rights);
                                                        var datas = {
                                                            "cm_Id": $scope.CM_ID,
                                                            "GroupId": $scope.GroupId,
                                                            "DisplayTitle": $scope.DisplayTitle,
                                                            "ShortDescription": $scope.ShortDescription,
                                                            "LongDescription": $scope.LongDescription,
                                                            "Mode": $scope.SelectedMode,
                                                            "SupportAppPurchase": $scope.SelectedSupportAppPurchase,
                                                            "ContentId": $scope.ContentId,
                                                            "Vendor": $scope.SelectedVendor,
                                                            "Property": $scope.SelectedProperty,
                                                            "Genres": $scope.SelectedGenres,
                                                            "SubGenres": $scope.SelectedSubGenres,
                                                            "Mood": $scope.SelectedMood,
                                                            "Languages": $scope.SelectedLanguages,
                                                            "Nudity": $scope.SelectedNudity,
                                                            "Festival": $scope.SelectedFestival,
                                                            "Religion": $scope.SelectedReligion,
                                                            "AddRights": AddRights,
                                                            "DeleteRights": DeleteRights,
                                                            "SelfRanking": $scope.SelectedSelfRanking,
                                                            "StartDate": $scope.Startdate,
                                                            "ExpiryDate": $scope.Expirydate,
                                                            "RightsSetting": $scope.RightSettingShow
                                                        };
                                                        var NewArray = [];
                                                        NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9, GroupId: $scope.CelebrityGroupId, cm_Id: $scope.CM_ID });
                                                        NewArray.push({ Name: "Instruments", Value: $scope.SelectedInstruments, Id: 15, GroupId: $scope.InstrumentsGroupId, cm_Id: $scope.CM_ID });
                                                        NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24, GroupId: $scope.KeywordGroupId, KeyId: $scope.KeyWordId, cm_Id: $scope.CM_ID });
                                                        NewArray.push({ Name: "datass", Value: datas });
                                                        ngProgress.start();
                                                        if (NewArray.length > 0) {
                                                            var post_request = $http({
                                                                method: "Post",
                                                                url: 'gamesandapps/UpdateGamesAndApps',
                                                                data: NewArray,
                                                                headers: { 'Content-Type': 'application/json' }
                                                            });
                                                            post_request.success(function (data) {
                                                                if (data.Result == "AppsGamesUpdated") {
                                                                    ngProgress.complete();
                                                                    $scope.successvisible = true;
                                                                    $scope.success = "Record Updated successfully.";
                                                                    if (data.GroupId != undefined || data.GroupId == null) {
                                                                        $scope.CelebrityGroupId = data.GroupId;
                                                                    }
                                                                    if (data.InstrumentId != undefined || data.InstrumentId == null) {
                                                                        $scope.InstrumentsGroupId = data.InstrumentId;
                                                                    }
                                                                    $scope.SelectedVendor = data.VendorId;
                                                                    $scope.SelectedProperty = data.PropertyId;
                                                                    $scope.SelectedOldVendor = data.VendorId;
                                                                    $scope.SelectedOldProperty = data.PropertyId;

                                                                    var selectedrightsdata = angular.copy(data.RightsData);
                                                                    $scope.OldRightData = selectedrightsdata;
                                                                }
                                                                else if (data.Result == "ContentIdError") {
                                                                    $scope.UniqueCPContentId = true;
                                                                    ngProgress.complete();
                                                                }

                                                            });
                                                            post_request.error(function (data, status, headers, config) {
                                                                if (data != undefined) {
                                                                    $scope.errorvisible = true;
                                                                    $scope.error = data.substring(1, data.length - 1);
                                                                }
                                                                ngProgress.complete();
                                                            });
                                                        }
                                                    }
                                                    else {
                                                        $scope.ChannelRightsValidation = true;
                                                    }
                                                }
                                                else {
                                                    $scope.CountryRightsValidation = true;
                                                }

                                            }
                                            else {

                                                var AddRights = GetAddRights($scope.OldRightData, Rights);
                                                var DeleteRights = GetDeleteRights($scope.OldRightData, Rights);

                                                var datas = {
                                                    "cm_Id": $scope.CM_ID,
                                                    "DisplayTitle": $scope.DisplayTitle,
                                                    "ShortDescription": $scope.ShortDescription,
                                                    "LongDescription": $scope.LongDescription,
                                                    "Mode": $scope.SelectedMode,
                                                    "SupportAppPurchase": $scope.SelectedSupportAppPurchase,
                                                    "ContentId": $scope.ContentId,
                                                    "Vendor": $scope.SelectedVendor,
                                                    "Property": $scope.SelectedProperty,
                                                    "Genres": $scope.SelectedGenres,
                                                    "SubGenres": $scope.SelectedSubGenres,
                                                    "Mood": $scope.SelectedMood,
                                                    "Languages": $scope.SelectedLanguages,
                                                    "Nudity": $scope.SelectedNudity,
                                                    "Festival": $scope.SelectedFestival,
                                                    "Religion": $scope.SelectedReligion,
                                                    "AddRights": AddRights,
                                                    "DeleteRights": DeleteRights,
                                                    "SelfRanking": $scope.SelectedSelfRanking,
                                                    "StartDate": $scope.Startdate,
                                                    "ExpiryDate": $scope.Expirydate,
                                                    "RightsSetting": $scope.RightSettingShow
                                                };
                                                var NewArray = [];
                                                NewArray.push({ Name: "Celebrity", Value: $scope.SelectedCelebrity, Id: 9, GroupId: $scope.CelebrityGroupId, cm_Id: $scope.CM_ID });
                                                NewArray.push({ Name: "Instruments", Value: $scope.SelectedInstruments, Id: 15, GroupId: $scope.InstrumentsGroupId, cm_Id: $scope.CM_ID });
                                                NewArray.push({ Name: "SearchKeywords", Value: $scope.SearchKeywords, Id: 24, GroupId: $scope.KeywordGroupId, KeyId: $scope.KeyWordId, cm_Id: $scope.CM_ID });
                                                NewArray.push({ Name: "datass", Value: datas });

                                                ngProgress.start();
                                                if (NewArray.length > 0) {
                                                    var post_request = $http({
                                                        method: "Post",
                                                        url: 'gamesandapps/UpdateGamesAndApps',
                                                        data: NewArray,
                                                        headers: { 'Content-Type': 'application/json' }
                                                    });
                                                    post_request.success(function (data) {
                                                        if (data.Result == "AppsGamesUpdated") {
                                                            ngProgress.complete();
                                                            $scope.successvisible = true;
                                                            $scope.success = "Record Updated successfully.";
                                                            if (data.GroupId != undefined || data.GroupId == null) {
                                                                $scope.CelebrityGroupId = data.GroupId;
                                                            }
                                                            if (data.InstrumentId != undefined || data.InstrumentId == null) {
                                                                $scope.InstrumentsGroupId = data.InstrumentId;
                                                            }
                                                            $scope.SelectedVendor = data.VendorId;
                                                            $scope.SelectedProperty = data.PropertyId;
                                                            $scope.SelectedOldVendor = data.VendorId;
                                                            $scope.SelectedOldProperty = data.PropertyId;
                                                            var selectedrightsdata = angular.copy(data.RightsData);
                                                            $scope.OldRightData = selectedrightsdata;
                                                        }
                                                        else if (data.Result == "ContentIdError") {
                                                            $scope.UniqueCPContentId = true;
                                                            ngProgress.complete();
                                                        }

                                                    });
                                                    post_request.error(function (data, status, headers, config) {
                                                        if (data != undefined) {
                                                            $scope.errorvisible = true;
                                                            $scope.error = data.substring(1, data.length - 1);
                                                        }
                                                        ngProgress.complete();
                                                    });
                                                }
                                            }

                                        }
                                        else {
                                            $scope.CheckPropertyDateValidation = true;
                                        }
                                    }
                                    else {
                                        $scope.DateConflictValidation = true;
                                    }
                                    //                }
                                    //                else {
                                    //                    $scope.SelfRankingValidation = true;
                                    //                }
                                    //            }
                                    //            else {
                                    //                $scope.InAppPurchaseValidation = true;
                                    //            }
                                    //        }
                                    //        else {
                                    //            $scope.ReligionValidation = true;
                                    //        }
                                    //    }
                                    //    else {
                                    //        $scope.FestivalValidation = true;
                                    //    }
                                    //}
                                    //else {
                                    //    $scope.InstrumentsValidation = true;
                                    //}
                                }
                                else {
                                    $scope.NudityValidation = true;
                                }
                                //        }
                                //        else {
                                //            $scope.LanguagesValidation = true;
                                //        }
                                //    }
                                //    else {
                                //        $scope.MoodValidation = true;
                                //    }
                                //}
                                //else {
                                //    $scope.SubGenresValidation = true;
                                //}
                            }
                            else {
                                $scope.GenresValidation = true;
                            }
                        }
                        else {
                            $scope.ModeValidation = true;
                        }
                        //        }
                        //        else {
                        //            $scope.CelebrityValidation = true;
                        //        }
                        //    }
                        //    else {
                        //        $scope.LongDescriptionValidation = true;
                        //    }
                        //}
                        //else {
                        //    $scope.ShortDescriptionValidation = true;
                        //}
                    }
                }
            }
            else {
                $scope.PropertyValidation = true;
            }
        }
        else {
            $scope.VendorValidation = true;
        }
    }

    $scope.BackToContentCatalog = function () {
        $window.location.href = "#content-catalog";
    }
});

myApp.controller('add-content-filesCtrl', function ($scope, $http, $upload, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addcontentfile').addClass('active');
    //$('#contentcatelog').addClass('active');

    $scope.ContentTypes = [{ cd_cm_id: 2, cd_desc: 0, cd_desc1: "Content Type of Imagery", cd_display_name: "Select ContentType", cd_id: 0, cd_name: "Select ContentType" }];
    $scope.SelectedContentType = 0;
    $scope.InvalidDimension = false;
    $scope.InvalidDimensionError = "";
    $scope.InvalidThumbDimension = false;
    $scope.InvalidThumbError = "";
    $scope.Templates = [];
    $scope.FileUrls = [];
    $scope.PhysicalFileType = "";
    $scope.PhysicalFile = "";
    $scope.MetadataId = "";
    $scope.UploadFiles = [];
    $scope.UploadThumbFiles = [];
    $scope.UploadVideoFiles = [];
    $scope.UploadAudioFiles = [];
    $scope.UploadGamesFiles = [];
    $scope.ImageFormats = [{ height: 1280, width: 1280, id: 1 }, { height: 720, width: 1280, id: 2 }, { height: 1280, width: 720, id: 3 }];
    $scope.VideoFormats = [{ height: 320, width: 640, id: 4 }];

    $scope.PhysicalFileHeight = 0;
    $scope.PhysicalFileWidth = 0;
    $scope.WallpaperUploadVisible = false;
    $scope.AudioUploadVisible = false;
    $scope.VideoUploadVisible = false;
    $scope.GamesUploadVisible = false;
    $scope.DefaultVisible = true;
    $scope.SaveUserData = false;
    $scope.ThumbUploadMessage = false;
    $scope.UploadButtonVisible = true;
    $scope.FileSuggestionVisible = false;
    $scope.FileSuggestion = "";
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');
    $scope.getSelectedType = function () {
        var type = '';
        $scope.ContentTypes.forEach(function (data) {
            if (data.cd_id == $scope.SelectedContentType && $scope.SelectedContentType != 0) {
                type = data.cd_name;
            }
        });
        return (type) ? type : '';
    }


    var get_request = $http({
        method: "Get",
        url: 'addContentFiles/GetContentTemplates',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        var ContentTypes = angular.copy(datas.ContentTypeList);
        for (var i in ContentTypes) {
            $scope.ContentTypes.push(ContentTypes[i]);
        }
        $scope.Templates = angular.copy(datas.TemplateList);

    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });
    $scope.ContentTypeChange = function () {
        $scope.InvalidThumbDimension = false;
        $scope.InvalidDimension = 0;
        $scope.MetadataId = "";
        $scope.InvalidDimensionError = "";
        $scope.errorvisible = false;
        $scope.error = "";
        $("#physicalFile").val("");
        $("#ThumbFile").val("");
        if ($scope.SelectedContentType == 8) {
            $scope.FileSuggestionVisible = true;
            $scope.FileSuggestion = "Image Dimension must be 720x1280,1280x720 or 1280x1280.";
            $scope.ThumbFileSuggestion = "Thumb Image Dimension must be 125x125.";
        }
        else if ($scope.SelectedContentType == 9) {
            $scope.FileSuggestionVisible = true;
            $scope.FileSuggestion = "Video Dimension must be 640x320.";
            $scope.ThumbFileSuggestion = "Thumb Image Dimension must be 125x125.";
        }
        else if ($scope.SelectedContentType == 10) {
            $scope.FileSuggestionVisible = true;
            $scope.FileSuggestion = "Audio Bitrate must be MP3 128 kbps";
            $scope.ThumbFileSuggestion = "Thumb Image Dimension must be 125x125.";
        }
        else {
            $scope.FileSuggestionVisible = false;
            $scope.FileSuggestion = "";
        }

    }

    function CheckDimension(Templates, width, height) {
        var flag = false;
        for (var i in $scope.ImageFormats) {
            if ($scope.ImageFormats[i].width == width && $scope.ImageFormats[i].height == height) {
                flag = true;
            }
        }
        return flag;
    }
    function GetCheckDimension(Templates, width, height) {
        var flag = null;
        for (var i in $scope.ImageFormats) {
            if ($scope.ImageFormats[i].width == width && $scope.ImageFormats[i].height == height) {
                flag = $scope.ImageFormats[i].id;
            }
        }
        return flag;
    }


    $scope.uploadPhysicalFile = function (files) {
        $scope.ThumbUploadMessage = false;
        $scope.errorvisible = false;
        $scope.InvalidDimension = false;
        $scope.FileUrls = [];
        if ($scope.SelectedContentType != 0) {
            if ($scope.SelectedContentType == 8) {
                // wallpaper
                if (files) {
                    if (files.length <= 3) {
                        imageloop(0);
                        try {
                            function imageloop(cnt) {
                                var i = cnt;
                                $scope.PhysicalFile = files[i];
                                $scope.PhysicalFileType = files[i].type;
                                var reader = new FileReader();
                                reader.onload = function (e) {
                                    var new_file = new Image();
                                    new_file.src = e.target.result;
                                    new_file.onload = function () {
                                        $scope.PhysicalFileHeight = this.height;
                                        $scope.PhysicalFileWidth = this.width
                                        if (CheckDimension($scope.Templates, $scope.PhysicalFileWidth, $scope.PhysicalFileHeight)) {
                                            cnt = cnt + 1;
                                            if (cnt == files.length) {
                                                $scope.UploadFiles = files;
                                            }
                                            else {
                                                imageloop(cnt);
                                            }
                                        }
                                        else {
                                            $scope.InvalidDimension = true;
                                            $scope.InvalidDimensionError = "Invalid Dimension In " + files[i].name + ".";
                                        }
                                    }
                                }
                                reader.readAsDataURL(files[i]);
                            }
                        }
                        catch (err) {
                            $scope.InvalidDimension = true;
                            $scope.InvalidDimensionError = "Invalid Image Format.";
                        }
                    }
                    else {
                        $scope.InvalidDimension = true;
                        $scope.InvalidDimensionError = "Maximum Three Image file upload at time.";
                    }
                }
            }
            else if ($scope.SelectedContentType == 9) {
                // video
                var flag = true;
                for (var k in files) {
                    if (files[k].type) {
                        if (files[k].type.toLowerCase() != "video/mp4") {
                            flag = false;
                        }
                    }
                }

                if (flag) {
                    if (files) {
                        if (files.length == 1) {
                            $scope.UploadFiles = files;
                        }
                        else {
                            $scope.InvalidDimension = true;
                            $scope.InvalidDimensionError = "Maximum single video file upload at time.";
                        }
                    }
                }
                else {
                    $scope.InvalidDimension = true;
                    $scope.InvalidDimensionError = "Invalid Video File Format.";
                }
            }
            else if ($scope.SelectedContentType == 10) {
                // audio
                var flag = true;
                for (var k in files) {
                    if (files[k].type) {
                        if (files[k].type.toLowerCase() != "audio/mp3") {
                            flag = false;
                        }
                    }
                }

                if (flag) {
                    if (files) {
                        if (files.length == 1) {
                            $scope.UploadFiles = files;
                        }
                        else {
                            $scope.InvalidDimension = true;
                            $scope.InvalidDimensionError = "Maximum single audio file upload at time.";
                        }
                    }
                }
                else {
                    $scope.InvalidDimension = true;
                    $scope.InvalidDimensionError = "Invalid audio File Format.";
                }
            }
            else if ($scope.SelectedContentType == 11) {
                // games
            }
        }
        else {
            $scope.InvalidDimension = true;
            $scope.InvalidDimensionError = "First select ContentType then upload file.";
        }
    };

    $scope.uploadPhysicalThumbFile = function (files) {
        $scope.InvalidThumbDimension = false;
        $scope.ThumbUploadMessage = false;
        $scope.errorvisible = false;
        $scope.UploadThumbFiles = [];
        if (files) {
            if (files.length > 0) {
                if ($scope.SelectedContentType != 0) {
                    // wallpaper
                    imageloop(0);
                    try {
                        function imageloop(cnt) {
                            var i = cnt;
                            $scope.PhysicalFile = files[i];
                            $scope.PhysicalFileType = files[i].type;
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                var new_file = new Image();
                                new_file.src = e.target.result;
                                new_file.onload = function () {
                                    $scope.PhysicalFileHeight = this.height;
                                    $scope.PhysicalFileWidth = this.width
                                    if ($scope.PhysicalFileHeight == 125 && $scope.PhysicalFileWidth == 125) {
                                        cnt = cnt + 1;
                                        if (cnt == files.length) {
                                            $scope.UploadThumbFiles = files;
                                        }
                                        else {
                                            imageloop(cnt);
                                        }
                                    }
                                    else {
                                        $scope.InvalidThumbDimension = true;
                                        $scope.InvalidThumbError = "Invalid Dimension In " + files[i].name + ".";
                                    }
                                }
                            }
                            reader.readAsDataURL(files[i]);
                        }
                    }
                    catch (err) {
                        $scope.InvalidThumbDimension = true;
                        $scope.InvalidThumbError = "Invalid Image Format.";
                    }
                }
                else {
                    $scope.InvalidThumbDimension = true;
                    $scope.InvalidThumbError = "First select ContentType then upload Thumb file.";
                }
            }
        }
    };


    function UploadImageFiles(files) {
        if (files.length > 0) {
            var filearray = [];
            var thumb = false;
            return FileUpload(0);
            function FileUpload(cnt) {
                var i = cnt;
                var reader = new FileReader();
                reader.onload = function (e) {
                    var new_file = new Image();
                    new_file.src = e.target.result;
                    new_file.onload = function () {
                        var templateid = GetCheckDimension($scope.Templates, this.width, this.height);
                        $upload.upload({
                            url: '/UploadFile',
                            method: 'POST',
                            data: { MetadataId: $scope.MetadataId, height: this.height, width: this.width, TemplateId: templateid, ContentType: $scope.SelectedContentType },
                            file: files[i]
                        }).progress(function (evt) {
                        }).success(function (data, status, headers, config) {
                            if (data.success) {
                                if (!thumb) {
                                    if (data.IsThumb) {
                                        thumb = true;
                                    }
                                }
                                for (var i in data.FilePaths) {
                                    if (filearray.indexOf(data.FilePaths[i].filepath.toLowerCase())) {
                                        $scope.FileUrls.push(data.FilePaths[i]);
                                        filearray.push(data.FilePaths[i].filepath.toLowerCase());
                                    }
                                }
                                cnt = cnt + 1;
                                if (cnt != files.length) {
                                    FileUpload(cnt);
                                }
                                else {
                                    var get_request = $http({
                                        method: "Post",
                                        url: 'addContentFiles/UploadMetadatafiles',
                                        data: { ContentType: $scope.SelectedContentType, MetadataId: $scope.MetadataId, FilePaths: $scope.FileUrls, ThumbFile: data.Thumbfile, IsThumb: thumb },
                                        headers: { 'Content-Type': 'application/json' }
                                    });
                                    get_request.success(function (datas) {

                                        if (datas.status == "DataInserted") {
                                            if ($scope.UploadThumbFiles.length > 0) {
                                                UploadThumbFile($scope.UploadThumbFiles);
                                            }
                                            else {
                                                $scope.successvisible = true;
                                                $scope.errorvisible = false;
                                                $scope.success = "Record inserted successfully.";
                                                $scope.SelectedContentType = 0;
                                                $scope.InvalidDimension = false;
                                                $scope.MetadataId = "";
                                                $scope.InvalidDimensionError = "";
                                                $scope.error = "";
                                                $("#physicalFile").val("");
                                                $scope.FileUrls = [];
                                                $scope.UploadButtonVisible = true;
                                                ngProgress.complete();
                                            }
                                        }
                                        else {
                                            $scope.UploadButtonVisible = true;
                                            ngProgress.complete();
                                        }
                                    });
                                    get_request.error(function (datas, status, headers, config) {
                                        if (datas != undefined) {
                                            $scope.errorvisible = true;
                                            $scope.error = datas.substring(1, datas.length - 1);
                                        }
                                        $scope.UploadButtonVisible = true;
                                        ngProgress.complete();
                                    });
                                }
                            }
                        }).error(function (data, status, headers, config) {
                            if (data != undefined) {
                                $scope.errorvisible = true;
                                $scope.error = data;
                            }
                            $scope.UploadButtonVisible = true;
                            ngProgress.complete();
                        });
                    }
                }
                reader.readAsDataURL(files[i]);
            }
        }
        else {
            $scope.UploadButtonVisible = true;
        }
    }

    function UploadVideoFiles(files) {
        if (files.length > 0) {
            var filearray = [];
            return FileUpload(0);
            function FileUpload(cnt) {
                var i = cnt;

                // var templateid = GetCheckDimension($scope.Templates, this.width, this.height);
                var templateid = 73;
                $upload.upload({
                    url: '/UploadVideoFile',
                    method: 'POST',
                    data: { MetadataId: $scope.MetadataId, height: 320, width: 640, TemplateId: templateid, ContentType: $scope.SelectedContentType },
                    file: files[i]
                }).progress(function (evt) {
                }).success(function (data, status, headers, config) {
                    if (data.success) {
                        for (var i in data.FilePaths) {
                            if (filearray.indexOf(data.FilePaths[i].filepath.toLowerCase())) {
                                $scope.FileUrls.push(data.FilePaths[i]);
                                filearray.push(data.FilePaths[i].filepath.toLowerCase());
                            }
                        }
                        cnt = cnt + 1;
                        if (cnt != files.length) {
                            FileUpload(cnt);
                        }
                        else {
                            var get_request = $http({
                                method: "Post",
                                url: 'addContentFiles/UploadMetadatafiles',
                                data: { ContentType: $scope.SelectedContentType, MetadataId: $scope.MetadataId, FilePaths: $scope.FileUrls, ThumbFile: data.Thumbfile, IsThumb: data.IsThumb },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            get_request.success(function (datas) {
                                if (datas.status == "DataInserted") {
                                    if ($scope.UploadThumbFiles.length > 0) {
                                        UploadThumbFile($scope.UploadThumbFiles);
                                    }
                                    else {
                                        $scope.successvisible = true;
                                        $scope.errorvisible = false;
                                        $scope.success = "Record inserted successfully.";
                                        $scope.SelectedContentType = 0;
                                        $scope.InvalidDimension = false;
                                        $scope.MetadataId = "";
                                        $scope.InvalidDimensionError = "";
                                        $scope.error = "";
                                        $("#physicalFile").val("");
                                        $scope.FileUrls = [];
                                        $scope.UploadButtonVisible = true;
                                        ngProgress.complete();
                                    }

                                }
                                else {
                                    $scope.UploadButtonVisible = true;
                                    ngProgress.complete();
                                }
                            });
                            get_request.error(function (datas, status, headers, config) {
                                if (datas != undefined) {
                                    $scope.errorvisible = true;
                                    $scope.error = datas.substring(1, datas.length - 1);
                                }
                                $scope.UploadButtonVisible = true;
                                ngProgress.complete();
                            });
                        }
                    }
                    else {
                        $scope.errorvisible = true;
                        $scope.error = data.error;
                        $scope.UploadButtonVisible = true;
                        ngProgress.complete();
                    }
                }).error(function (data, status, headers, config) {
                    if (data != undefined) {
                        $scope.errorvisible = true;
                        $scope.error = data;
                    }
                    $scope.UploadButtonVisible = true;
                    ngProgress.complete();
                });
            }

        }
        else {
            $scope.UploadButtonVisible = true;
        }
    }

    function UploadAudioFiles(files) {
        if (files.length > 0) {
            var filearray = [];
            return FileUpload(0);
            function FileUpload(cnt) {
                var i = cnt;

                // var templateid = GetCheckDimension($scope.Templates, this.width, this.height);
                var templateid = 73;
                $upload.upload({
                    url: '/UploadAudioFile',
                    method: 'POST',
                    data: { MetadataId: $scope.MetadataId, height: 320, width: 640, TemplateId: 77, ContentType: $scope.SelectedContentType },
                    file: files[i]
                }).progress(function (evt) {
                }).success(function (data, status, headers, config) {
                    if (data.success) {
                        for (var i in data.FilePaths) {
                            if (filearray.indexOf(data.FilePaths[i].filepath.toLowerCase())) {
                                $scope.FileUrls.push(data.FilePaths[i]);
                                filearray.push(data.FilePaths[i].filepath.toLowerCase());
                            }
                        }
                        cnt = cnt + 1;
                        if (cnt != files.length) {
                            FileUpload(cnt);
                        }
                        else {
                            var get_request = $http({
                                method: "Post",
                                url: 'addContentFiles/UploadMetadatafiles',
                                data: { ContentType: $scope.SelectedContentType, MetadataId: $scope.MetadataId, FilePaths: $scope.FileUrls, ThumbFile: data.Thumbfile, IsThumb: data.IsThumb },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            get_request.success(function (datas) {
                                if (datas.status == "DataInserted") {
                                    if ($scope.UploadThumbFiles.length > 0) {
                                        UploadThumbFile($scope.UploadThumbFiles);
                                    }
                                    else {
                                        $scope.successvisible = true;
                                        $scope.errorvisible = false;
                                        $scope.success = "Record inserted successfully.";
                                        $scope.SelectedContentType = 0;
                                        $scope.InvalidDimension = false;
                                        $scope.MetadataId = "";
                                        $scope.InvalidDimensionError = "";
                                        $scope.error = "";
                                        $("#physicalFile").val("");
                                        $scope.FileUrls = [];
                                        $scope.UploadButtonVisible = true;
                                        ngProgress.complete();
                                    }

                                }
                                else {
                                    $scope.UploadButtonVisible = true;
                                    ngProgress.complete();
                                }
                            });
                            get_request.error(function (datas, status, headers, config) {
                                if (datas != undefined) {
                                    $scope.errorvisible = true;
                                    $scope.error = datas.substring(1, datas.length - 1);
                                }
                                $scope.UploadButtonVisible = true;
                                ngProgress.complete();
                            });
                        }
                    }
                    else {
                        $scope.errorvisible = true;
                        $scope.error = data.error;
                        $scope.UploadButtonVisible = true;
                        ngProgress.complete();
                    }
                }).error(function (data, status, headers, config) {
                    if (data != undefined) {
                        $scope.errorvisible = true;
                        $scope.error = data;
                    }
                    $scope.UploadButtonVisible = true;
                    ngProgress.complete();
                });
            }

        }
        else {
            $scope.UploadButtonVisible = true;
        }
    }

    function UploadThumbFile(files) {
        $upload.upload({
            url: '/UploadThumbImageFile',
            method: 'POST',
            data: { MetadataId: $scope.MetadataId, height: 125, width: 125, TemplateId: 4, ContentType: $scope.SelectedContentType },
            file: $scope.UploadThumbFiles[0]
        }).progress(function (evt) {
        })
            .success(function (data, status, headers, config) {
                if (data.success) {
                    var get_request = $http({
                        method: "Post",
                        url: 'addContentFiles/UploadThumbMetadatafiles',
                        data: { ContentType: $scope.SelectedContentType, MetadataId: $scope.MetadataId, ThumbFile: data.FilePath },
                        headers: { 'Content-Type': 'application/json' }
                    });
                    get_request.success(function (datas) {
                        ngProgress.complete();
                        if (datas.status == "DataInserted") {
                            $scope.successvisible = true;
                            $scope.errorvisible = false;
                            $scope.success = "Record inserted successfully.";
                            $scope.SelectedContentType = 0;
                            $scope.InvalidDimension = false;
                            $scope.InvalidThumbDimension = false;
                            $scope.MetadataId = "";
                            $scope.InvalidDimensionError = "";
                            $scope.InvalidThumbError = "";
                            $scope.error = "";
                            $("#physicalFile").val("");
                            $("#ThumbFile").val("");
                        }
                        $scope.UploadButtonVisible = true;
                    });
                    get_request.error(function (datas, status, headers, config) {
                        if (datas != undefined) {
                            $scope.errorvisible = true;
                            $scope.error = datas.substring(1, datas.length - 1);
                        }
                        ngProgress.complete();
                        $scope.UploadButtonVisible = true;
                    });
                }
            })
            .error(function (data, status, headers, config) {
                if (data != undefined) {
                    $scope.errorvisible = true;
                    $scope.error = data;
                }
                ngProgress.complete();
                $scope.UploadButtonVisible = true;
            });
    }

    $scope.UploadMetadata = function () {
        $scope.ThumbUploadMessage = false;
        $scope.errorvisible = false;
        $scope.successvisible = false;

        if ($scope.SelectedContentType != 0) {
            if ($scope.MetadataId && $scope.MetadataId.toString().trim() != "") {
                if (!$scope.InvalidDimension) {
                    if (!$scope.InvalidThumbDimension) {
                        //call here
                        $scope.UploadButtonVisible = false;
                        ngProgress.start();
                        var get_request = $http({
                            method: "Post",
                            url: 'addContentFiles/CheckMetadataforUpload',
                            data: { ContentType: $scope.SelectedContentType, MetadataId: $scope.MetadataId, FilePaths: $scope.FileUrls },
                            headers: { 'Content-Type': 'application/json' }
                        });
                        get_request.success(function (datas) {
                            if (datas.status == "success") {
                                if ($scope.SelectedContentType == 8) {
                                    UploadImageFiles($scope.UploadFiles);
                                }
                                else if ($scope.SelectedContentType == 9) {
                                    UploadVideoFiles($scope.UploadFiles);
                                }
                                else if ($scope.SelectedContentType == 10) {
                                    UploadAudioFiles($scope.UploadFiles);
                                }
                                else {
                                    ngProgress.complete();
                                    $scope.UploadButtonVisible = true;
                                    $scope.errorvisible = true;
                                    $scope.error = "Not Image";
                                }
                            }
                            else if (datas.status == "InvalidMetadata") {
                                ngProgress.complete();
                                $scope.UploadButtonVisible = true;
                                $scope.errorvisible = true;
                                $scope.error = "Invalid Metadata Id for " + $scope.getSelectedType();;
                            }
                            else {
                                ngProgress.complete();
                                $scope.UploadButtonVisible = true;
                                $scope.errorvisible = true;
                                $scope.error = datas.status;
                            }
                        });
                        get_request.error(function (datas, status, headers, config) {
                            ngProgress.complete();
                            if (datas != undefined) {
                                $scope.UploadButtonVisible = true;
                                $scope.errorvisible = true;
                                $scope.error = datas.substring(1, datas.length - 1);
                            }
                        });
                    }
                    else {
                        $scope.UploadButtonVisible = true;
                        $scope.errorvisible = true;
                        $scope.error = $scope.InvalidThumbError;
                    }
                }
                else {
                    $scope.UploadButtonVisible = true;
                    $scope.errorvisible = true;
                    $scope.error = $scope.InvalidDimensionError;
                }
            }
            else {
                $scope.errorvisible = true;
                $scope.error = "Invalid Metadata Id.";
            }
        }
        else {
            $scope.errorvisible = true;
            $scope.error = "Please Select ContentType";
        }
    }

    $scope.UploadMetadataThumb = function () {
        $scope.ThumbUploadMessage = false;
        $scope.errorvisible = false;
        $scope.successvisible = false;
        if ($scope.SelectedContentType != 0) {
            if ($scope.MetadataId && $scope.MetadataId.toString().trim() != "") {
                if (!$scope.InvalidDimension) {
                    //call here

                    if ($scope.UploadThumbFiles.length > 0) {
                        $scope.UploadButtonVisible = false;
                        ngProgress.start();
                        var get_request = $http({
                            method: "Post",
                            url: 'addContentFiles/CheckMetadataforUpload',
                            data: { ContentType: $scope.SelectedContentType, MetadataId: $scope.MetadataId, FilePaths: $scope.FileUrls },
                            headers: { 'Content-Type': 'application/json' }
                        });
                        get_request.success(function (datas) {
                            if (datas.status == "success") {
                                $upload.upload({
                                    url: '/UploadThumbImageFile',
                                    method: 'POST',
                                    data: { MetadataId: $scope.MetadataId, height: 125, width: 125, TemplateId: 4, ContentType: $scope.SelectedContentType },
                                    file: $scope.UploadThumbFiles[0]
                                }).progress(function (evt) {
                                }).success(function (data, status, headers, config) {
                                    if (data.success) {
                                        var get_request = $http({
                                            method: "Post",
                                            url: 'addContentFiles/UploadThumbMetadatafiles',
                                            data: { ContentType: $scope.SelectedContentType, MetadataId: $scope.MetadataId, ThumbFile: data.FilePath },
                                            headers: { 'Content-Type': 'application/json' }
                                        });
                                        get_request.success(function (datas) {
                                            ngProgress.complete();
                                            if (datas.status == "DataInserted") {
                                                $scope.successvisible = true;
                                                $scope.errorvisible = false;
                                                $scope.success = "Thumbfile Uploaded successfully.";
                                                $scope.SelectedContentType = 0;
                                                $scope.InvalidDimension = false;
                                                $scope.MetadataId = "";
                                                $scope.InvalidDimensionError = "";
                                                $scope.error = "";
                                                $("#ThumbFile").val("");
                                            }
                                            $scope.UploadButtonVisible = true;
                                        });
                                        get_request.error(function (datas, status, headers, config) {
                                            if (datas != undefined) {
                                                $scope.errorvisible = true;
                                                $scope.error = datas.substring(1, datas.length - 1);
                                            }
                                            ngProgress.complete();
                                            $scope.UploadButtonVisible = true;
                                        });
                                    }
                                }).error(function (data, status, headers, config) {
                                    if (data != undefined) {
                                        $scope.errorvisible = true;
                                        $scope.error = data;
                                    }
                                    ngProgress.complete();
                                    $scope.UploadButtonVisible = true;
                                });
                            }
                            else if (datas.status == "InvalidMetadata") {
                                ngProgress.complete();
                                $scope.errorvisible = true;
                                $scope.error = "Invalid Metadata Id for " + $scope.getSelectedType();
                                $scope.UploadButtonVisible = true;
                            }
                            else {
                                ngProgress.complete();
                                $scope.UploadButtonVisible = true;
                                $scope.errorvisible = true;
                                $scope.error = datas.status;
                            }
                        });
                        get_request.error(function (datas, status, headers, config) {
                            ngProgress.complete();
                            if (datas != undefined) {
                                $scope.errorvisible = true;
                                $scope.error = datas.substring(1, datas.length - 1);
                            }
                            $scope.UploadButtonVisible = true;
                        });
                    }
                    else {
                        $scope.errorvisible = true;
                        $scope.error = "Please Upload Thumb Image.";
                    }
                }
                else {
                    $scope.errorvisible = true;
                    $scope.error = $scope.InvalidDimensionError;
                }
            }
            else {
                $scope.errorvisible = true;
                $scope.error = "Please Enter Metadata Id.";
            }
        }
        else {
            $scope.errorvisible = true;
            $scope.error = "Please Select ContentType";
        }
    }

    $scope.ResetMetadata = function () {
        $scope.InvalidThumbDimension = false;
        $scope.UploadThumbFiles = [];
        $scope.SelectedContentType = 0;
        $scope.InvalidDimension = 0;
        $scope.MetadataId = "";
        $scope.InvalidDimensionError = "";
        $scope.errorvisible = false;
        $scope.error = "";
        $("#physicalFile").val("");
        $("#ThumbFile").val("");
    }
});

myApp.controller('masterlist-addCtrl', function ($scope, $http, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addeditmaster').addClass('active');
    $('#masterlistmanagement').addClass('active');

    $scope.MasterListArr = [{ 'cd_id': 9, 'cd_name': 'Celebrity' },
     { 'cd_id': 21, 'cd_name': 'Celebrity Role' },
      { 'cd_id': 5, 'cd_name': 'Genres' },
       { 'cd_id': 6, 'cd_name': 'Sub Genres' },
       { 'cd_id': 7, 'cd_name': 'Mood' },
       { 'cd_id': 8, 'cd_name': 'Languages' },
        { 'cd_id': 10, 'cd_name': 'Festival' },
        { 'cd_id': 11, 'cd_name': 'Religion' },
        { 'cd_id': 15, 'cd_name': 'Instrument' },
         { 'cd_id': 14, 'cd_name': 'Raag / Taal' }];

    $scope.Permission = true;
    $scope.IsDisable = false;
    //$scope.MasterListArr = []
    $scope.CelebrityRoleArr = []
    $scope.SelectedMasterList = 0;
    $scope.CelebrityRoleDisabled = true;
    $scope.AliasDisabled = true;
    var celebrityFlag = false;
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    $scope.SelectedCelebrityRole = [];

    $scope.MasterListValidation = false;
    $scope.MainTitleValidation = false;
    $scope.CelebrityRoleValidation = false;
    $scope.CelebrityRoleShow = false;
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    if ($scope.Permission == true) {
        $scope.IsDisable = false;
    }
    else {
        $scope.IsDisable = true;
    }


    var get_request = $http({
        method: "Get",
        url: 'masterlist/GetMasterListData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        if (datas.UserRole == "Moderator") {
            for (var i in datas.MasterListData) {
                //if (datas.MasterListData[i].cd_cm_id == 20) {
                //    $scope.MasterListArr.push(datas.MasterListData[i]);
                //}
                if (datas.MasterListData[i].cd_cm_id == 21) {
                    $scope.CelebrityRoleArr.push(datas.MasterListData[i]);
                }
            }
        }
        else {
            location.href = "/";
        }


    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.MasterListChange = function () {
        $scope.CelebrityRoleDisabled = true;
        $scope.AliasDisabled = true;
        celebrityFlag = false;

        if ($scope.SelectedMasterList == 9) {
            $scope.CelebrityRoleDisabled = false;
            $scope.AliasDisabled = false;
            celebrityFlag = true;
        }
    };

    $scope.saveMasterListDetails = function () {
        $scope.MasterListValidation = false;
        $scope.MainTitleValidation = false;
        $scope.CelebrityRoleValidation = false;
        var CelebrityRole = [];
        if ($scope.SelectedMasterList != 0) {
            if ($scope.MainTitle != "" && $scope.MainTitle != undefined) {
                if ($scope.SelectedMasterList == 9) {
                    if ($scope.SelectedCelebrityRole.length > 0) {
                        $scope.CelebrityRoleShow = true;
                        if ($scope.DisplayTitle == undefined) {
                            $scope.DisplayTitle = $scope.MainTitle;
                        }
                        for (var j in $scope.SelectedCelebrityRole) {
                            CelebrityRole.push({ CelebrityRole: $scope.SelectedCelebrityRole[j] });
                        }

                        var datas = {
                            MasterList: $scope.SelectedMasterList,
                            Title: $scope.MainTitle,
                            DisplayTitle: $scope.DisplayTitle,
                            CelebrityRole: CelebrityRole,
                            Alias: $scope.Alias,
                            CelebrityRoleShow: $scope.CelebrityRoleShow
                        };

                        ngProgress.start();
                        var post_request = $http({
                            method: "Post",
                            url: 'masterlist/AddMasterlist',
                            data: datas,
                            headers: { 'Content-Type': 'application/json' }
                        });
                        post_request.success(function (data) {
                            if (data.Result == "Success") {
                                ngProgress.complete();
                                $scope.successvisible = true;
                                $scope.success = "Record inserted successfully.";
                                $scope.SelectedMasterList = 0;
                                $scope.MainTitle = "";
                                $scope.DisplayTitle = "";
                                $scope.SelectedCelebrityRole = [];
                                $scope.Alias = "";
                                $scope.CelebrityRoleDisabled = true;
                                $scope.AliasDisabled = true;
                                if (data.CelebrityRole.length > 0) {
                                    $scope.CelebrityRoleArr = [];
                                    $scope.CelebrityRoleArr = angular.copy(data.CelebrityRole);
                                }
                            }

                        });
                        post_request.error(function (data, status, headers, config) {
                            ngProgress.complete();
                            if (data != undefined) {
                                $scope.errorvisible = true;
                                $scope.error = data.substring(1, data.length - 1);
                            }
                        });
                    }
                    else {
                        $scope.CelebrityRoleValidation = true;
                    }
                }
                else {
                    CelebrityRole = [];
                    $scope.CelebrityRoleShow = false;
                    if ($scope.DisplayTitle == undefined || $scope.DisplayTitle == "") {
                        $scope.DisplayTitle = $scope.MainTitle;
                    }
                    var datas = {
                        MasterList: $scope.SelectedMasterList,
                        Title: $scope.MainTitle,
                        DisplayTitle: $scope.DisplayTitle,
                        CelebrityRole: CelebrityRole,
                        CelebrityRoleShow: $scope.CelebrityRoleShow
                    };

                    ngProgress.start();
                    var post_request = $http({
                        method: "Post",
                        url: 'masterlist/AddMasterlist',
                        data: datas,
                        headers: { 'Content-Type': 'application/json' }
                    });
                    post_request.success(function (data) {
                        if (data.Result == "Success") {
                            ngProgress.complete();
                            $scope.successvisible = true;
                            $scope.success = "Record inserted successfully.";
                            $scope.SelectedMasterList = 0;
                            $scope.MainTitle = "";
                            $scope.DisplayTitle = "";
                            $scope.SelectedCelebrityRole = [];
                            $scope.Alias = "";
                            if (data.CelebrityRole.length > 0) {
                                $scope.CelebrityRoleArr = [];
                                $scope.CelebrityRoleArr = angular.copy(data.CelebrityRole);
                            }
                        }

                    });
                    post_request.error(function (data, status, headers, config) {
                        ngProgress.complete();
                        if (data != undefined) {
                            $scope.errorvisible = true;
                            $scope.error = data.substring(1, data.length - 1);
                        }
                    });
                }

            }
            else {
                $scope.MainTitleValidation = true;
            }
        }
        else {
            $scope.MasterListValidation = true;
        }


        if ($scope.DisplayTitle == "") {
            $scope.DisplayTitle = $scope.MainTitle;
        }

        if (celebrityFlag) {
            if ($scope.SelectedCelebrityRole != null) {

            }
            else {
                //validation
            }
        }
    };
});

myApp.controller('masterlist-editCtrl', function ($scope, $http, $routeParams, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#masterlistmanagement').addClass('active');

    $scope.MasterListArr = [];
    $scope.CelebrityRoleArr = [];

    $scope.SelectedMasterList = "";
    $scope.MainTitle = "";
    $scope.DisplayTitle = "";
    $scope.SelectedCelebrityRole = [];
    $scope.Alias = "";
    $scope.CelebrityShow = false;
    $scope.successvisible = false;
    $scope.MainTitleValidation = false;
    $scope.CelebrityRoleValidation = false;
    $scope.IsEditPermission = false;
    $scope.errorvisible = false;
    $scope.error = "";
    $scope.success = "";
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');
    var get_request = $http({
        method: "Post",
        url: 'masterlist/GetEditMasterListData',
        data: { 'cd_id': $routeParams.id },
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        if (datas.UserRole == "Moderator" || datas.UserRole === "Super Admin") {
            for (var i in datas.MasterListData) {
                if (datas.MasterListData[i].cd_cm_id == 20) {
                    $scope.MasterListArr.push(datas.MasterListData[i]);
                }
                if (datas.MasterListData[i].cd_cm_id == 21) {
                    $scope.CelebrityRoleArr.push(datas.MasterListData[i]);
                }
            }

            var selecteddata = angular.copy(datas.EditMasterListData);
            $scope.OldData = selecteddata;
            $scope.SelectedCelebrityRole = [];

            for (var i in selecteddata) {
                if ($scope.SelectedCelebrityRole.indexOf(selecteddata[i].cmd_entity_detail) == -1) {
                    $scope.SelectedCelebrityRole.push(selecteddata[i].cmd_entity_detail);
                }
            }

            $scope.CelebrityShow = false;

            for (var i in datas.EditMasterListData) {
                if (datas.EditMasterListData[0].cm_id == 9) {
                    $scope.CelebrityShow = true;
                    $scope.Cmd_Group_Id = datas.EditMasterListData[0].cmd_group_id;
                }
                $scope.SelectedMasterList = datas.EditMasterListData[0].cm_name;
                $scope.MainTitle = datas.EditMasterListData[0].cd_name;
                $scope.DisplayTitle = datas.EditMasterListData[0].cd_display_name;
                //$scope.SelectedCelebrityRole = [];
                $scope.Alias = datas.EditMasterListData[0].cd_desc1;
            }
            $scope.IsEditPermission = datas.IsEdit;
        }
        else {
            location.href = "/";
        }

    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    function GetDeleteCelebrityRole(OldRole, SelectedRole) {
        var DeleteArray = [];
        for (var i in OldRole) {
            var flag = true;
            for (var j in SelectedRole) {
                if (OldRole[i].cmd_entity_detail == SelectedRole[j].CelebrityRole) {
                    flag = false;
                }
            }
            if (flag) {
                DeleteArray.push({ CelebrityRole: OldRole[i].cmd_entity_detail });
            }
        }
        return DeleteArray;
    }

    function GetAddCelebrityRole(OldRole, SelectedRole) {
        var AddArray = [];
        for (var j in SelectedRole) {
            var flag = true;
            for (var i in OldRole) {
                if (OldRole[i].cmd_entity_detail == SelectedRole[j].CelebrityRole) {
                    flag = false;
                }
            }
            if (flag) {
                AddArray.push({ CelebrityRole: SelectedRole[j].CelebrityRole });
            }
        }
        return AddArray;
    }


    $scope.UpdatemasterList = function () {
        $scope.MainTitleValidation = false;
        $scope.CelebrityRoleValidation = false;
        var CelebrityRole = [];
        if ($scope.MainTitle != "" || $scope.MainTitle != undefined) {
            if ($scope.DisplayTitle == "" || $scope.DisplayTitle == undefined) {
                $scope.DisplayTitle = $scope.MainTitle;
            }
            if ($scope.CelebrityShow == true) {
                if ($scope.SelectedCelebrityRole.length > 0) {
                    for (var j in $scope.SelectedCelebrityRole) {
                        CelebrityRole.push({ CelebrityRole: $scope.SelectedCelebrityRole[j] });
                    }
                    var AddRights = GetAddCelebrityRole($scope.OldData, CelebrityRole);
                    var DeleteRights = GetDeleteCelebrityRole($scope.OldData, CelebrityRole);
                    var datas = {
                        SelectmasterList: $scope.SelectedMasterList,
                        MasterList: $routeParams.id,
                        Title: $scope.MainTitle,
                        Group_Id: $scope.Cmd_Group_Id,
                        DisplayTitle: $scope.DisplayTitle,
                        AddRights: AddRights,
                        DeleteRights: DeleteRights,
                        Alias: $scope.Alias,
                        CelebrityRoleShow: $scope.CelebrityShow
                    };
                    ngProgress.start();
                    var post_request = $http({
                        method: "Post",
                        url: 'masterlist/UpdateMasterList',
                        data: datas,
                        headers: { 'Content-Type': 'application/json' }
                    });
                    post_request.success(function (data) {
                        if (data.Result == "Success") {
                            ngProgress.complete();
                            $scope.MainTitle = "";
                            $scope.DisplayTitle = "";
                            $scope.SelectedCelebrityRole = [];
                            $scope.Alias = "";
                            // $scope.CelebrityRoleArr = [];
                            //$scope.CelebrityRoleArr = angular.copy(data.CelebrityRole);
                        }
                        if (data.Result == "MasterlistUpdated") {
                            ngProgress.complete();
                            $scope.UpdateMasterList = true;
                            $scope.successvisible = true;
                            $scope.success = "Record Updated successfully.";
                        }
                    });
                    post_request.error(function (data, status, headers, config) {
                        ngProgress.complete();
                        if (data != undefined) {
                            $scope.errorvisible = true;
                            $scope.error = data.substring(1, data.length - 1);
                        }
                    });
                }
                else {
                    $scope.CelebrityRoleValidation = true;
                }
            }
            else {
                var datas = {
                    SelectmasterList: $scope.SelectedMasterList,
                    MasterList: $routeParams.id,
                    Title: $scope.MainTitle,
                    DisplayTitle: $scope.DisplayTitle,
                    CelebrityRoleShow: $scope.CelebrityShow
                };

                ngProgress.start();
                var post_request = $http({
                    method: "Post",
                    url: 'masterlist/UpdateMasterList',
                    data: datas,
                    headers: { 'Content-Type': 'application/json' }
                });
                post_request.success(function (data) {
                    if (data.Result == "Success") {
                        ngProgress.complete();
                        $scope.MainTitle = "";
                        $scope.DisplayTitle = "";
                        $scope.SelectedCelebrityRole = [];
                        $scope.Alias = "";
                        // $scope.CelebrityRoleArr = [];
                        //$scope.CelebrityRoleArr = angular.copy(data.CelebrityRole);
                    }
                    if (data.Result == "MasterlistUpdated") {
                        ngProgress.complete();
                        $scope.UpdateMasterList = true;
                        $scope.successvisible = true;
                        $scope.success = "Record Updated successfully.";
                    }
                });
                post_request.error(function (data, status, headers, config) {
                    ngProgress.complete();
                    if (data != undefined) {
                        $scope.errorvisible = true;
                        $scope.error = data.substring(1, data.length - 1);
                    }
                });
            }
        }
        else {
            $scope.MainTitleValidation = true;
        }
    }

});

myApp.controller('master-listCtrl', function ($scope, $http, Excel, $timeout, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#masterlist').addClass('active');
    $('#masterlistmanagement').addClass('active');

    $scope.MasterListArr = [];
    $scope.CelebrityRoleArr = [];
    $scope.SelectedMasterList = 0;
    $scope.SelectedCelbrityRole = 0;
    $scope.CelbrityRoleDisabled = true;

    $scope.MasterListArr = [
    { 'cd_id': 9, 'cd_name': 'Celebrity' },
     { 'cd_id': 21, 'cd_name': 'Celebrity Role' },
      { 'cd_id': 5, 'cd_name': 'Genres' },
       { 'cd_id': 6, 'cd_name': 'Sub Genres' },
       { 'cd_id': 7, 'cd_name': 'Mood' },
       { 'cd_id': 8, 'cd_name': 'Languages' },
        { 'cd_id': 10, 'cd_name': 'Festival' },
        { 'cd_id': 11, 'cd_name': 'Religion' },
        { 'cd_id': 15, 'cd_name': 'Instrument' },
         { 'cd_id': 14, 'cd_name': 'Raag / Taal' }];

    $scope.filterData = [];
    $scope.MasterListData = [];
    $scope.jsonData = [];
    $scope.TempData = [];
    $scope.SearchContent = [];
    $scope.IsEditPermission = false;
    $scope.successvisible = false;
    $scope.errorvisible = false;
    $scope.chunkedFilterData = [];
    $scope.error = "";
    $scope.success = "";
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');
    var get_request = $http({
        method: "Get",
        url: 'masterlist/GetMasterListData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        ////console.log(datas);
        if (datas.UserRole == "Moderator" || datas.UserRole === "Super Admin") {
            for (var i in datas.MasterListData) {
                if (datas.MasterListData[i].cd_cm_id == 21) {
                    $scope.CelebrityRoleArr.push(datas.MasterListData[i]);
                }
            }
            $scope.MasterListData = angular.copy(datas.MasterListData);
            $scope.IsEditPermission = datas.IsEdit;
        }
        else {
            location.href = "/";
        }
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.exportMasterListData = function (tableId) {
        //var exportHref = Excel.tableToExcel(tableId, 'MasterList');
        //$timeout(function () { location.href = exportHref; }, 100);

        var masterListExport = [];

        $scope.filterData.forEach(function (data) {
            if (data.cd_name.toString().toLowerCase().indexOf($scope.SearchContent) !== -1) {
                masterListExport.push(data);
            }
        });
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportMasterExcel',
            data: { masterListExport: masterListExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'masterList.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.masterListChange = function () {
        $scope.CelbrityRoleDisabled = true;
        $scope.filterData = [];
        var NewArray = [];
        for (var i in $scope.MasterListData) {
            if ($scope.SelectedMasterList == 9) {
                if ($scope.MasterListData[i].cd_cm_id == $scope.SelectedMasterList) {
                    $scope.CelbrityRoleDisabled = false;
                    if (NewArray.indexOf($scope.MasterListData[i].cmd_group_id) == -1) {
                        NewArray.push($scope.MasterListData[i].cmd_group_id);
                        $scope.filterData.push($scope.MasterListData[i]);
                    }
                }
            }
            else {
                if ($scope.MasterListData[i].cd_cm_id == $scope.SelectedMasterList) {
                    $scope.filterData.push($scope.MasterListData[i]);
                    $scope.SelectedCelbrityRole = 0;
                }
            }
        }

        createChunks();
    };

    $scope.CelebrityRoleChange = function () {
        if ($scope.SelectedCelbrityRole != 0) {
            $scope.filterData = [];
            for (var i in $scope.MasterListData) {
                if ($scope.MasterListData[i].cmd_entity_detail == $scope.SelectedCelbrityRole) {
                    $scope.filterData.push($scope.MasterListData[i]);
                }
            }
        }
        else {
            $scope.filterData = [];
            var NewArray = [];
            for (var i in $scope.MasterListData) {
                if ($scope.SelectedMasterList == 9) {
                    if ($scope.MasterListData[i].cd_cm_id == $scope.SelectedMasterList) {
                        $scope.CelbrityRoleDisabled = false;
                        if (NewArray.indexOf($scope.MasterListData[i].cmd_group_id) == -1) {
                            NewArray.push($scope.MasterListData[i].cmd_group_id);
                            $scope.filterData.push($scope.MasterListData[i]);
                        }
                    }
                }
                else {
                    if ($scope.MasterListData[i].cd_cm_id == $scope.SelectedMasterList) {
                        $scope.filterData.push($scope.MasterListData[i]);
                        $scope.SelectedCelbrityRole = 0;
                    }
                }
            }
        }
        createChunks();
    }

    $scope.SearchMasterList = function () {
        if ($scope.SelectedMasterList != 0) {
            filterData = [];
            for (var i in data) {
                if (data[i].masterlist == $scope.SelectedMasterList) {
                    filterData.push(data[i]);
                }
            }
            $scope.jsonData = filterData;
        }
    };
    $scope.vendorcurrentPage = 0;
    $scope.vendorpageSize = 50;

    function createChunks() {
        var masterList = [];
        var cnt = 1;

        if ($scope.serchcontentquery) {
            $scope.filterData.forEach(function (data) {
                if (data.cd_name.toString().toLowerCase().indexOf($scope.serchcontentquery) !== -1) {
                    data['srno'] = cnt;
                    masterList.push(data);
                    cnt++;
                }
            });
        } else {
            $scope.filterData.forEach(function (data) {
                data['srno'] = cnt;
                masterList.push(data);
                cnt++;
            });
        }

        $scope.chunkedFilterData = BindMasterList(masterList);
    }

    $scope.FilterContent = function (data) {
        $scope.serchcontentquery = $scope.SearchContent;
        createChunks();
    }

    $scope.DeleteMasterList = function (id) {
        if (confirm("Are you sure want to delete this Record?")) {

            ngProgress.start();
            var get_request = $http({
                method: "Post",
                url: 'masterlist/DeleteMasterList',
                data: { 'cd_id': id, 'selectedmaster': $scope.SelectedMasterList },
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "MasterlistDeleted") {
                    $scope.successvisible = true;
                    $scope.success = "Record Deleted successfully.";
                    ngProgress.complete();
                    var temparray = [];
                    var tempmaster = [];
                    var tempcelrole = [];
                    for (var i in $scope.filterData) {
                        if (id == $scope.filterData[i].cd_id) {
                        }
                        else {
                            temparray.push($scope.filterData[i]);
                        }
                    }
                    $scope.filterData = temparray;
                    for (var i in $scope.MasterListData) {
                        if ($scope.MasterListData[i].cd_id == id) {
                        }
                        else {
                            tempmaster.push($scope.MasterListData[i]);
                        }
                    }
                    $scope.MasterListData = tempmaster;
                    if ($scope.SelectedMasterList == 21) {
                        for (var i in $scope.CelebrityRoleArr) {
                            if ($scope.CelebrityRoleArr[i].cd_id == id) {
                            }
                            else {
                                tempcelrole.push($scope.CelebrityRoleArr[i]);
                            }
                        }
                        $scope.CelebrityRoleArr = tempcelrole;
                    }
                    createChunks();
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }
});

myApp.controller('content-catalogCtrl', function ($scope, $http, $window, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addeditcontentcatelog').addClass('active');
    $('#contentcatelog').addClass('active');

    $scope.errorvisible = false;
    $scope.error;

    $scope.ContentStatus = [];
    $scope.Vendor = [];
    $scope.Property = [];
    $scope.UserRole = "";
    $scope.Type = [];
    $scope.SearchContentBy = [];

    $scope.ContentMetadata = [];
    $scope.IsEditPermission = false;


    function ButtonColor(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {

        var status = "chartreuse";
        var flag = false;
        if (cm_state == 7 || cm_state == 5) {
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            status = "red";
                            flag = true;
                        }
                    }
                    else {
                        status = "red";
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            status = "red";
                            flag = true;
                        }
                    }
                    else {
                        status = "red";
                        flag = true;
                    }
                }
            }
        }
        if (flag) {
            return status;
        }
        else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
            return "red";
        }
        else {
            return status;
        }
    }
    function IsEditVisible(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {
        // if (UserRole == "Content Manager") {
        var flag = false;
        if (cm_state == 7 || cm_state == 5) {
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            flag = true;
                        }
                    }
                    else {
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            flag = true;
                        }
                    }
                    else {
                        flag = true;
                    }
                }
            }
        }
        if (flag) {
            return !flag;
        }
        else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
            return true;
        }
        else {
            return false;
        }
        //}
        //else {
        //    return true;
        //}
    }
    function GetStatus(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {

        var status = "Active";
        var flag = false;
        if (cm_state == 7 || cm_state == 5) {
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            status = "Vendor Expired";
                            flag = true;
                        }
                    }
                    else {
                        status = "Vendor Blocked";
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            status = "Property Expired";
                            flag = true;
                        }
                    }
                    else {
                        status = "Property Blocked";
                        flag = true;
                    }
                }
            }
        }
        if (flag) {
            return status;
        }
        else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
            return "Metadata Expired";
        }
        else {
            return status;
        }
    }
    function GetState(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {
        var status = cm_state;
        var flag = false;
        if (cm_state == 6 || cm_state == 7 || cm_state == 5) {
            return cm_state;
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            cm_state = 6;
                            flag = true;
                        }
                    }
                    else {
                        cm_state = 6;
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            cm_state = 6;
                            flag = true;
                        }
                    }
                    else {
                        cm_state = 6;
                        flag = true;
                    }
                }
            }
            if (status == 6 && !flag) {
            }
            else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
                cm_state = 6;
            }
            return cm_state;
        }
        
        
    }
    function GetContentData(data, Vendors, Property, UserRole) {
        var NewArray = [];
        for (var i in data) {
            var val = {
                celebrity_cd_id: data[i].celebrity_cd_id,
                celebrity_cd_name: data[i].celebrity_cd_name,
                celebrity_cmd_id: data[i].celebrity_cmd_id,
                celebrity_group: data[i].celebrity_group,
                cm_celebrity: data[i].cm_celebrity,
                cm_comment: data[i].cm_comment,
                cm_content_duration: data[i].cm_content_duration,
                cm_content_quality: data[i].cm_content_quality,
                cm_content_type: data[i].cm_content_type,
                cm_cp_content_id: data[i].cm_cp_content_id,
                cm_created_by: data[i].cm_created_by,
                cm_created_on: data[i].cm_created_on,
                cm_display_title: data[i].cm_display_title,
                cm_expires_on: setDate(data[i].cm_expires_on),
                cm_festival_occasion: data[i].cm_festival_occasion,
                cm_genre: data[i].cm_genre,
                cm_id: data[i].cm_id,
                cm_instruments: data[i].cm_instruments,
                cm_is_active: data[i].cm_is_active,
                cm_is_app_store_purchase: data[i].cm_is_app_store_purchase,
                cm_key_words: data[i].cm_key_words,
                cm_language: data[i].cm_language,
                cm_location: data[i].cm_location,
                cm_long_description: data[i].cm_long_description,
                cm_mode: data[i].cm_mode,
                cm_modified_by: data[i].cm_modified_by,
                cm_modified_on: setDate(data[i].cm_modified_on),
                cm_mood: data[i].cm_mood,
                cm_music_director: data[i].cm_music_director,
                cm_nudity: data[i].cm_nudity,
                cm_parental_advisory: data[i].cm_parental_advisory,
                cm_property_id: data[i].cm_property_id,
                cm_protographer: data[i].cm_protographer,
                cm_r_group_id: data[i].cm_r_group_id,
                cm_raag_tal: data[i].cm_raag_tal,
                cm_rank: data[i].cm_rank,
                cm_release_year: data[i].cm_release_year,
                cm_religion: data[i].cm_religion,
                cm_short_desc: data[i].cm_short_desc,
                cm_signature: data[i].cm_signature,
                cm_singer: data[i].cm_singer,
                cm_starts_from: setDate(data[i].cm_starts_from),
                cm_sub_content_type: data[i].cm_sub_content_type,
                cm_sub_genre: data[i].cm_sub_genre,
                cm_thumb_url: data[i].cm_thumb_url,
                cm_title: data[i].cm_title,
                cm_vendor: data[i].cm_vendor,
                festival_id: data[i].festival_id,
                festival_name: data[i].festival_name,
                genre_id: data[i].genre_id,
                genre_name: data[i].genre_name,
                instruments_cd_id: data[i].instruments_cd_id,
                instruments_cd_name: data[i].instruments_cd_name,
                instruments_cmd_id: data[i].instruments_cmd_id,
                instruments_group: data[i].instruments_group,
                language_id: data[i].language_id,
                language_name: data[i].language_name,
                mood_id: data[i].mood_id,
                mood_name: data[i].mood_name,
                propertyId: data[i].propertyId,
                propertydisplayname: data[i].propertydisplayname,
                propertyname: data[i].propertyname,
                raagtaal_cd_id: data[i].raagtaal_cd_id,
                raagtaal_cd_name: data[i].raagtaal_cd_name,
                raagtaal_cmd_id: data[i].raagtaal_cmd_id,
                raagtaal_group: data[i].raagtaal_group,
                religion_id: data[i].religion_id,
                religion_name: data[i].religion_name,
                subgenre_id: data[i].subgenre_id,
                subgenre_name: data[i].subgenre_name,
                cm_state: GetState(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id),
                buttoncolor: ButtonColor(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id),
                status: GetStatus(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id),
                IsEditVisible: IsEditVisible(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id)
            }
            NewArray.push(val);
        }
        //console.log(NewArray);
        return NewArray;
    }
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');
    var get_request = $http({
        method: "Get",
        url: 'contentcatalog/GetContentCatalogData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        //console.log(datas);
        $scope.IsEditPermission = datas.IsEdit;
        for (var i in datas.Catalogdata) {
            if (datas.Catalogdata[i].cd_cm_id == 1) {
                $scope.ContentStatus.push(datas.Catalogdata[i]);
            }
            if (datas.Catalogdata[i].cd_cm_id == 2) {
                $scope.Type.push(datas.Catalogdata[i]);
            }
            if (datas.Catalogdata[i].cd_cm_id == 19) {
                $scope.SearchContentBy.push(datas.Catalogdata[i]);
            }
        }

        $scope.UserRole = datas.UserRole;
        $scope.Vendor = angular.copy(datas.VendorData);
        $scope.Property = angular.copy(datas.PropertyData);
        $scope.ContentMetadata = GetContentData(angular.copy(datas.ContentMetadata), $scope.Vendor, $scope.Property, datas.UserRole);

        //$scope.bullseyeColor = function (id) {
        //    for (var i in $scope.ContentMetadata) {
        //        if ($scope.ContentMetadata[i].cm_id == id) {
        //            if (Datewithouttime($scope.ContentMetadata[i].cm_expires_on) < Datewithouttime(new Date())) {
        //                return "red";
        //            } return "chartreuse";
        //        }
        //    }
        //}


    });
    get_request.error(function (datas, status, headers, config) {
        ////console.log(datas);
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.PendingWallpaperShow = false;
    $scope.InProgressShow = false;
    $scope.ModerateWallpaperShow = false;
    $scope.PublishedWallpaperShow = false;
    $scope.RejectedWallpaperShow = false;
    $scope.InactiveWallpaperShow = false;
    $scope.DeletedWallpaperShow = false;

    $scope.FilterPendingWallpaperList = [];
    $scope.FilterInProgressList = [];
    $scope.FilterDeletedWallpaperList = [];
    $scope.FilterRejectWallpaperList = [];
    $scope.FilterPublishedWallpaperList = [];
    $scope.FilterInActiveWallpaperList = [];
    $scope.FilterModerateWallpaperList = [];

    $scope.ContentMetadataList = [];

    $scope.SelectedContentStatus = 0;
    $scope.SelectedVendor = 0;
    $scope.SelectedType = 0;
    $scope.SelectedSearchContentBy = 0;
    $scope.SelectedPublishReject = 3;
    $scope.SelectedUniqueId = "";
    $scope.SearchContent = "";
    $scope.SelectedPublishArray = [];

    //Pending wallpaper pagging
    $scope.PendingcurrentPage = 0;
    $scope.PendingpageSize = 50;
    //Inprocess wallpaper pagging
    $scope.InprocesscurrentPage = 0;
    $scope.InprocesspageSize = 50;
    //Moderate wallpaper pagging
    $scope.ModeratecurrentPage = 0;
    $scope.ModeratepageSize = 50;
    //Published wallpaper pagging
    $scope.PublishedcurrentPage = 0;
    $scope.PublishedpageSize = 50;
    //Rejected wallpaper pagging
    $scope.RejectedcurrentPage = 0;
    $scope.RejectedpageSize = 50;
    //Inactive wallpaper pagging
    $scope.InactivecurrentPage = 0;
    $scope.InactivepageSize = 50;
    //Deleted wallpaper pagging
    $scope.DeletedcurrentPage = 0;
    $scope.DeletedpageSize = 50;

    $scope.Validation = false;

    $scope.ContentStatusChange = function () {
        $scope.Validation = false;
        content_catalog_change();
    }

    $scope.VendorChange = function () {
        $scope.Validation = false;
        content_catalog_change();
    }

    $scope.TypeChange = function () {
        $scope.Validation = false;
        content_catalog_change();
    }

    $scope.EditWallpaper = function (id) {
        for (var i in $scope.ContentMetadata) {
            if ($scope.ContentMetadata[i].cm_id == id) {
                if ($scope.ContentMetadata[i].cm_content_type == 8) {
                    $window.location.href = "#editwallpaper/" + id;
                }
                if ($scope.ContentMetadata[i].cm_content_type == 9) {
                    $window.location.href = "#editvideo/" + id;
                }
                if ($scope.ContentMetadata[i].cm_content_type == 10) {
                    $window.location.href = "#editaudio/" + id;
                }
                if ($scope.ContentMetadata[i].cm_content_type == 11) {
                    $window.location.href = "#editapps-games/" + id;
                }
            }
        }
    }

    $scope.SaveWallpaper = function (id) {
        $scope.Validation = false;
        if ($scope.PendingWallpaperShow) {
            for (var i in $scope.PendingWallpaperList) {
                if ($scope.PendingWallpaperList[i].UniqueId == id) {
                    if ($scope.PendingWallpaperList[i].ContentTitle != "") {
                        if ($scope.PendingWallpaperList[i].ProperyTitle != "") {
                            if ($scope.PendingWallpaperList[i].AddedOn != "") {
                                $scope.PendingWallpaperList[i].IsEditable = false;
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
        if ($scope.PublishedWallpaperShow) {
            for (var i in $scope.PublishedWallpaperList) {
                if ($scope.PublishedWallpaperList[i].UniqueId == id) {
                    if ($scope.PublishedWallpaperList[i].ContentTitle != "") {
                        if ($scope.PublishedWallpaperList[i].ProperyTitle != "") {
                            if ($scope.PublishedWallpaperList[i].AddedOn != "") {
                                $scope.PublishedWallpaperList[i].IsEditable = false;
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
        if ($scope.ModerateWallpaperShow) {
            for (var i in $scope.ModerateWallpaperList) {
                if ($scope.ModerateWallpaperList[i].UniqueId == id) {
                    if ($scope.ModerateWallpaperList[i].ContentTitle != "") {
                        if ($scope.ModerateWallpaperList[i].ProperyTitle != "") {
                            if ($scope.ModerateWallpaperList[i].AddedOn != "") {
                                $scope.ModerateWallpaperList[i].IsEditable = false;
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
        if ($scope.InactiveWallpaperShow) {
            for (var i in $scope.InActiveWallpaperList) {
                if ($scope.InActiveWallpaperList[i].UniqueId == id) {
                    if ($scope.InActiveWallpaperList[i].ContentTitle != "") {
                        if ($scope.InActiveWallpaperList[i].ProperyTitle != "") {
                            if ($scope.InActiveWallpaperList[i].ExpiredOn != "") {
                                if (new Date($scope.InActiveWallpaperList[i].ExpiredOn) > new Date()) {
                                    $scope.InActiveWallpaperList[i].IsEditable = false;
                                }
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
    }

    $scope.DeleteWallpaper = function (id) {
        //ngProgress.start();
        if (confirm("Are you sure want to delete this Content?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/Deletecontentcatalog',
                data: { 'cm_id': id },
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Delete") {
                    if ($scope.SelectedContentStatus == 1) {
                        for (var i in $scope.FilterPendingWallpaperList) {
                            if ($scope.FilterPendingWallpaperList[i].cm_id == id) {
                                $scope.FilterPendingWallpaperList.splice(i, 1);
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        for (var i in $scope.FilterModerateWallpaperList) {
                            if ($scope.FilterModerateWallpaperList[i].cm_id == id) {
                                $scope.FilterModerateWallpaperList.splice(i, 1);
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        for (var i in $scope.FilterPublishedWallpaperList) {
                            if ($scope.FilterPublishedWallpaperList[i].cm_id == id) {
                                $scope.FilterPublishedWallpaperList.splice(i, 1);
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        for (var i in $scope.FilterInActiveWallpaperList) {
                            if ($scope.FilterInActiveWallpaperList[i].cm_id == id) {
                                $scope.FilterInActiveWallpaperList.splice(i, 1);
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_id == id) {
                            $scope.ContentMetadata[i].cm_state = 7;
                            $scope.ContentMetadata[i].cm_modified_by = datas.Modify_By;
                            $scope.ContentMetadata[i].cm_modified_on = setDate(datas.Modify_On);
                        }
                    }
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }

    $scope.bullseyeClick = function (id) {
        if ($scope.InactiveWallpaperShow) {
            for (var i in $scope.FilterInActiveWallpaperList) {
                if ($scope.FilterInActiveWallpaperList[i].cm_id == id) {
                    if ($scope.FilterInActiveWallpaperList[i].buttoncolor != "red") {
                        //if (new Date($scope.FilterInActiveWallpaperList[i].cm_expires_on) > new Date()) {
                        if (confirm("Are you sure want to reactive this Content?")) {
                            var get_request = $http({
                                method: "Post",
                                url: 'contentcatalog/InactiveWallpaper',
                                data: { "cm_id": id },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            get_request.success(function (datas) {
                                if (datas.Result == "Inactive Wallpaper") {
                                    for (var i in $scope.FilterInActiveWallpaperList) {
                                        if ($scope.FilterInActiveWallpaperList[i].cm_id == id) {
                                            $scope.FilterInActiveWallpaperList.splice(i, 1);
                                        }
                                    }

                                    for (var i in $scope.ContentMetadata) {
                                        if ($scope.ContentMetadata[i].cm_id == id) {
                                            $scope.ContentMetadata[i].cm_state = 4;
                                            //if ($scope.ContentMetadata[i].cm_is_active == 1) {
                                            //   // $scope.ContentMetadata[i].cm_is_active = 0;
                                            //}
                                            //else {
                                            //   // $scope.ContentMetadata[i].cm_is_active = 1;
                                            //}
                                        }
                                    }
                                }
                            });
                            get_request.error(function (datas, status, headers, config) {
                                if (datas != undefined) {
                                    //ngProgress.complete();
                                    $scope.errorvisible = true;
                                    $scope.error = datas.substring(1, datas.length - 1);
                                }
                            });
                        }
                    }
                    else {
                        //alert("Metadata already expired.")
                    }
                }
            }
        }
    }

    $scope.BlockWallpaper = function (id) {
        if (confirm("Are you sure want to block this Content?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/BlockWallpaper',
                data: { "cm_id": id },
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Publish") {
                    for (var i in $scope.FilterPublishedWallpaperList) {
                        if ($scope.FilterPublishedWallpaperList[i].cm_id == id) {
                            $scope.FilterPublishedWallpaperList.splice(i, 1);
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_id == id) {
                            $scope.ContentMetadata[i].cm_state = 6;
                            $scope.ContentMetadata[i].buttoncolor = ButtonColor($scope.UserRole, $scope.Vendor, $scope.Property, $scope.ContentMetadata[i].cm_expires_on, $scope.ContentMetadata[i].cm_state, $scope.ContentMetadata[i].cm_vendor, $scope.ContentMetadata[i].cm_property_id);
                            $scope.ContentMetadata[i].status = GetStatus($scope.UserRole, $scope.Vendor, $scope.Property, $scope.ContentMetadata[i].cm_expires_on, data[i].cm_state, $scope.ContentMetadata[i].cm_vendor, $scope.ContentMetadata[i].cm_property_id);
                            $scope.ContentMetadata[i].IsEditVisible = IsEditVisible($scope.UserRole, $scope.Vendor, $scope.Property, $scope.ContentMetadata[i].cm_expires_on, $scope.ContentMetadata[i].cm_state, $scope.ContentMetadata[i].cm_vendor, $scope.ContentMetadata[i].cm_property_id);
                        }
                    }
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }

    $scope.CuurentPageArray = [];
    $scope.PublishModerateList = function () {
        var begin = ($scope.ModeratecurrentPage * $scope.ModeratepageSize), end = begin + $scope.ModeratepageSize;
        $scope.CuurentPageArray = $scope.FilterModerateWallpaperList.slice(begin, end);
        if (confirm("Are you sure want to publish all Contents?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/PublishAllModerator',
                data: $scope.CuurentPageArray,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Moderate") {
                    for (var i in $scope.CuurentPageArray) {
                        for (var j in $scope.FilterModerateWallpaperList) {
                            if ($scope.CuurentPageArray[i].cm_id == $scope.FilterModerateWallpaperList[j].cm_id) {
                                $scope.FilterModerateWallpaperList.splice(j, 1);
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        for (var j in $scope.CuurentPageArray) {
                            if ($scope.ContentMetadata[i].cm_id == $scope.CuurentPageArray[j].cm_id) {
                                $scope.ContentMetadata[i].cm_state = 4;
                            }
                        }

                    }
                    //$scope.FilterModerateWallpaperList = [];
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }

    }

    $scope.downloadFile = function (id) {

        //var get_request = $http({
        //    method: "GET",
        //    url: 'downloadFile/getDownloadedFile',
        //    data: { 'cm_id': id },
        //    headers: { 'Content-Type': 'application/json' }
        //});

        //get_request.success(function (data, status, headers, config) {
        //    var element = angular.element('<a/>');
        //    element.attr({
        //        href: 'data:attachment/text;charset=utf-8,' + encodeURI(data),
        //        target: '_self',
        //        download: '3_1280x720.gif'
        //    })[0].click();
        //});

        //get_request.error(function (data, status, headers, config) {

        //});
    }
    $scope.PublishAllList = function () {
        if (confirm("Are you sure want to publish all Contents?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/PublishAllModerator',
                data: $scope.FilterModerateWallpaperList,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Moderate") {
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == 3) {
                            $scope.ContentMetadata[i].cm_state = 4;
                        }
                    }
                    $scope.FilterModerateWallpaperList = [];
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }

    $scope.ResetList = function () {
        for (var i in $scope.FilterModerateWallpaperList) {
            $scope.FilterModerateWallpaperList[i].SelectedPublishReject = 3;
            //$scope.SubmitEnable = false;
            $scope.SelectedPublishArray = [];
            $scope.newArray = [];
        }
    }

    $scope.newArray = [];
    $scope.PublishRejectChange = function (id, selected) {
        //$scope.SubmitEnable = true;
        if ($scope.SelectedPublishArray.length > 0) {
            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_id == id) {
                    if (parseInt(selected) == 3) {
                        $scope.SelectedPublishArray.splice(i, 1);
                    }
                    else {
                        $scope.SelectedPublishArray[i].cm_state = parseInt(selected);
                    }
                }
                else {
                    if ($scope.newArray.indexOf(id) == -1) {
                        $scope.newArray.push(id);
                        $scope.SelectedPublishArray.push({ 'cm_id': id, 'cm_state': parseInt(selected), 'Comment': null });
                    }
                }
            }
        }
        else {
            $scope.newArray.push(id);
            $scope.SelectedPublishArray.push({ 'cm_id': id, 'cm_state': parseInt(selected) });
        }
    }
    $scope.CommentTextValue = "";
    $scope.CommentPopUpShow = false;

    $scope.SubmitModerateList = function () {
        //if ($scope.SubmitEnable == true) {
        var flag = true
        if ($scope.SelectedPublishArray.length > 0) {
            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_state == 5) {
                    $scope.CommentPopUpShow = true;
                    flag = false;
                }
            }
            if (flag) {
                if (confirm("Are you sure want to submit all changes?")) {
                    var get_request = $http({
                        method: "Post",
                        url: 'contentcatalog/SubmitModerator',
                        data: $scope.SelectedPublishArray,
                        headers: { 'Content-Type': 'application/json' }
                    });
                    get_request.success(function (datas) {
                        if (datas.Result == "Update Moderate") {
                            for (var i in $scope.FilterModerateWallpaperList) {
                                for (var j in $scope.SelectedPublishArray) {
                                    if ($scope.SelectedPublishArray[j].cm_state != 3) {
                                        if ($scope.FilterModerateWallpaperList[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                            $scope.FilterModerateWallpaperList.splice(i, 1);
                                        }
                                    }
                                }
                            }

                            for (var i in $scope.ContentMetadata) {
                                for (var j in $scope.SelectedPublishArray) {
                                    if ($scope.ContentMetadata[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                        if ($scope.SelectedPublishArray[j].cm_state == 4) {
                                            $scope.ContentMetadata[i].cm_state = 4;
                                        }
                                        if ($scope.SelectedPublishArray[j].cm_state == 5) {
                                            $scope.ContentMetadata[i].cm_state = 5;
                                        }
                                    }
                                }
                            }
                            $scope.SelectedPublishArray = [];
                            $scope.newArray = [];
                        }
                    });
                    get_request.error(function (datas, status, headers, config) {
                        if (datas != undefined) {
                            //ngProgress.complete();
                            $scope.errorvisible = true;
                            $scope.error = datas.substring(1, datas.length - 1);
                        }
                    });
                }
            }
        }

        //}
        //}
        //else {
        //    if (confirm("Are you sure want to submit all changes?")) {

        //    }
        //}
    }

    $scope.SaveComment = function () {
        $scope.CommentPopUpShow = false;

        if (confirm("Are you sure want to submit all changes?")) {

            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_state == 5) {
                    if ($scope.CommentTextValue != "") {
                        $scope.SelectedPublishArray[i].Comment = $scope.CommentTextValue;
                    }
                    else {
                        $scope.SelectedPublishArray[i].Comment = null;
                    }
                }
            }

            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/SubmitModerator',
                data: $scope.SelectedPublishArray,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Moderate") {
                    for (var i in $scope.FilterModerateWallpaperList) {
                        for (var j in $scope.SelectedPublishArray) {
                            if ($scope.SelectedPublishArray[j].cm_state != 3) {
                                if ($scope.FilterModerateWallpaperList[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                    $scope.FilterModerateWallpaperList.splice(i, 1);
                                }
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        for (var j in $scope.SelectedPublishArray) {
                            if ($scope.ContentMetadata[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                if ($scope.SelectedPublishArray[j].cm_state == 4) {
                                    $scope.ContentMetadata[i].cm_state = 4;
                                }
                                if ($scope.SelectedPublishArray[j].cm_state == 5) {
                                    $scope.ContentMetadata[i].cm_state = 5;
                                    $scope.ContentMetadata[i].cm_comment = $scope.CommentTextValue;;
                                }
                            }
                        }
                    }
                    $scope.SelectedPublishArray = [];
                    $scope.newArray = [];
                    $scope.CommentTextValue = "";
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
        else {
            $scope.CommentTextValue = "";
        }
    }

    $scope.CloseComment = function () {
        $scope.CommentPopUpShow = false;
        $scope.CommentTextValue = "";
    }
    $scope.ModeratorPrevClick = function () {
        if ($scope.SelectedPublishArray.length > 0) {
            if (confirm("Are you Sure Want to go Prev page?")) {
                $scope.ModeratecurrentPage = $scope.ModeratecurrentPage - 1;
                $scope.SelectedPublishArray = [];
                $scope.newArray = [];
            }
        }
        else {
            $scope.ModeratecurrentPage = $scope.ModeratecurrentPage - 1;
        }
    }

    $scope.ModeratorNextClick = function () {
        if ($scope.SelectedPublishArray.length > 0) {
            if (confirm("Are you Sure Want to go Next page?")) {
                $scope.ModeratecurrentPage = $scope.ModeratecurrentPage + 1;
                $scope.SelectedPublishArray = [];
                $scope.newArray = [];
            }
        }
        else {
            $scope.ModeratecurrentPage = $scope.ModeratecurrentPage + 1;
        }
    }

    $scope.SearchTextValue = "";
    $scope.FilterContent = function () {
        content_catalog_change();
    }

    $scope.getSelectedType = function () {
        var type = '';
        $scope.Type.forEach(function (data) {
            if (data.cd_id == $scope.SelectedType && $scope.SelectedType != 0) {
                type = data.cd_name;
            }
        });
        return (type) ? type : '';
    }
    $scope.exportCUPWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        ////console.log($scope.SelectedSearchContentBy);
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterPendingWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportCUPWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'fileUploadPending' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportInPWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterInProgressList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportInPWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'inProcess' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportRTMWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 189) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterModerateWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportRTMWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'readyToModerate' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportPubWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterPublishedWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportPubWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'published' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportRejWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterRejectWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportRejWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'rejected' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportInaWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterInActiveWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportInaWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'inactive' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportDelWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterDeletedWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportDelWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'deleted' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    function content_catalog_change() {
        if ($scope.SelectedContentStatus != 0) {
            if ($scope.SelectedVendor != 0) {
                if ($scope.SelectedType != 0) {
                    // vendor select & type also Select
                    if ($scope.SelectedContentStatus == 1) {
                        $scope.PendingWallpaperShow = true;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPendingWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 2) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = true;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInProgressList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = true;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterModerateWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = true;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPublishedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 5) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = true;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterRejectWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = true;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInActiveWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = true;
                        $scope.FilterDeletedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                }
                else {
                    // vendor select but type not selected
                    if ($scope.SelectedContentStatus == 1) {
                        $scope.PendingWallpaperShow = true;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPendingWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 2) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = true;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInProgressList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = true;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterModerateWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = true;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPublishedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 5) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = true;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterRejectWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = true;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInActiveWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = true;
                        $scope.FilterDeletedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                }
            }
            else {
                //vendor not selected but Type Selected
                if ($scope.SelectedType != 0) {
                    if ($scope.SelectedContentStatus == 1) {
                        $scope.PendingWallpaperShow = true;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPendingWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 2) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = true;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInProgressList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = true;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterModerateWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = true;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPublishedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 5) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = true;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterRejectWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = true;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInActiveWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = true;
                        $scope.FilterDeletedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                }
                else {
                    //vendor & Type Not Selected
                    if ($scope.SelectedContentStatus == 1) {
                        $scope.PendingWallpaperShow = true;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPendingWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 2) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = true;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInProgressList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = true;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterModerateWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = true;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPublishedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 5) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = true;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterRejectWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = true;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInActiveWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = true;
                        $scope.FilterDeletedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                }
            }
        }
        else {
            $scope.PendingWallpaperShow = false;
            $scope.InProgressShow = false;
            $scope.ModerateWallpaperShow = false;
            $scope.PublishedWallpaperShow = false;
            $scope.RejectedWallpaperShow = false;
            $scope.InactiveWallpaperShow = false;
            $scope.DeletedWallpaperShow = false;
        }
    }
});

myApp.controller('content-catalog-search-Ctrl', function ($scope, $http, $routeParams, $window, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addeditcontentcatelog').addClass('active');
    $('#contentcatelog').addClass('active');

    $scope.errorvisible = false;
    $scope.error;

    $scope.SelectedContentStatus = 0;
    $scope.SelectedVendor = 0;
    $scope.SelectedType = 0;
    $scope.ContentStatus = [];
    $scope.Vendor = [];
    $scope.Property = [];
    $scope.UserRole = "";
    $scope.Type = [];
    $scope.SearchContentBy = [];
    $scope.SelectedPublishArray = [];
    $scope.ContentMetadata = [];
    $scope.IsEditPermission = false;


    function ButtonColor(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {

        var status = "chartreuse";
        var flag = false;
        if (cm_state == 7 || cm_state == 5) {
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            status = "red";
                            flag = true;
                        }
                    }
                    else {
                        status = "red";
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            status = "red";
                            flag = true;
                        }
                    }
                    else {
                        status = "red";
                        flag = true;
                    }
                }
            }
        }
        if (flag) {
            return status;
        }
        else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
            return "red";
        }
        else {
            return status;
        }
    }
    function IsEditVisible(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {
        if (UserRole == "Content Manager") {
            var flag = false;
            if (cm_state == 7 || cm_state == 5) {
            }
            else {
                for (var k in Vendors) {
                    if (Vendors[k].vd_id == cm_vendor) {
                        if (Vendors[k].vd_is_active == 1) {
                            if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                                flag = true;
                            }
                        }
                        else {
                            flag = true;
                        }
                    }
                }
                for (var k in Property) {
                    if (Property[k].cm_id == cm_property_id) {
                        if (Property[k].cm_is_active == 1) {
                            if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                                flag = true;
                            }
                        }
                        else {
                            flag = true;
                        }
                    }
                }
            }
            if (flag) {
                return !flag;
            }
            else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
                return true;
            }
            else {
                return false;
            }
        }
        else {
            return true;
        }
    }
    function GetStatus(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {

        var status = "green";
        var flag = false;
        if (cm_state == 7 || cm_state == 5) {
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            status = "Vendor Expired";
                            flag = true;
                        }
                    }
                    else {
                        status = "Vendor Blocked";
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            status = "Property Expired";
                            flag = true;
                        }
                    }
                    else {
                        status = "Property Blocked";
                        flag = true;
                    }
                }
            }
        }
        if (flag) {
            return status;
        }
        else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
            return "Metadata Expired";
        }
        else {
            return status;
        }
    }
    function GetState(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {
        var status = cm_state;
        var flag = false;
        if (cm_state == 6 || cm_state == 7 || cm_state == 5) {
            return cm_state;
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            cm_state = 6;
                            flag = true;
                        }
                    }
                    else {
                        cm_state = 6;
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            cm_state = 6;
                            flag = true;
                        }
                    }
                    else {
                        cm_state = 6;
                        flag = true;
                    }
                }
            }
            if (status == 6 && !flag) {
            }
            else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
                cm_state = 6;
            }
            return cm_state;
        }


    }
    function GetContentData(data, Vendors, Property, UserRole) {
        var NewArray = [];
        for (var i in data) {
            var val = {
                celebrity_cd_id: data[i].celebrity_cd_id,
                celebrity_cd_name: data[i].celebrity_cd_name,
                celebrity_cmd_id: data[i].celebrity_cmd_id,
                celebrity_group: data[i].celebrity_group,
                cm_celebrity: data[i].cm_celebrity,
                cm_comment: data[i].cm_comment,
                cm_content_duration: data[i].cm_content_duration,
                cm_content_quality: data[i].cm_content_quality,
                cm_content_type: data[i].cm_content_type,
                cm_cp_content_id: data[i].cm_cp_content_id,
                cm_created_by: data[i].cm_created_by,
                cm_created_on: data[i].cm_created_on,
                cm_display_title: data[i].cm_display_title,
                cm_expires_on: setDate(data[i].cm_expires_on),
                cm_festival_occasion: data[i].cm_festival_occasion,
                cm_genre: data[i].cm_genre,
                cm_id: data[i].cm_id,
                cm_instruments: data[i].cm_instruments,
                cm_is_active: data[i].cm_is_active,
                cm_is_app_store_purchase: data[i].cm_is_app_store_purchase,
                cm_key_words: data[i].cm_key_words,
                cm_language: data[i].cm_language,
                cm_location: data[i].cm_location,
                cm_long_description: data[i].cm_long_description,
                cm_mode: data[i].cm_mode,
                cm_modified_by: data[i].cm_modified_by,
                cm_modified_on: setDate(data[i].cm_modified_on),
                cm_mood: data[i].cm_mood,
                cm_music_director: data[i].cm_music_director,
                cm_nudity: data[i].cm_nudity,
                cm_parental_advisory: data[i].cm_parental_advisory,
                cm_property_id: data[i].cm_property_id,
                cm_protographer: data[i].cm_protographer,
                cm_r_group_id: data[i].cm_r_group_id,
                cm_raag_tal: data[i].cm_raag_tal,
                cm_rank: data[i].cm_rank,
                cm_release_year: data[i].cm_release_year,
                cm_religion: data[i].cm_religion,
                cm_short_desc: data[i].cm_short_desc,
                cm_signature: data[i].cm_signature,
                cm_singer: data[i].cm_singer,
                cm_starts_from: setDate(data[i].cm_starts_from),
                cm_sub_content_type: data[i].cm_sub_content_type,
                cm_sub_genre: data[i].cm_sub_genre,
                cm_thumb_url: data[i].cm_thumb_url,
                cm_title: data[i].cm_title,
                cm_vendor: data[i].cm_vendor,
                festival_id: data[i].festival_id,
                festival_name: data[i].festival_name,
                genre_id: data[i].genre_id,
                genre_name: data[i].genre_name,
                instruments_cd_id: data[i].instruments_cd_id,
                instruments_cd_name: data[i].instruments_cd_name,
                instruments_cmd_id: data[i].instruments_cmd_id,
                instruments_group: data[i].instruments_group,
                language_id: data[i].language_id,
                language_name: data[i].language_name,
                mood_id: data[i].mood_id,
                mood_name: data[i].mood_name,
                propertyId: data[i].propertyId,
                propertydisplayname: data[i].propertydisplayname,
                propertyname: data[i].propertyname,
                raagtaal_cd_id: data[i].raagtaal_cd_id,
                raagtaal_cd_name: data[i].raagtaal_cd_name,
                raagtaal_cmd_id: data[i].raagtaal_cmd_id,
                raagtaal_group: data[i].raagtaal_group,
                religion_id: data[i].religion_id,
                religion_name: data[i].religion_name,
                subgenre_id: data[i].subgenre_id,
                subgenre_name: data[i].subgenre_name,
                cm_state: GetState(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id),
                buttoncolor: ButtonColor(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id),
                status: GetStatus(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id),
                IsEditVisible: IsEditVisible(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id)
            }
            NewArray.push(val);
        }
        //console.log(NewArray);
        return NewArray;
    }
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');
    var get_request = $http({
        method: "Get",
        url: 'contentcatalog/GetContentCatalogData',
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        $scope.IsEditPermission = datas.IsEdit;
        $scope.ContentStatus.unshift({ cd_id: 0, cd_name: "Select Status" });
        $scope.Vendor.unshift({ vd_id: 0, vd_name: "Select Vendor" });
        $scope.Type.unshift({ cd_id: 0, cd_name: "Select Type" });

        for (var i in datas.Catalogdata) {
            if (datas.Catalogdata[i].cd_cm_id == 1) {
                $scope.ContentStatus.push(datas.Catalogdata[i]);
            }
            if (datas.Catalogdata[i].cd_cm_id == 2) {
                $scope.Type.push(datas.Catalogdata[i]);
            }
            if (datas.Catalogdata[i].cd_cm_id == 19) {
                $scope.SearchContentBy.push(datas.Catalogdata[i]);
            }
        }


        $scope.UserRole = datas.UserRole;
        for (var i in datas.VendorData) {
            $scope.Vendor.push(datas.VendorData[i]);
        }
        $scope.Property = angular.copy(datas.PropertyData);
        $scope.ContentMetadata = GetContentData(angular.copy(datas.ContentMetadata), $scope.Vendor, $scope.Property, datas.UserRole);

        //Show Selected DropDown Data For On Load..

        $scope.SelectedContentStatus = parseInt($routeParams.status);
        $scope.SelectedVendor = parseInt($routeParams.vendor);
        $scope.SelectedType = parseInt($routeParams.type);

        //bind the data in grid on load event
        content_catalog_change();
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.PendingWallpaperShow = false;
    $scope.InProgressShow = false;
    $scope.ModerateWallpaperShow = false;
    $scope.PublishedWallpaperShow = false;
    $scope.RejectedWallpaperShow = false;
    $scope.InactiveWallpaperShow = false;
    $scope.DeletedWallpaperShow = false;

    $scope.FilterPendingWallpaperList = [];
    $scope.FilterInProgressList = [];
    $scope.FilterDeletedWallpaperList = [];
    $scope.FilterRejectWallpaperList = [];
    $scope.FilterPublishedWallpaperList = [];
    $scope.FilterInActiveWallpaperList = [];
    $scope.FilterModerateWallpaperList = [];

    $scope.ContentMetadataList = [];

    $scope.SelectedSearchContentBy = 0;
    $scope.SelectedPublishReject = "";
    $scope.SelectedUniqueId = "";
    $scope.SearchContent = "";

    //Pending wallpaper pagging
    $scope.PendingcurrentPage = 0;
    $scope.PendingpageSize = 50;
    //Inprocess wallpaper pagging
    $scope.InprocesscurrentPage = 0;
    $scope.InprocesspageSize = 50;
    //Moderate wallpaper pagging
    $scope.ModeratecurrentPage = 0;
    $scope.ModeratepageSize = 50;
    //Published wallpaper pagging
    $scope.PublishedcurrentPage = 0;
    $scope.PublishedpageSize = 50;
    //Rejected wallpaper pagging
    $scope.RejectedcurrentPage = 0;
    $scope.RejectedpageSize = 50;
    //Inactive wallpaper pagging
    $scope.InactivecurrentPage = 0;
    $scope.InactivepageSize = 50;
    //Deleted wallpaper pagging
    $scope.DeletedcurrentPage = 0;
    $scope.DeletedpageSize = 50;

    $scope.Validation = false;

    $scope.ContentStatusChange = function () {
        $scope.Validation = false;
        content_catalog_change();
    }

    $scope.VendorChange = function () {
        $scope.Validation = false;
        content_catalog_change();
    }

    $scope.TypeChange = function () {
        $scope.Validation = false;
        content_catalog_change();
    }

    $scope.EditWallpaper = function (id) {
        for (var i in $scope.ContentMetadata) {
            if ($scope.ContentMetadata[i].cm_id == id) {
                if ($scope.ContentMetadata[i].cm_content_type == 8) {
                    $window.location.href = "#editwallpaper/" + id;
                }
                if ($scope.ContentMetadata[i].cm_content_type == 9) {
                    $window.location.href = "#editvideo/" + id;
                }
                if ($scope.ContentMetadata[i].cm_content_type == 10) {
                    $window.location.href = "#editaudio/" + id;
                }
                if ($scope.ContentMetadata[i].cm_content_type == 11) {
                    $window.location.href = "#editapps-games/" + id;
                }
            }
        }
    }

    $scope.SaveWallpaper = function (id) {
        $scope.Validation = false;
        if ($scope.PendingWallpaperShow) {
            for (var i in $scope.PendingWallpaperList) {
                if ($scope.PendingWallpaperList[i].UniqueId == id) {
                    if ($scope.PendingWallpaperList[i].ContentTitle != "") {
                        if ($scope.PendingWallpaperList[i].ProperyTitle != "") {
                            if ($scope.PendingWallpaperList[i].AddedOn != "") {
                                $scope.PendingWallpaperList[i].IsEditable = false;
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
        if ($scope.PublishedWallpaperShow) {
            for (var i in $scope.PublishedWallpaperList) {
                if ($scope.PublishedWallpaperList[i].UniqueId == id) {
                    if ($scope.PublishedWallpaperList[i].ContentTitle != "") {
                        if ($scope.PublishedWallpaperList[i].ProperyTitle != "") {
                            if ($scope.PublishedWallpaperList[i].AddedOn != "") {
                                $scope.PublishedWallpaperList[i].IsEditable = false;
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
        if ($scope.ModerateWallpaperShow) {
            for (var i in $scope.ModerateWallpaperList) {
                if ($scope.ModerateWallpaperList[i].UniqueId == id) {
                    if ($scope.ModerateWallpaperList[i].ContentTitle != "") {
                        if ($scope.ModerateWallpaperList[i].ProperyTitle != "") {
                            if ($scope.ModerateWallpaperList[i].AddedOn != "") {
                                $scope.ModerateWallpaperList[i].IsEditable = false;
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
        if ($scope.InactiveWallpaperShow) {
            for (var i in $scope.InActiveWallpaperList) {
                if ($scope.InActiveWallpaperList[i].UniqueId == id) {
                    if ($scope.InActiveWallpaperList[i].ContentTitle != "") {
                        if ($scope.InActiveWallpaperList[i].ProperyTitle != "") {
                            if ($scope.InActiveWallpaperList[i].ExpiredOn != "") {
                                if (new Date($scope.InActiveWallpaperList[i].ExpiredOn) > new Date()) {
                                    $scope.InActiveWallpaperList[i].IsEditable = false;
                                }
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
    }

    $scope.DeleteWallpaper = function (id) {
        //ngProgress.start();
        if (confirm("Are you sure want to delete this Content?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/Deletecontentcatalog',
                data: { 'cm_id': id },
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Delete") {
                    if ($scope.SelectedContentStatus == 1) {
                        for (var i in $scope.FilterPendingWallpaperList) {
                            if ($scope.FilterPendingWallpaperList[i].cm_id == id) {
                                $scope.FilterPendingWallpaperList.splice(i, 1);
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        for (var i in $scope.FilterModerateWallpaperList) {
                            if ($scope.FilterModerateWallpaperList[i].cm_id == id) {
                                $scope.FilterModerateWallpaperList.splice(i, 1);
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        for (var i in $scope.FilterPublishedWallpaperList) {
                            if ($scope.FilterPublishedWallpaperList[i].cm_id == id) {
                                $scope.FilterPublishedWallpaperList.splice(i, 1);
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        for (var i in $scope.FilterInActiveWallpaperList) {
                            if ($scope.FilterInActiveWallpaperList[i].cm_id == id) {
                                $scope.FilterInActiveWallpaperList.splice(i, 1);
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_id == id) {
                            $scope.ContentMetadata[i].cm_state = 7;
                            $scope.ContentMetadata[i].cm_modified_by = datas.Modify_By;
                            $scope.ContentMetadata[i].cm_modified_on = setDate(datas.Modify_On);
                        }
                    }
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }

    $scope.bullseyeClick = function (id) {
        if ($scope.InactiveWallpaperShow) {
            for (var i in $scope.FilterInActiveWallpaperList) {
                if ($scope.FilterInActiveWallpaperList[i].cm_id == id) {
                    if ($scope.FilterInActiveWallpaperList[i].buttoncolor != "red") {
                        //if (new Date($scope.FilterInActiveWallpaperList[i].cm_expires_on) > new Date()) {
                        if (confirm("Are you sure want to reactive this Content?")) {
                            var get_request = $http({
                                method: "Post",
                                url: 'contentcatalog/InactiveWallpaper',
                                data: { "cm_id": id },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            get_request.success(function (datas) {
                                if (datas.Result == "Inactive Wallpaper") {
                                    for (var i in $scope.FilterInActiveWallpaperList) {
                                        if ($scope.FilterInActiveWallpaperList[i].cm_id == id) {
                                            $scope.FilterInActiveWallpaperList.splice(i, 1);
                                        }
                                    }

                                    for (var i in $scope.ContentMetadata) {
                                        if ($scope.ContentMetadata[i].cm_id == id) {
                                            $scope.ContentMetadata[i].cm_state = 4;
                                            //if ($scope.ContentMetadata[i].cm_is_active == 1) {
                                            //   // $scope.ContentMetadata[i].cm_is_active = 0;
                                            //}
                                            //else {
                                            //   // $scope.ContentMetadata[i].cm_is_active = 1;
                                            //}
                                        }
                                    }
                                }
                            });
                            get_request.error(function (datas, status, headers, config) {
                                if (datas != undefined) {
                                    //ngProgress.complete();
                                    $scope.errorvisible = true;
                                    $scope.error = datas.substring(1, datas.length - 1);
                                }
                            });
                        }
                    }
                    else {
                        //alert("Metadata already expired.")
                    }
                }
            }
        }
    }

    $scope.BlockWallpaper = function (id) {
        if (confirm("Are you sure want to block this Content?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/BlockWallpaper',
                data: { "cm_id": id },
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Publish") {
                    for (var i in $scope.FilterPublishedWallpaperList) {
                        if ($scope.FilterPublishedWallpaperList[i].cm_id == id) {
                            $scope.FilterPublishedWallpaperList.splice(i, 1);
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_id == id) {
                            $scope.ContentMetadata[i].cm_state = 6;
                            $scope.ContentMetadata[i].buttoncolor = ButtonColor($scope.UserRole, $scope.Vendor, $scope.Property, $scope.ContentMetadata[i].cm_expires_on, $scope.ContentMetadata[i].cm_state, $scope.ContentMetadata[i].cm_vendor, $scope.ContentMetadata[i].cm_property_id);
                            $scope.ContentMetadata[i].status = GetStatus($scope.UserRole, $scope.Vendor, $scope.Property, $scope.ContentMetadata[i].cm_expires_on, data[i].cm_state, $scope.ContentMetadata[i].cm_vendor, $scope.ContentMetadata[i].cm_property_id);
                            $scope.ContentMetadata[i].IsEditVisible = IsEditVisible($scope.UserRole, $scope.Vendor, $scope.Property, $scope.ContentMetadata[i].cm_expires_on, $scope.ContentMetadata[i].cm_state, $scope.ContentMetadata[i].cm_vendor, $scope.ContentMetadata[i].cm_property_id);
                        }
                    }
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }
    $scope.CuurentPageArray = [];
    $scope.PublishModerateList = function () {
        var begin = ($scope.ModeratecurrentPage * $scope.ModeratepageSize), end = begin + $scope.ModeratepageSize;
        $scope.CuurentPageArray = $scope.FilterModerateWallpaperList.slice(begin, end);
        if (confirm("Are you sure want to publish all Contents?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/PublishAllModerator',
                data: $scope.CuurentPageArray,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Moderate") {
                    for (var i in $scope.CuurentPageArray) {
                        for (var j in $scope.FilterModerateWallpaperList) {
                            if ($scope.CuurentPageArray[i].cm_id == $scope.FilterModerateWallpaperList[j].cm_id) {
                                $scope.FilterModerateWallpaperList.splice(j, 1);
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        for (var j in $scope.CuurentPageArray) {
                            if ($scope.ContentMetadata[i].cm_id == $scope.CuurentPageArray[j].cm_id) {
                                $scope.ContentMetadata[i].cm_state = 4;
                            }
                        }

                    }
                    //$scope.FilterModerateWallpaperList = [];
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }

    }

    $scope.downloadFile = function (id) {

        //var get_request = $http({
        //    method: "GET",
        //    url: 'downloadFile/getDownloadedFile',
        //    data: { 'cm_id': id },
        //    headers: { 'Content-Type': 'application/json' }
        //});

        //get_request.success(function (data, status, headers, config) {
        //    var element = angular.element('<a/>');
        //    element.attr({
        //        href: 'data:attachment/text;charset=utf-8,' + encodeURI(data),
        //        target: '_self',
        //        download: '3_1280x720.gif'
        //    })[0].click();
        //});

        //get_request.error(function (data, status, headers, config) {

        //});
    }
    $scope.PublishAllList = function () {
        if (confirm("Are you sure want to publish all Contents?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/PublishAllModerator',
                data: $scope.FilterModerateWallpaperList,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Moderate") {
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == 3) {
                            $scope.ContentMetadata[i].cm_state = 4;
                        }
                    }
                    $scope.FilterModerateWallpaperList = [];
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }

    $scope.ResetList = function () {
        for (var i in $scope.FilterModerateWallpaperList) {
            $scope.FilterModerateWallpaperList[i].SelectedPublishReject = 3;
            //$scope.SubmitEnable = false;
            $scope.SelectedPublishArray = [];
            $scope.newArray = [];
        }
    }

    $scope.newArray = [];
    $scope.PublishRejectChange = function (id, selected) {
        //$scope.SubmitEnable = true;
        if ($scope.SelectedPublishArray.length > 0) {
            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_id == id) {
                    if (parseInt(selected) == 3) {
                        $scope.SelectedPublishArray.splice(i, 1);
                    }
                    else {
                        $scope.SelectedPublishArray[i].cm_state = parseInt(selected);
                    }
                }
                else {
                    if ($scope.newArray.indexOf(id) == -1) {
                        $scope.newArray.push(id);
                        $scope.SelectedPublishArray.push({ 'cm_id': id, 'cm_state': parseInt(selected), 'Comment': null });
                    }
                }
            }
        }
        else {
            $scope.newArray.push(id);
            $scope.SelectedPublishArray.push({ 'cm_id': id, 'cm_state': parseInt(selected) });
        }
    }
    $scope.CommentTextValue = "";
    $scope.CommentPopUpShow = false;
    $scope.SubmitModerateList = function () {
        //if ($scope.SubmitEnable == true) {
        var flag = true
        if ($scope.SelectedPublishArray.length > 0) {
            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_state == 5) {
                    $scope.CommentPopUpShow = true;
                    flag = false;
                }
            }
            if (flag) {
                if (confirm("Are you sure want to submit all changes?")) {
                    var get_request = $http({
                        method: "Post",
                        url: 'contentcatalog/SubmitModerator',
                        data: $scope.SelectedPublishArray,
                        headers: { 'Content-Type': 'application/json' }
                    });
                    get_request.success(function (datas) {
                        if (datas.Result == "Update Moderate") {
                            for (var i in $scope.FilterModerateWallpaperList) {
                                for (var j in $scope.SelectedPublishArray) {
                                    if ($scope.SelectedPublishArray[j].cm_state != 3) {
                                        if ($scope.FilterModerateWallpaperList[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                            $scope.FilterModerateWallpaperList.splice(i, 1);
                                        }
                                    }
                                }
                            }

                            for (var i in $scope.ContentMetadata) {
                                for (var j in $scope.SelectedPublishArray) {
                                    if ($scope.ContentMetadata[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                        if ($scope.SelectedPublishArray[j].cm_state == 4) {
                                            $scope.ContentMetadata[i].cm_state = 4;
                                        }
                                        if ($scope.SelectedPublishArray[j].cm_state == 5) {
                                            $scope.ContentMetadata[i].cm_state = 5;
                                        }
                                    }
                                }
                            }
                            $scope.SelectedPublishArray = [];
                            $scope.newArray = [];
                        }
                    });
                    get_request.error(function (datas, status, headers, config) {
                        if (datas != undefined) {
                            //ngProgress.complete();
                            $scope.errorvisible = true;
                            $scope.error = datas.substring(1, datas.length - 1);
                        }
                    });
                }
            }
        }

        //}
        //}
        //else {
        //    if (confirm("Are you sure want to submit all changes?")) {

        //    }
        //}
    }

    $scope.SaveComment = function () {
        $scope.CommentPopUpShow = false;

        if (confirm("Are you sure want to submit all changes?")) {

            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_state == 5) {
                    if ($scope.CommentTextValue != "") {
                        $scope.SelectedPublishArray[i].Comment = $scope.CommentTextValue;
                    }
                    else {
                        $scope.SelectedPublishArray[i].Comment = null;
                    }
                }
            }

            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/SubmitModerator',
                data: $scope.SelectedPublishArray,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Moderate") {
                    for (var i in $scope.FilterModerateWallpaperList) {
                        for (var j in $scope.SelectedPublishArray) {
                            if ($scope.SelectedPublishArray[j].cm_state != 3) {
                                if ($scope.FilterModerateWallpaperList[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                    $scope.FilterModerateWallpaperList.splice(i, 1);
                                }
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        for (var j in $scope.SelectedPublishArray) {
                            if ($scope.ContentMetadata[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                if ($scope.SelectedPublishArray[j].cm_state == 4) {
                                    $scope.ContentMetadata[i].cm_state = 4;
                                }
                                if ($scope.SelectedPublishArray[j].cm_state == 5) {
                                    $scope.ContentMetadata[i].cm_state = 5;
                                    $scope.ContentMetadata[i].cm_comment = $scope.CommentTextValue;;
                                }
                            }
                        }
                    }
                    $scope.SelectedPublishArray = [];
                    $scope.newArray = [];
                    $scope.CommentTextValue = "";
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
        else {
            $scope.CommentTextValue = "";
        }
    }

    $scope.CloseComment = function () {
        $scope.CommentPopUpShow = false;
        $scope.CommentTextValue = "";
    }
    $scope.ModeratorPrevClick = function () {
        if ($scope.SelectedPublishArray.length > 0) {
            if (confirm("Are you Sure Want to go Prev page?")) {
                $scope.ModeratecurrentPage = $scope.ModeratecurrentPage - 1;
                $scope.SelectedPublishArray = [];
                $scope.newArray = [];
            }
        }
        else {
            $scope.ModeratecurrentPage = $scope.ModeratecurrentPage - 1;
        }
    }

    $scope.ModeratorNextClick = function () {
        if ($scope.SelectedPublishArray.length > 0) {
            if (confirm("Are you Sure Want to go Next page?")) {
                $scope.ModeratecurrentPage = $scope.ModeratecurrentPage + 1;
                $scope.SelectedPublishArray = [];
                $scope.newArray = [];
            }
        }
        else {
            $scope.ModeratecurrentPage = $scope.ModeratecurrentPage + 1;
        }
    }

    $scope.SearchTextValue = "";
    $scope.FilterContent = function () {
        content_catalog_change();
    }

    $scope.BlockWallpaper = function (id) {
        if (confirm("Are you sure want to block this Content?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/BlockWallpaper',
                data: { "cm_id": id },
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Publish") {
                    for (var i in $scope.FilterPublishedWallpaperList) {
                        if ($scope.FilterPublishedWallpaperList[i].cm_id == id) {
                            $scope.FilterPublishedWallpaperList.splice(i, 1);
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_id == id) {
                            $scope.ContentMetadata[i].cm_state = 6;
                        }
                    }
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }

    $scope.getSelectedType = function () {
        var type = '';
        $scope.Type.forEach(function (data) {
            if (data.cd_id == $scope.SelectedType && $scope.SelectedType != 0) {
                type = data.cd_name;
            }
        });
        return (type) ? type : '';
    }
    $scope.exportCUPWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 183) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 184) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 185) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 186) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 187) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 188) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 189) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 190) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 191) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterPendingWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportCUPWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'fileUploadPending' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportInPWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 183) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 184) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 185) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 186) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 187) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 188) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 189) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 190) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 191) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterInProgressList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportInPWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'inProcess' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportRTMWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 183) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 184) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 185) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 186) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 187) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 188) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 189) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 190) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 191) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterModerateWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportRTMWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'readyToModerate' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportPubWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 183) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 184) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 185) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 186) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 187) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 188) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 189) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 190) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 191) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterPublishedWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportPubWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'published' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportRejWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 183) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 184) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 185) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 186) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 187) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 188) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 189) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 190) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 191) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterRejectWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportRejWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'rejected' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportInaWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 183) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 184) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 185) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 186) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 187) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 188) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 189) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 190) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 191) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterInActiveWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportInaWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'inactive' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportDelWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 183) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 184) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 185) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 186) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 187) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 188) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 189) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 190) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 191) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterDeletedWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportDelWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'deleted' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    function content_catalog_change() {
        if ($scope.SelectedContentStatus != 0) {
            if ($scope.SelectedVendor != 0) {
                if ($scope.SelectedType != 0) {
                    // vendor select & type also Select
                    if ($scope.SelectedContentStatus == 1) {
                        $scope.PendingWallpaperShow = true;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPendingWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 2) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = true;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInProgressList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = true;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterModerateWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = true;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPublishedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 5) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = true;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterRejectWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = true;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInActiveWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = true;
                        $scope.FilterDeletedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                }
                else {
                    // vendor select but type not selected
                    if ($scope.SelectedContentStatus == 1) {
                        $scope.PendingWallpaperShow = true;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPendingWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 2) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = true;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInProgressList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = true;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterModerateWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = true;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPublishedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 5) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = true;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterRejectWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = true;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInActiveWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = true;
                        $scope.FilterDeletedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus && $scope.ContentMetadata[i].cm_vendor == $scope.SelectedVendor) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                }
            }
            else {
                //vendor not selected but Type Selected
                if ($scope.SelectedType != 0) {
                    if ($scope.SelectedContentStatus == 1) {
                        $scope.PendingWallpaperShow = true;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPendingWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 2) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = true;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInProgressList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = true;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterModerateWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = true;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPublishedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 5) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = true;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterRejectWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = true;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInActiveWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = true;
                        $scope.FilterDeletedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                }
                else {
                    //vendor & Type Not Selected
                    if ($scope.SelectedContentStatus == 1) {
                        $scope.PendingWallpaperShow = true;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPendingWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 2) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = true;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInProgressList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = true;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterModerateWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterModerateWallpaperList.push({
                                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                    "SelectedPublishReject": 3,
                                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                                });
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = true;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterPublishedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 5) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = true;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterRejectWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = true;
                        $scope.DeletedWallpaperShow = false;
                        $scope.FilterInActiveWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                    else {
                        $scope.PendingWallpaperShow = false;
                        $scope.InProgressShow = false;
                        $scope.ModerateWallpaperShow = false;
                        $scope.PublishedWallpaperShow = false;
                        $scope.RejectedWallpaperShow = false;
                        $scope.InactiveWallpaperShow = false;
                        $scope.DeletedWallpaperShow = true;
                        $scope.FilterDeletedWallpaperList = [];
                        for (var i in $scope.ContentMetadata) {
                            if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                                if ($scope.SelectedSearchContentBy == 71) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 72) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 113) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                            if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 114) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].genre_name != null) {
                                            if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 115) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].subgenre_name != null) {
                                            if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 116) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].mood_name != null) {
                                            if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 117) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].language_name != null) {
                                            if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 118) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].festival_name != null) {
                                            if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 119) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].religion_name != null) {
                                            if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 120) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                            if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else if ($scope.SelectedSearchContentBy == 121) {
                                    if (!$scope.SearchContent || $scope.SearchContent == "") {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                    else {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                            if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                            }
                                        }
                                    }
                                }
                                else {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                            }
                        }
                    }
                }
            }
        }
        else {
            $scope.PendingWallpaperShow = false;
            $scope.InProgressShow = false;
            $scope.ModerateWallpaperShow = false;
            $scope.PublishedWallpaperShow = false;
            $scope.RejectedWallpaperShow = false;
            $scope.InactiveWallpaperShow = false;
            $scope.DeletedWallpaperShow = false;
        }
    }

});

myApp.controller('content-catalog-listingCtrl', function ($scope, $http, $upload, $routeParams, ngProgress) {
    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#contentcateloglist').addClass('active');
    $('#contentcatelog').addClass('active');

    $scope.filesdetail = [];
    $scope.contentid = "";
    $scope.contenttitle = "";
    $scope.propertytitle = "";
    $scope.SelectedContentType = 0;
    $scope.Submitbuttonvisible = true;
    $scope.FileUploadVisible = true;
    $scope.FileNames = [];
    $scope.Filesuggestion = "";
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');
    var post_request = $http({
        method: "Post",
        url: 'contentcatalog/GetContentCatalogListData',
        data: { 'CM_ID': $routeParams.id },
        async: false,
        headers: { 'Content-Type': 'application/json' }
    });
    post_request.success(function (datas) {
        for (var i in datas.ContentData) {
            $scope.SelectedContentType = angular.copy(datas.ContentData[0].cm_content_type);
            if ($scope.SelectedContentType == 8) {
                $scope.Filesuggestion = "Filename must be ContentId_WidthxHeight.extension like [2345_240x360.gif].";
            }
            else if ($scope.SelectedContentType == 9) {
                $scope.Filesuggestion = "Filename must be ContentId_WidthxHeight.extension like [2345_240x360.mp4].";
            }
            else if ($scope.SelectedContentType == 10) {
                $scope.Filesuggestion = " Filename must be ContentId_Bitrate.extension like [2345_128.mp3].";
            }
            $scope.contentid = angular.copy(datas.ContentData[0].cm_id);
            $scope.contenttitle = angular.copy(datas.ContentData[0].cm_display_title);
            $scope.propertytitle = angular.copy(datas.ContentData[0].propertyname);
        }
        $scope.filesdetail = angular.copy(datas.ContentFileData);
        if ($scope.filesdetail.length > 0) {
            $scope.filesdetaildata = [];
            for (var i in $scope.filesdetail) {
                $scope.filesdetaildata.push({ filename: $scope.filesdetail[i].cf_url.substring($scope.filesdetail[i].cf_url.lastIndexOf("/") + 1).toLowerCase(), cf_absolute_url: $scope.filesdetail[i].cf_absolute_url, cf_cm_id: $scope.filesdetail[i].cf_cm_id, cf_id: $scope.filesdetail[i].cf_id, cf_original_processed: $scope.filesdetail[i].cf_original_processed, cf_template_id: $scope.filesdetail[i].cf_template_id, cf_url: $scope.filesdetail[i].cf_url, cf_url_base: $scope.filesdetail[i].cf_url_base, cm_id: $scope.filesdetail[i].cm_id, cm_thumb_url: $scope.filesdetail[i].cm_thumb_url, ct_group_id: $scope.filesdetail[i].ct_group_id, height: $scope.filesdetail[i].height, width: $scope.filesdetail[i].width });
                $scope.FileNames.push($scope.filesdetail[i].cf_url.substring($scope.filesdetail[i].cf_url.lastIndexOf("/") + 1).toLowerCase());
            }
            $scope.filesdetail = BindMasterList($scope.filesdetaildata, 5);
            $scope.FileUploadVisible = datas.IsEdit;
        }
        else {
            $scope.FileUploadVisible = false;
        }
        //$scope.filesdetail = $scope.filesdetaildata;


    });
    post_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });


    $scope.uploadPhysicalFile = function (files) {
        $scope.errorvisible = false;
        $scope.InvalidDimension = false;
        $scope.FileUrls = [];
        if ($scope.SelectedContentType != 0) {
            if ($scope.SelectedContentType == 8) {
                // wallpaper
                if (files) {
                    if (files.length > 0) {
                        try {
                            imageloop(0);
                            function imageloop(cnt) {
                                var i = cnt;
                                if (files[i].type) {
                                    if ($scope.FileNames.indexOf(files[i].name.toLowerCase()) > -1) {
                                        flag = true;
                                        cnt = cnt + 1;
                                        if (cnt == files.length) {
                                            $scope.UploadFiles = files;
                                        }
                                        else {
                                            imageloop(cnt);
                                        }
                                    }
                                    else {
                                        $scope.InvalidDimension = true;
                                        $scope.InvalidDimensionError = "Filename does not match any files.";
                                    }
                                }
                            }
                        }
                        catch (err) {
                            $scope.InvalidDimension = true;
                            $scope.InvalidDimensionError = "Invalid Image Format.";
                        }
                    }
                }
            }
            else if ($scope.SelectedContentType == 9) {
                // video

                if (files) {
                    if (files.length > 0) {
                        try {
                            imageloop(0);
                            function imageloop(cnt) {
                                var i = cnt;
                                if (files[i].type) {
                                    if ($scope.FileNames.indexOf(files[i].name.toLowerCase()) > -1) {
                                        flag = true;
                                        cnt = cnt + 1;
                                        if (cnt == files.length) {
                                            $scope.UploadFiles = files;
                                        }
                                        else {
                                            imageloop(cnt);
                                        }
                                    }
                                    else {
                                        $scope.InvalidDimension = true;
                                        $scope.InvalidDimensionError = "Filename does not match any files.";
                                    }
                                }
                            }
                        }
                        catch (err) {
                            $scope.InvalidDimension = true;
                            $scope.InvalidDimensionError = "Invalid Video Format.";
                        }
                    }
                }

            }
            else if ($scope.SelectedContentType == 10) {
                if (files) {
                    if (files.length > 0) {
                        try {
                            audioloop(0);
                            function audioloop(cnt) {
                                var i = cnt;
                                if (files[i].type) {
                                    if ($scope.FileNames.indexOf(files[i].name.toLowerCase()) > -1) {
                                        flag = true;
                                        cnt = cnt + 1;
                                        if (cnt == files.length) {
                                            $scope.UploadFiles = files;
                                        }
                                        else {
                                            audioloop(cnt);
                                        }
                                    }
                                    else {
                                        $scope.InvalidDimension = true;
                                        $scope.InvalidDimensionError = "Filename does not match any files.";
                                    }
                                }
                            }
                        }
                        catch (err) {
                            $scope.InvalidDimension = true;
                            $scope.InvalidDimensionError = "Invalid Video Format.";
                        }
                    }
                }
            }
            else if ($scope.SelectedContentType == 11) {
                // games
            }
        }
        else {
            $scope.error = "Please Select Content Type for File Upload.";
        }
    };

    function UploadImageFiles(files) {
        if (files.length > 0) {
            $scope.Submitbuttonvisible = false;
            var filearray = [];
            ngProgress.start();
            return FileUpload(0);
            function FileUpload(cnt) {
                var i = cnt;
                $upload.upload({
                    url: '/UploadSingleImageFile',
                    method: 'POST',
                    data: { MetadataId: $routeParams.id },
                    file: files[i]
                })
                .progress(function (evt) {
                })
                .success(function (data, status, headers, config) {
                    if (data.success) {
                        cnt = cnt + 1;
                        if (cnt != files.length) {
                            FileUpload(cnt);
                        }
                        else {
                            $scope.successvisible = true;
                            $scope.success = "Record updated successfully."
                            $scope.errorvisible = false;
                            $scope.InvalidDimension = false;
                            $scope.InvalidDimensionError = "";
                            $scope.error = "";
                            $("#physicalFile").val("");
                            ngProgress.complete();
                            $scope.Submitbuttonvisible = true;
                        }
                    }
                    else {
                        $scope.errorvisible = true;
                        $scope.error = "Error In File Upload";
                        ngProgress.complete();
                        $scope.Submitbuttonvisible = true;
                    }
                })
                .error(function (data, status, headers, config) {
                    if (data != undefined) {
                        $scope.errorvisible = true;
                        $scope.error = data;
                    }
                    ngProgress.complete();
                    $scope.Submitbuttonvisible = true;
                });
            }
        }
    }

    function UploadVideoFiles(files) {
        if (files.length > 0) {
            $scope.Submitbuttonvisible = false;
            var filearray = [];
            ngProgress.start();
            return FileUpload(0);
            function FileUpload(cnt) {
                var i = cnt;
                $upload.upload({
                    url: '/UploadSingleVideoFile',
                    method: 'POST',
                    data: { MetadataId: $routeParams.id },
                    file: files[i]
                })
                .progress(function (evt) {
                })
                .success(function (data, status, headers, config) {
                    if (data.success) {

                        cnt = cnt + 1;
                        if (cnt != files.length) {
                            FileUpload(cnt);
                        }
                        else {
                            $scope.successvisible = true;
                            $scope.success = "Record updated successfully."
                            $scope.errorvisible = false;
                            $scope.InvalidDimension = false;
                            $scope.InvalidDimensionError = "";
                            $scope.error = "";
                            $("#physicalFile").val("");
                            ngProgress.complete();
                            $scope.Submitbuttonvisible = true;
                        }

                    }
                    else {
                        $scope.errorvisible = true;
                        $scope.error = "Error In File Upload";
                        ngProgress.complete();
                        $scope.Submitbuttonvisible = true;
                    }
                })
                .error(function (data, status, headers, config) {
                    if (data != undefined) {
                        $scope.errorvisible = true;
                        $scope.error = data;
                    }
                    ngProgress.complete();
                    $scope.Submitbuttonvisible = true;
                });
            }
        }
    }

    function UploadAudioFiles(files) {
        if (files.length > 0) {
            $scope.Submitbuttonvisible = false;
            var filearray = [];
            ngProgress.start();
            return FileUpload(0);
            function FileUpload(cnt) {
                var i = cnt;
                $upload.upload({
                    url: '/UploadSingleAudioFile',
                    method: 'POST',
                    data: { MetadataId: $routeParams.id },
                    file: files[i]
                })
                .progress(function (evt) {
                })
                .success(function (data, status, headers, config) {
                    if (data.success) {

                        cnt = cnt + 1;
                        if (cnt != files.length) {
                            FileUpload(cnt);
                        }
                        else {
                            $scope.successvisible = true;
                            $scope.success = "Record updated successfully."
                            $scope.errorvisible = false;
                            $scope.InvalidDimension = false;
                            $scope.InvalidDimensionError = "";
                            $scope.error = "";
                            $("#physicalFile").val("");
                            ngProgress.complete();
                            $scope.Submitbuttonvisible = true;
                        }

                    }
                    else {
                        $scope.errorvisible = true;
                        $scope.error = "Error In File Upload";
                        ngProgress.complete();
                        $scope.Submitbuttonvisible = true;
                    }
                })
                .error(function (data, status, headers, config) {
                    if (data != undefined) {
                        $scope.errorvisible = true;
                        $scope.error = data;
                    }
                    ngProgress.complete();
                    $scope.Submitbuttonvisible = true;
                });
            }
        }
    }

    $scope.UploadMetadata = function () {
        $scope.errorvisible = false;
        $scope.successvisible = false;
        if ($scope.SelectedContentType != 0) {
            if (!$scope.InvalidDimension) {
                //call here
                if ($scope.SelectedContentType == 8) {
                    UploadImageFiles($scope.UploadFiles);
                }
                else if ($scope.SelectedContentType == 9) {
                    UploadVideoFiles($scope.UploadFiles);
                }
                else if ($scope.SelectedContentType == 10) {
                    UploadAudioFiles($scope.UploadFiles);
                }
                else {
                    $scope.errorvisible = true;
                    $scope.error = "games & texts file not allowed";
                }
            }
            else {
                $scope.errorvisible = true;
                $scope.error = $scope.InvalidDimensionError;
            }
        }
        else {
            $scope.errorvisible = true;
            $scope.error = "Please Select ContentType";
        }
    }
});

myApp.controller('property-content-list-Ctrl', function ($scope, $http, $routeParams, $window, ngProgress) {

    $scope.base_url = site_base_path;
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#addeditcontentcatelog').addClass('active');
    $('#contentcatelog').addClass('active');

    $scope.errorvisible = false;
    $scope.error;

    $scope.ContentStatus = [];
    //$scope.Vendor = [];
    $scope.Vendor = [];
    $scope.Property = [];
    $scope.UserRole = "";
    $scope.Type = [];
    $scope.SearchContentBy = [];

    $scope.ContentMetadata = [];
    $scope.IsEditPermission = false;

    $scope.PendingWallpaperShow = false;
    $scope.InProgressShow = false;
    $scope.ModerateWallpaperShow = false;
    $scope.PublishedWallpaperShow = false;
    $scope.RejectedWallpaperShow = false;
    $scope.InactiveWallpaperShow = false;
    $scope.DeletedWallpaperShow = false;

    $scope.FilterPendingWallpaperList = [];
    $scope.FilterInProgressList = [];
    $scope.FilterDeletedWallpaperList = [];
    $scope.FilterRejectWallpaperList = [];
    $scope.FilterPublishedWallpaperList = [];
    $scope.FilterInActiveWallpaperList = [];
    $scope.FilterModerateWallpaperList = [];


    $scope.ContentMetadataList = [];

    $scope.SelectedContentStatus = 0;
    $scope.SelectedVendor = 0;
    $scope.SelectedType = 0;
    $scope.SelectedSearchContentBy = 0;
    $scope.SelectedPublishReject = 3;
    $scope.SelectedUniqueId = "";
    $scope.SearchContent = "";
    $scope.SelectedPublishArray = [];

    //Pending wallpaper pagging
    $scope.PendingcurrentPage = 0;
    $scope.PendingpageSize = 50;
    //Inprocess wallpaper pagging
    $scope.InprocesscurrentPage = 0;
    $scope.InprocesspageSize = 50;
    //Moderate wallpaper pagging
    $scope.ModeratecurrentPage = 0;
    $scope.ModeratepageSize = 50;
    //Published wallpaper pagging
    $scope.PublishedcurrentPage = 0;
    $scope.PublishedpageSize = 50;
    //Rejected wallpaper pagging
    $scope.RejectedcurrentPage = 0;
    $scope.RejectedpageSize = 50;
    //Inactive wallpaper pagging
    $scope.InactivecurrentPage = 0;
    $scope.InactivepageSize = 50;
    //Deleted wallpaper pagging
    $scope.DeletedcurrentPage = 0;
    $scope.DeletedpageSize = 50;

    $scope.Validation = false;


    function ButtonColor(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {

        var status = "chartreuse";
        var flag = false;
        if (cm_state == 7 || cm_state == 5) {
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            status = "red";
                            flag = true;
                        }
                    }
                    else {
                        status = "red";
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            status = "red";
                            flag = true;
                        }
                    }
                    else {
                        status = "red";
                        flag = true;
                    }
                }
            }
        }
        if (flag) {
            return status;
        }
        else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
            return "red";
        }
        else {
            return status;
        }
    }
    function IsEditVisible(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {
        if (UserRole == "Content Manager") {
            var flag = false;
            if (cm_state == 7 || cm_state == 5) {
            }
            else {
                for (var k in Vendors) {
                    if (Vendors[k].vd_id == cm_vendor) {
                        if (Vendors[k].vd_is_active == 1) {
                            if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                                flag = true;
                            }
                        }
                        else {
                            flag = true;
                        }
                    }
                }
                for (var k in Property) {
                    if (Property[k].cm_id == cm_property_id) {
                        if (Property[k].cm_is_active == 1) {
                            if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                                flag = true;
                            }
                        }
                        else {
                            flag = true;
                        }
                    }
                }
            }
            if (flag) {
                return !flag;
            }
            else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
                return true;
            }
            else {
                return false;
            }
        }
        else {
            return true;
        }
    }
    function GetStatus(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {

        var status = "green";
        var flag = false;
        if (cm_state == 7 || cm_state == 5) {
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            status = "Vendor Expired";
                            flag = true;
                        }
                    }
                    else {
                        status = "Vendor Blocked";
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            status = "Property Expired";
                            flag = true;
                        }
                    }
                    else {
                        status = "Property Blocked";
                        flag = true;
                    }
                }
            }
        }
        if (flag) {
            return status;
        }
        else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
            return "Metadata Expired";
        }
        else {
            return status;
        }
    }
    function GetState(UserRole, Vendors, Property, Metadataexpirydate, cm_state, cm_vendor, cm_property_id) {
        var status = cm_state;
        var flag = false;
        if (cm_state == 6 || cm_state == 7 || cm_state == 5) {
            return cm_state;
        }
        else {
            for (var k in Vendors) {
                if (Vendors[k].vd_id == cm_vendor) {
                    if (Vendors[k].vd_is_active == 1) {
                        if (Datewithouttime(Vendors[k].vd_end_on) < Datewithouttime(new Date())) {
                            cm_state = 6;
                            flag = true;
                        }
                    }
                    else {
                        cm_state = 6;
                        flag = true;
                    }
                }
            }
            for (var k in Property) {
                if (Property[k].cm_id == cm_property_id) {
                    if (Property[k].cm_is_active == 1) {
                        if (Datewithouttime(Property[k].cm_expires_on) < Datewithouttime(new Date())) {
                            cm_state = 6;
                            flag = true;
                        }
                    }
                    else {
                        cm_state = 6;
                        flag = true;
                    }
                }
            }
            if (status == 6 && !flag) {
            }
            else if (Datewithouttime(Metadataexpirydate) < Datewithouttime(new Date())) {
                cm_state = 6;
            }
            return cm_state;
        }


    }
    function GetContentData(data, Vendors, Property, UserRole) {
        var NewArray = [];
        for (var i in data) {
            var val = {
                celebrity_cd_id: data[i].celebrity_cd_id,
                celebrity_cd_name: data[i].celebrity_cd_name,
                celebrity_cmd_id: data[i].celebrity_cmd_id,
                celebrity_group: data[i].celebrity_group,
                cm_celebrity: data[i].cm_celebrity,
                cm_comment: data[i].cm_comment,
                cm_content_duration: data[i].cm_content_duration,
                cm_content_quality: data[i].cm_content_quality,
                cm_content_type: data[i].cm_content_type,
                cm_cp_content_id: data[i].cm_cp_content_id,
                cm_created_by: data[i].cm_created_by,
                cm_created_on: data[i].cm_created_on,
                cm_display_title: data[i].cm_display_title,
                cm_expires_on: setDate(data[i].cm_expires_on),
                cm_festival_occasion: data[i].cm_festival_occasion,
                cm_genre: data[i].cm_genre,
                cm_id: data[i].cm_id,
                cm_instruments: data[i].cm_instruments,
                cm_is_active: data[i].cm_is_active,
                cm_is_app_store_purchase: data[i].cm_is_app_store_purchase,
                cm_key_words: data[i].cm_key_words,
                cm_language: data[i].cm_language,
                cm_location: data[i].cm_location,
                cm_long_description: data[i].cm_long_description,
                cm_mode: data[i].cm_mode,
                cm_modified_by: data[i].cm_modified_by,
                cm_modified_on: setDate(data[i].cm_modified_on),
                cm_mood: data[i].cm_mood,
                cm_music_director: data[i].cm_music_director,
                cm_nudity: data[i].cm_nudity,
                cm_parental_advisory: data[i].cm_parental_advisory,
                cm_property_id: data[i].cm_property_id,
                cm_protographer: data[i].cm_protographer,
                cm_r_group_id: data[i].cm_r_group_id,
                cm_raag_tal: data[i].cm_raag_tal,
                cm_rank: data[i].cm_rank,
                cm_release_year: data[i].cm_release_year,
                cm_religion: data[i].cm_religion,
                cm_short_desc: data[i].cm_short_desc,
                cm_signature: data[i].cm_signature,
                cm_singer: data[i].cm_singer,
                cm_starts_from: setDate(data[i].cm_starts_from),
                cm_sub_content_type: data[i].cm_sub_content_type,
                cm_sub_genre: data[i].cm_sub_genre,
                cm_thumb_url: data[i].cm_thumb_url,
                cm_title: data[i].cm_title,
                cm_vendor: data[i].cm_vendor,
                festival_id: data[i].festival_id,
                festival_name: data[i].festival_name,
                genre_id: data[i].genre_id,
                genre_name: data[i].genre_name,
                instruments_cd_id: data[i].instruments_cd_id,
                instruments_cd_name: data[i].instruments_cd_name,
                instruments_cmd_id: data[i].instruments_cmd_id,
                instruments_group: data[i].instruments_group,
                language_id: data[i].language_id,
                language_name: data[i].language_name,
                mood_id: data[i].mood_id,
                mood_name: data[i].mood_name,
                propertyId: data[i].propertyId,
                propertydisplayname: data[i].propertydisplayname,
                propertyname: data[i].propertyname,
                raagtaal_cd_id: data[i].raagtaal_cd_id,
                raagtaal_cd_name: data[i].raagtaal_cd_name,
                raagtaal_cmd_id: data[i].raagtaal_cmd_id,
                raagtaal_group: data[i].raagtaal_group,
                religion_id: data[i].religion_id,
                religion_name: data[i].religion_name,
                subgenre_id: data[i].subgenre_id,
                subgenre_name: data[i].subgenre_name,
                cm_state: GetState(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id),
                buttoncolor: ButtonColor(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id),
                status: GetStatus(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id),
                IsEditVisible: IsEditVisible(UserRole, Vendors, Property, data[i].cm_expires_on, data[i].cm_state, data[i].cm_vendor, data[i].cm_property_id)
            }
            NewArray.push(val);
        }
        //console.log(NewArray);
        return NewArray;
    }
    var get_request = $http({
        method: "Post",
        url: 'contentcatalog/GetContentCatalogDataForSelectedProperty',
        data: { 'propertyID': $routeParams.id },
        headers: { 'Content-Type': 'application/json' }
    });
    get_request.success(function (datas) {
        $scope.IsEditPermission = datas.IsEdit;

        $scope.ContentStatus.unshift({ cd_id: 0, cd_name: "Select Status" });
        $scope.Type.unshift({ cd_id: 0, cd_name: "Select Type" });
        for (var i in datas.Catalogdata) {
            if (datas.Catalogdata[i].cd_cm_id == 1) {
                $scope.ContentStatus.push(datas.Catalogdata[i]);
            }
            if (datas.Catalogdata[i].cd_cm_id == 2) {
                $scope.Type.push(datas.Catalogdata[i]);
            }
            if (datas.Catalogdata[i].cd_cm_id == 19) {
                $scope.SearchContentBy.push(datas.Catalogdata[i]);
            }
        }
        $scope.UserRole = datas.UserRole;
        $scope.Vendor = angular.copy(datas.VendorData);
        $scope.Property = angular.copy(datas.PropertyData);
        $scope.ContentMetadata = GetContentData(angular.copy(datas.ContentMetadata), $scope.Vendor, $scope.Property, datas.UserRole);



        $scope.SelectedContentStatus = 0;
        $scope.SelectedType = 0;

        //bind the data in grid on load event
        selectedProperty_content_change();

        $scope.bullseyeColor = function (id) {
            for (var i in $scope.ContentMetadata) {
                if ($scope.ContentMetadata[i].cm_id == id) {
                    if (Datewithouttime($scope.ContentMetadata[i].cm_expires_on) < Datewithouttime(new Date())) {
                        return "red";
                    } return "chartreuse";
                }
            }
        }


        //$scope.Vendor = angular.copy(datas.VendorData);
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.ContentStatusChange = function () {
        $scope.Validation = false;
        selectedProperty_content_change();
    }

    $scope.TypeChange = function () {
        $scope.Validation = false;
        selectedProperty_content_change();
    }

    $scope.EditWallpaper = function (id) {
        for (var i in $scope.ContentMetadata) {
            if ($scope.ContentMetadata[i].cm_id == id) {
                if ($scope.ContentMetadata[i].cm_content_type == 8) {
                    $window.location.href = "#editwallpaper/" + id;
                }
                if ($scope.ContentMetadata[i].cm_content_type == 9) {
                    $window.location.href = "#editvideo/" + id;
                }
                if ($scope.ContentMetadata[i].cm_content_type == 10) {
                    $window.location.href = "#editaudio/" + id;
                }
                if ($scope.ContentMetadata[i].cm_content_type == 11) {
                    $window.location.href = "#editapps-games/" + id;
                }
            }
        }
    }

    $scope.SaveWallpaper = function (id) {
        $scope.Validation = false;
        if ($scope.PendingWallpaperShow) {
            for (var i in $scope.PendingWallpaperList) {
                if ($scope.PendingWallpaperList[i].UniqueId == id) {
                    if ($scope.PendingWallpaperList[i].ContentTitle != "") {
                        if ($scope.PendingWallpaperList[i].ProperyTitle != "") {
                            if ($scope.PendingWallpaperList[i].AddedOn != "") {
                                $scope.PendingWallpaperList[i].IsEditable = false;
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
        if ($scope.PublishedWallpaperShow) {
            for (var i in $scope.PublishedWallpaperList) {
                if ($scope.PublishedWallpaperList[i].UniqueId == id) {
                    if ($scope.PublishedWallpaperList[i].ContentTitle != "") {
                        if ($scope.PublishedWallpaperList[i].ProperyTitle != "") {
                            if ($scope.PublishedWallpaperList[i].AddedOn != "") {
                                $scope.PublishedWallpaperList[i].IsEditable = false;
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
        if ($scope.ModerateWallpaperShow) {
            for (var i in $scope.ModerateWallpaperList) {
                if ($scope.ModerateWallpaperList[i].UniqueId == id) {
                    if ($scope.ModerateWallpaperList[i].ContentTitle != "") {
                        if ($scope.ModerateWallpaperList[i].ProperyTitle != "") {
                            if ($scope.ModerateWallpaperList[i].AddedOn != "") {
                                $scope.ModerateWallpaperList[i].IsEditable = false;
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
        if ($scope.InactiveWallpaperShow) {
            for (var i in $scope.InActiveWallpaperList) {
                if ($scope.InActiveWallpaperList[i].UniqueId == id) {
                    if ($scope.InActiveWallpaperList[i].ContentTitle != "") {
                        if ($scope.InActiveWallpaperList[i].ProperyTitle != "") {
                            if ($scope.InActiveWallpaperList[i].ExpiredOn != "") {
                                if (new Date($scope.InActiveWallpaperList[i].ExpiredOn) > new Date()) {
                                    $scope.InActiveWallpaperList[i].IsEditable = false;
                                }
                            }
                            else {
                                $scope.Validation = true;
                            }
                        }
                        else {
                            $scope.Validation = true;
                        }
                    }
                    else {
                        $scope.Validation = true;
                    }
                }
            }
        }
    }

    $scope.DeleteWallpaper = function (id) {
        //ngProgress.start();
        if (confirm("Are you sure want to delete this Content?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/Deletecontentcatalog',
                data: { 'cm_id': id },
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Delete") {
                    if ($scope.SelectedContentStatus == 1) {
                        for (var i in $scope.FilterPendingWallpaperList) {
                            if ($scope.FilterPendingWallpaperList[i].cm_id == id) {
                                $scope.FilterPendingWallpaperList.splice(i, 1);
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 3) {
                        for (var i in $scope.FilterModerateWallpaperList) {
                            if ($scope.FilterModerateWallpaperList[i].cm_id == id) {
                                $scope.FilterModerateWallpaperList.splice(i, 1);
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 4) {
                        for (var i in $scope.FilterPublishedWallpaperList) {
                            if ($scope.FilterPublishedWallpaperList[i].cm_id == id) {
                                $scope.FilterPublishedWallpaperList.splice(i, 1);
                            }
                        }
                    }
                    else if ($scope.SelectedContentStatus == 6) {
                        for (var i in $scope.FilterInActiveWallpaperList) {
                            if ($scope.FilterInActiveWallpaperList[i].cm_id == id) {
                                $scope.FilterInActiveWallpaperList.splice(i, 1);
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_id == id) {
                            $scope.ContentMetadata[i].cm_state = 7;
                            $scope.ContentMetadata[i].cm_modified_by = datas.Modify_By;
                            $scope.ContentMetadata[i].cm_modified_on = setDate(datas.Modify_On);
                        }
                    }
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }

    $scope.bullseyeClick = function (id) {
        if ($scope.InactiveWallpaperShow) {
            for (var i in $scope.FilterInActiveWallpaperList) {
                if ($scope.FilterInActiveWallpaperList[i].cm_id == id) {
                    if ($scope.FilterInActiveWallpaperList[i].buttoncolor != "red") {
                        //if (new Date($scope.FilterInActiveWallpaperList[i].cm_expires_on) > new Date()) {
                        if (confirm("Are you sure want to reactive this Content?")) {
                            var get_request = $http({
                                method: "Post",
                                url: 'contentcatalog/InactiveWallpaper',
                                data: { "cm_id": id },
                                headers: { 'Content-Type': 'application/json' }
                            });
                            get_request.success(function (datas) {
                                if (datas.Result == "Inactive Wallpaper") {
                                    for (var i in $scope.FilterInActiveWallpaperList) {
                                        if ($scope.FilterInActiveWallpaperList[i].cm_id == id) {
                                            $scope.FilterInActiveWallpaperList.splice(i, 1);
                                        }
                                    }

                                    for (var i in $scope.ContentMetadata) {
                                        if ($scope.ContentMetadata[i].cm_id == id) {
                                            $scope.ContentMetadata[i].cm_state = 4;
                                            //if ($scope.ContentMetadata[i].cm_is_active == 1) {
                                            //   // $scope.ContentMetadata[i].cm_is_active = 0;
                                            //}
                                            //else {
                                            //   // $scope.ContentMetadata[i].cm_is_active = 1;
                                            //}
                                        }
                                    }
                                }
                            });
                            get_request.error(function (datas, status, headers, config) {
                                if (datas != undefined) {
                                    //ngProgress.complete();
                                    $scope.errorvisible = true;
                                    $scope.error = datas.substring(1, datas.length - 1);
                                }
                            });
                        }
                    }
                    else {
                        //alert("Metadata already expired.")
                    }
                }
            }
        }
    }

    $scope.BlockWallpaper = function (id) {
        if (confirm("Are you sure want to block this Content?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/BlockWallpaper',
                data: { "cm_id": id },
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Publish") {
                    for (var i in $scope.FilterPublishedWallpaperList) {
                        if ($scope.FilterPublishedWallpaperList[i].cm_id == id) {
                            $scope.FilterPublishedWallpaperList.splice(i, 1);
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_id == id) {
                            $scope.ContentMetadata[i].cm_state = 6;
                            $scope.ContentMetadata[i].buttoncolor = ButtonColor($scope.UserRole, $scope.Vendor, $scope.Property, $scope.ContentMetadata[i].cm_expires_on, $scope.ContentMetadata[i].cm_state, $scope.ContentMetadata[i].cm_vendor, $scope.ContentMetadata[i].cm_property_id);
                            $scope.ContentMetadata[i].status = GetStatus($scope.UserRole, $scope.Vendor, $scope.Property, $scope.ContentMetadata[i].cm_expires_on, data[i].cm_state, $scope.ContentMetadata[i].cm_vendor, $scope.ContentMetadata[i].cm_property_id);
                            $scope.ContentMetadata[i].IsEditVisible = IsEditVisible($scope.UserRole, $scope.Vendor, $scope.Property, $scope.ContentMetadata[i].cm_expires_on, $scope.ContentMetadata[i].cm_state, $scope.ContentMetadata[i].cm_vendor, $scope.ContentMetadata[i].cm_property_id);
                        }
                    }
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }

    $scope.CuurentPageArray = [];
    $scope.PublishModerateList = function () {
        var begin = ($scope.ModeratecurrentPage * $scope.ModeratepageSize), end = begin + $scope.ModeratepageSize;
        $scope.CuurentPageArray = $scope.FilterModerateWallpaperList.slice(begin, end);
        if (confirm("Are you sure want to publish all Contents?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/PublishAllModerator',
                data: $scope.CuurentPageArray,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Moderate") {
                    for (var i in $scope.CuurentPageArray) {
                        for (var j in $scope.FilterModerateWallpaperList) {
                            if ($scope.CuurentPageArray[i].cm_id == $scope.FilterModerateWallpaperList[j].cm_id) {
                                $scope.FilterModerateWallpaperList.splice(j, 1);
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        for (var j in $scope.CuurentPageArray) {
                            if ($scope.ContentMetadata[i].cm_id == $scope.CuurentPageArray[j].cm_id) {
                                $scope.ContentMetadata[i].cm_state = 4;
                            }
                        }

                    }
                    //$scope.FilterModerateWallpaperList = [];
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }

    }

    $scope.downloadFile = function (id) {

        //var get_request = $http({
        //    method: "GET",
        //    url: 'downloadFile/getDownloadedFile',
        //    data: { 'cm_id': id },
        //    headers: { 'Content-Type': 'application/json' }
        //});

        //get_request.success(function (data, status, headers, config) {
        //    var element = angular.element('<a/>');
        //    element.attr({
        //        href: 'data:attachment/text;charset=utf-8,' + encodeURI(data),
        //        target: '_self',
        //        download: '3_1280x720.gif'
        //    })[0].click();
        //});

        //get_request.error(function (data, status, headers, config) {

        //});
    }
    $scope.PublishAllList = function () {
        if (confirm("Are you sure want to publish all Contents?")) {
            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/PublishAllModerator',
                data: $scope.FilterModerateWallpaperList,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Moderate") {
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == 3) {
                            $scope.ContentMetadata[i].cm_state = 4;
                        }
                    }
                    $scope.FilterModerateWallpaperList = [];
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
    }

    $scope.ResetList = function () {
        for (var i in $scope.FilterModerateWallpaperList) {
            $scope.FilterModerateWallpaperList[i].SelectedPublishReject = 3;
            //$scope.SubmitEnable = false;
            $scope.SelectedPublishArray = [];
            $scope.newArray = [];
        }
    }

    $scope.newArray = [];
    $scope.PublishRejectChange = function (id, selected) {
        //$scope.SubmitEnable = true;
        if ($scope.SelectedPublishArray.length > 0) {
            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_id == id) {
                    if (parseInt(selected) == 3) {
                        $scope.SelectedPublishArray.splice(i, 1);
                    }
                    else {
                        $scope.SelectedPublishArray[i].cm_state = parseInt(selected);
                    }
                }
                else {
                    if ($scope.newArray.indexOf(id) == -1) {
                        $scope.newArray.push(id);
                        $scope.SelectedPublishArray.push({ 'cm_id': id, 'cm_state': parseInt(selected), 'Comment': null });
                    }
                }
            }
        }
        else {
            $scope.newArray.push(id);
            $scope.SelectedPublishArray.push({ 'cm_id': id, 'cm_state': parseInt(selected) });
        }
    }
    $scope.CommentTextValue = "";
    $scope.CommentPopUpShow = false;

    $scope.SubmitModerateList = function () {
        //if ($scope.SubmitEnable == true) {
        var flag = true
        if ($scope.SelectedPublishArray.length > 0) {
            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_state == 5) {
                    $scope.CommentPopUpShow = true;
                    flag = false;
                }
            }
            if (flag) {
                if (confirm("Are you sure want to submit all changes?")) {
                    var get_request = $http({
                        method: "Post",
                        url: 'contentcatalog/SubmitModerator',
                        data: $scope.SelectedPublishArray,
                        headers: { 'Content-Type': 'application/json' }
                    });
                    get_request.success(function (datas) {
                        if (datas.Result == "Update Moderate") {
                            for (var i in $scope.FilterModerateWallpaperList) {
                                for (var j in $scope.SelectedPublishArray) {
                                    if ($scope.SelectedPublishArray[j].cm_state != 3) {
                                        if ($scope.FilterModerateWallpaperList[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                            $scope.FilterModerateWallpaperList.splice(i, 1);
                                        }
                                    }
                                }
                            }

                            for (var i in $scope.ContentMetadata) {
                                for (var j in $scope.SelectedPublishArray) {
                                    if ($scope.ContentMetadata[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                        if ($scope.SelectedPublishArray[j].cm_state == 4) {
                                            $scope.ContentMetadata[i].cm_state = 4;
                                        }
                                        if ($scope.SelectedPublishArray[j].cm_state == 5) {
                                            $scope.ContentMetadata[i].cm_state = 5;
                                        }
                                    }
                                }
                            }
                            $scope.SelectedPublishArray = [];
                            $scope.newArray = [];
                        }
                    });
                    get_request.error(function (datas, status, headers, config) {
                        if (datas != undefined) {
                            //ngProgress.complete();
                            $scope.errorvisible = true;
                            $scope.error = datas.substring(1, datas.length - 1);
                        }
                    });
                }
            }
        }

        //}
        //}
        //else {
        //    if (confirm("Are you sure want to submit all changes?")) {

        //    }
        //}
    }

    $scope.SaveComment = function () {
        $scope.CommentPopUpShow = false;

        if (confirm("Are you sure want to submit all changes?")) {

            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_state == 5) {
                    if ($scope.CommentTextValue != "") {
                        $scope.SelectedPublishArray[i].Comment = $scope.CommentTextValue;
                    }
                    else {
                        $scope.SelectedPublishArray[i].Comment = null;
                    }
                }
            }

            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/SubmitModerator',
                data: $scope.SelectedPublishArray,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                if (datas.Result == "Update Moderate") {
                    for (var i in $scope.FilterModerateWallpaperList) {
                        for (var j in $scope.SelectedPublishArray) {
                            if ($scope.SelectedPublishArray[j].cm_state != 3) {
                                if ($scope.FilterModerateWallpaperList[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                    $scope.FilterModerateWallpaperList.splice(i, 1);
                                }
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        for (var j in $scope.SelectedPublishArray) {
                            if ($scope.ContentMetadata[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                if ($scope.SelectedPublishArray[j].cm_state == 4) {
                                    $scope.ContentMetadata[i].cm_state = 4;
                                }
                                if ($scope.SelectedPublishArray[j].cm_state == 5) {
                                    $scope.ContentMetadata[i].cm_state = 5;
                                    $scope.ContentMetadata[i].cm_comment = $scope.CommentTextValue;;
                                }
                            }
                        }
                    }
                    $scope.SelectedPublishArray = [];
                    $scope.newArray = [];
                    $scope.CommentTextValue = "";
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.errorvisible = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
        else {
            $scope.CommentTextValue = "";
        }
    }

    $scope.CloseComment = function () {
        $scope.CommentPopUpShow = false;
        $scope.CommentTextValue = "";
    }

    $scope.ModeratorPrevClick = function () {
        if ($scope.SelectedPublishArray.length > 0) {
            if (confirm("Are you Sure Want to go Prev page?")) {
                $scope.ModeratecurrentPage = $scope.ModeratecurrentPage - 1;
                $scope.SelectedPublishArray = [];
                $scope.newArray = [];
            }
        }
        else {
            $scope.ModeratecurrentPage = $scope.ModeratecurrentPage - 1;
        }
    }

    $scope.ModeratorNextClick = function () {
        if ($scope.SelectedPublishArray.length > 0) {
            if (confirm("Are you Sure Want to go Next page?")) {
                $scope.ModeratecurrentPage = $scope.ModeratecurrentPage + 1;
                $scope.SelectedPublishArray = [];
                $scope.newArray = [];
            }
        }
        else {
            $scope.ModeratecurrentPage = $scope.ModeratecurrentPage + 1;
        }
    }

    //Search By Content Title
    $scope.FilterContent = function (data) {
        selectedProperty_content_change();
    }

    $scope.getSelectedType = function () {
        var type = '';
        $scope.Type.forEach(function (data) {
            if (data.cd_id == $scope.SelectedType && $scope.SelectedType != 0) {
                type = data.cd_name;
            }
        });
        return (type) ? type : '';
    }

    $scope.exportCUPWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterPendingWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterPendingWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportCUPWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'fileUploadPending' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportInPWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterInProgressList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterInProgressList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportInPWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'inProcess' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportRTMWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 189) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterModerateWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterModerateWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportRTMWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'readyToModerate' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportPubWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterPublishedWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterPublishedWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportPubWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'published' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportRejWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterRejectWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterRejectWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportRejWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'rejected' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportInaWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterInActiveWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterInActiveWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportInaWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'inactive' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    $scope.exportDelWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        if ($scope.SelectedSearchContentBy == 71) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 72) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.propertyname.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 113) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.celebrity_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 114) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.genre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 115) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.subgenre_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 116) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.mood_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 117) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.language_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 118) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.festival_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 119) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.religion_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 120) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.instruments_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else if ($scope.SelectedSearchContentBy == 121) {
            $scope.FilterDeletedWallpaperList.forEach(function (data) {
                if (data.raagtaal_cd_name.toString().toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                    contentCatalogExport.push(data);
                }
            });
        }
        else {
            contentCatalogExport = $scope.FilterDeletedWallpaperList;
        }
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportDelWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'deleted' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
            }
        });
    }

    function selectedProperty_content_change() {
        if ($scope.SelectedContentStatus != 0) {
            if ($scope.SelectedType != 0) {
                if ($scope.SelectedContentStatus == 1) {
                    $scope.PendingWallpaperShow = true;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterPendingWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 2) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = true;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterInProgressList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 3) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = true;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterModerateWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterModerateWallpaperList.push({
                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                    "SelectedPublishReject": 3,
                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                });
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 4) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = true;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterPublishedWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 5) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = true;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterRejectWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 6) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = true;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterInActiveWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = true;
                    $scope.FilterDeletedWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_content_type == $scope.SelectedType && $scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
            }
            else {
                if ($scope.SelectedContentStatus == 1) {
                    $scope.PendingWallpaperShow = true;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterPendingWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterPendingWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 2) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = true;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterInProgressList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterInProgressList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 3) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = true;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterModerateWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterModerateWallpaperList.push({
                                            "cm_id": $scope.ContentMetadata[i].cm_id,
                                            "cm_title": $scope.ContentMetadata[i].cm_title,
                                            "propertyname": $scope.ContentMetadata[i].propertyname,
                                            "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                            "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                            "SelectedPublishReject": 3,
                                            "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                        });
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterModerateWallpaperList.push({
                                        "cm_id": $scope.ContentMetadata[i].cm_id,
                                        "cm_title": $scope.ContentMetadata[i].cm_title,
                                        "propertyname": $scope.ContentMetadata[i].propertyname,
                                        "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                        "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                        "SelectedPublishReject": 3,
                                        "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                    });
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterModerateWallpaperList.push({
                                                "cm_id": $scope.ContentMetadata[i].cm_id,
                                                "cm_title": $scope.ContentMetadata[i].cm_title,
                                                "propertyname": $scope.ContentMetadata[i].propertyname,
                                                "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                                "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                                "SelectedPublishReject": 3,
                                                "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                            });
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterModerateWallpaperList.push({
                                    "cm_id": $scope.ContentMetadata[i].cm_id,
                                    "cm_title": $scope.ContentMetadata[i].cm_title,
                                    "propertyname": $scope.ContentMetadata[i].propertyname,
                                    "cm_starts_from": $scope.ContentMetadata[i].cm_starts_from,
                                    "cm_thumb_url": $scope.ContentMetadata[i].cm_thumb_url,
                                    "SelectedPublishReject": 3,
                                    "PublishArray": [{ id: 3, Name: "Select One" }, { id: 4, Name: "Publish" }, { id: 5, Name: "Rest All" }]
                                });
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 4) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = true;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterPublishedWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterPublishedWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 5) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = true;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterRejectWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterRejectWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else if ($scope.SelectedContentStatus == 6) {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = true;
                    $scope.DeletedWallpaperShow = false;
                    $scope.FilterInActiveWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterInActiveWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
                else {
                    $scope.PendingWallpaperShow = false;
                    $scope.InProgressShow = false;
                    $scope.ModerateWallpaperShow = false;
                    $scope.PublishedWallpaperShow = false;
                    $scope.RejectedWallpaperShow = false;
                    $scope.InactiveWallpaperShow = false;
                    $scope.DeletedWallpaperShow = true;
                    $scope.FilterDeletedWallpaperList = [];
                    for (var i in $scope.ContentMetadata) {
                        if ($scope.ContentMetadata[i].cm_state == $scope.SelectedContentStatus) {
                            if ($scope.SelectedSearchContentBy == 71) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].cm_title.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 72) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].propertyname.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                        $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 113) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].celebrity_cd_name != null) {
                                        if ($scope.ContentMetadata[i].celebrity_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 114) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].genre_name != null) {
                                        if ($scope.ContentMetadata[i].genre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 115) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].subgenre_name != null) {
                                        if ($scope.ContentMetadata[i].subgenre_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 116) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].mood_name != null) {
                                        if ($scope.ContentMetadata[i].mood_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 117) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].language_name != null) {
                                        if ($scope.ContentMetadata[i].language_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 118) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].festival_name != null) {
                                        if ($scope.ContentMetadata[i].festival_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 119) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].religion_name != null) {
                                        if ($scope.ContentMetadata[i].religion_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 120) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].instruments_cd_name != null) {
                                        if ($scope.ContentMetadata[i].instruments_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else if ($scope.SelectedSearchContentBy == 121) {
                                if (!$scope.SearchContent || $scope.SearchContent == "") {
                                    $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                }
                                else {
                                    if ($scope.ContentMetadata[i].raagtaal_cd_name != null) {
                                        if ($scope.ContentMetadata[i].raagtaal_cd_name.toLowerCase().indexOf($scope.SearchContent.toLowerCase()) !== -1) {
                                            $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                $scope.FilterDeletedWallpaperList.push($scope.ContentMetadata[i]);
                            }
                        }
                    }
                }
            }
        }
        else {
            $scope.PendingWallpaperShow = false;
            $scope.InProgressShow = false;
            $scope.ModerateWallpaperShow = false;
            $scope.PublishedWallpaperShow = false;
            $scope.RejectedWallpaperShow = false;
            $scope.InactiveWallpaperShow = false;
            $scope.DeletedWallpaperShow = false;
        }
    }

});

myApp.controller('change-passwordCtrl', function ($scope, $http, ngProgress) {
    $('.removeActiveClass').removeClass('active');
    $('.removeSubactiveClass').removeClass('active');
    $('#changepassword').addClass('active');
    $scope.base_url = site_base_path;
    $scope.OldPassword = "";
    $scope.NewPassword = "";
    $scope.ConfirmPassword = "";
    $scope.ConfirmPasswordValidation = false;
    $scope.OldPasswordValidation = false;
    $scope.errorvisible = false;
    $scope.successvisible = false;
    $scope.error = "";
    $scope.success = "";
    ngProgress.color('yellowgreen');
    ngProgress.height('3px');

    $scope.SaveChangedPassword = function () {
        $scope.ConfirmPasswordValidation = false;
        $scope.OldPasswordValidation = false;
        $scope.errorvisible = false;
        $scope.SaveUserData = false;
        $scope.error = "";

        if ($scope.OldPassword != "") {
            if ($scope.NewPassword != "") {
                if ($scope.ConfirmPassword != "") {
                    if ($scope.NewPassword == $scope.ConfirmPassword) {
                        ngProgress.start();
                        var datas = {
                            "oldpassword": $scope.OldPassword,
                            "newpassword": $scope.NewPassword
                        };

                        var post_request = $http({
                            method: "Post",
                            url: 'changepassword/UpdatePassword',
                            data: datas,
                            headers: { 'Content-Type': 'application/json' }
                        });
                        post_request.success(function (data) {
                            ngProgress.complete();
                            if (data.Result == "Success") {
                                $scope.OldPassword = "";
                                $scope.NewPassword = "";
                                $scope.ConfirmPassword = "";
                                $scope.successvisible = true;
                                $scope.success = "Password Changed Successfully.";
                            }
                            if (data.Result == "OldpasswordError") {
                                $scope.OldPasswordValidation = true;
                            }
                        });
                        post_request.error(function (data, status, headers, config) {
                            if (data != undefined) {
                                $scope.errorvisible = true;
                                $scope.error = data.substring(1, data.length - 1);
                            }
                            ngProgress.complete();

                        });
                    }
                    else {
                        $scope.ConfirmPasswordValidation = true;
                    }
                }
            }
        }
    };
});

myApp.controller('admin-logCtrl', function ($scope, $http, ngProgress) {
    $('.removeActiveClass').removeClass('active');
    $('#adminlog').addClass('active');
    $scope.adminlogcurrentPage = 0;
    $scope.adminlogpageSize = 50;
    $scope.AdminLogs = [];

    function GetAdminLogs(data) {
        for (var i in data) {
            data[i].ald_created_on = getDate(data[i].ald_created_on) + " " + getTime(data[i].ald_created_on);
            data[i].ald_modified_on = getDate(data[i].ald_modified_on) + " " + getTime(data[i].ald_modified_on);
        }
        return data;
    }

    var get_request = $http({
        method: "Get",
        url: 'adminlog/GetAdminLogData',
        headers: { 'Content-Type': 'application/json' }
    });

    get_request.success(function (datas) {
        ////console.log(datas);
        $scope.AdminLogs = GetAdminLogs(datas.AdminLogs);
    });
    get_request.error(function (datas, status, headers, config) {
        if (datas != undefined) {
            $scope.errorvisible = true;
            $scope.error = datas.substring(1, datas.length - 1);
        }
    });

    $scope.exportAdminLogs = function (tableId) {
        //var exportHref = Excel.tableToExcel(tableId, 'Vendor Info');
        //$timeout(function () { location.href = exportHref; }, 100);
        var AdminLogsExport = [];
        $scope.AdminLogs.forEach(function (data) {
            AdminLogsExport.push(data);
        });
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportAdminExcel',
            data: { AdminLogsExport: AdminLogsExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'AdminLogs.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.errorvisible = true;
                ////// ////console.log(data);
            }
        });
    }
});

myApp.filter('startFrom', function () {
    return function (input, start) {
        if (!input || !input.length) { return; }
        start = +start; //parse to int
        return input.slice(start);
    }
});

function getDate(val) {
    var d = new Date(val);
    var dt = d.getDate();
    var month = d.getMonth() + 1;
    var year = d.getFullYear();
    var selectdate = Pad("0", month, 2) + '-' + Pad("0", dt, 2) + '-' + year;
    return selectdate;
}

function getTime(val) {
    var d = new Date(val);
    var minite = d.getMinutes();
    var hour = d.getHours();
    var second = d.getSeconds();
    var selectdate = Pad("0", hour, 2) + ':' + Pad("0 ", minite, 2) + ':' + Pad("0", second, 2);
    return selectdate;
}

function validateEmail(email) {
    var re = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
    return re.test(email);
}

//Directive for datepicker
myApp.directive('uiDate', function () {
    return {
        require: '?ngModel',
        link: function ($scope, element, attrs, controller) {
            var originalRender, updateModel, usersOnSelectHandler;
            if ($scope.uiDate == null) $scope.uiDate = {};
            if (controller != null) {
                updateModel = function (value, picker) {
                    return $scope.$apply(function () {
                        return controller.$setViewValue(element.datepicker("getDate"));
                    });
                };
                if ($scope.uiDate.onSelect != null) {
                    usersOnSelectHandler = $scope.uiDate.onSelect;
                    $scope.uiDate.onSelect = function (value, picker) {
                        updateModel(value);
                        return usersOnSelectHandler(value, picker);
                    };
                } else {
                    $scope.uiDate.onSelect = updateModel;
                }
                originalRender = controller.$render;
                controller.$render = function () {
                    originalRender();
                    return element.datepicker("setDate", controller.$viewValue);
                };
            }
            return element.datepicker($scope.uiDate);
        }
    };
});

function BindMasterList(data, colLength) {
    var result = [],
          row;
    if (typeof (colLength) === 'undefined') colLength = 3;
    for (var i = 0, j = data.length; i < j; i++) {
        if (i % colLength === 0) {
            if (row) {
                result.push(row);
            }
            row = [];
        }
        row.push(data[i]);
    }

    if (row) {
        result.push(row);
    }

    return result;

};

myApp.directive('hiddenRepeat', function ($parse) {
    return {
        restrict: 'EA',
        replace: true,
        scope: {
            eventHandler: '&ngClick'
        },
        link: function (scope, elem, attr) {
            var data = $parse(attr.hiddenRepeat)(scope);
            var count = 1;
            if (data) {
                for (var j = 0; j < data.length; j++) {
                    var str = '<tr>';
                    for (var i = 0; i < data[j].length; i++) {
                        str += '<td>' + count + '</td> <td><a href="#/masterlist-edit/' + data[j][i].id + '">' + data[j][i].displaytitle + '</a></td> <td><span class="ti-trash"></span></td>';
                        count++;
                    }
                    str += '</tr>"';
                    elem.append(str);
                }
            }
        }
    };
});

myApp.directive('bkAutoFocus', ['$timeout', '$parse', function ($timeout, $parse) {
    return {
        restrict: 'AC',
        link: function ($scope, $element, $attrs) {

            $timeout(function () {
                $element[0].focus();
            }, 100, false);

        }
    };
}])

myApp.directive('contentlistingRepeat', function ($parse) {
    return {
        restrict: 'EA',
        replace: true,
        scope: {
            eventHandler: '&ngClick'
        },
        link: function (scope, elem, attr) {
            var data = $parse(attr.hiddenRepeat)(scope);
            var count = 1;
            if (data) {
                for (var j = 0; j < data.length; j++) {
                    var str = '<tr>';
                    for (var i = 0; i < data[j].length; i++) {

                        //str += '<td>' + count + '</td> <td><a href="#/masterlist-edit/' + data[j][i].id + '">' + data[j][i].displaytitle + '</a></td> <td><span class="ti-trash"></span></td>';
                        //count++;
                    }
                    str += '</tr>"';
                    elem.append(str);
                }
            }
        }
    };
});

function setDate(val) {
    var d = new Date(val);
    var date = d.getDate();
    var month = d.getMonth() + 1;
    var year = d.getFullYear();
    var selectdate;
    if (month == 1) {
        selectdate = date + '-Jan-' + year;
    } else if (month == 2) {
        selectdate = date + '-Feb-' + year;
    } else if (month == 3) {
        selectdate = date + '-Mar-' + year;
    } else if (month == 4) {
        selectdate = date + '-Apr-' + year;
    } else if (month == 5) {
        selectdate = date + '-May-' + year;
    } else if (month == 6) {
        selectdate = date + '-Jun-' + year;
    } else if (month == 7) {
        selectdate = date + '-Jul-' + year;
    } else if (month == 8) {
        selectdate = date + '-Aug-' + year;
    } else if (month == 9) {
        selectdate = date + '-Sep-' + year;
    } else if (month == 10) {
        selectdate = date + '-Oct-' + year;
    } else if (month == 11) {
        selectdate = date + '-Nov-' + year;
    } else if (month == 12) {
        selectdate = date + '-Dec-' + year;
    }
    return selectdate;
}

function Pad(padString, value, length) {
    var str = value.toString();
    while (str.length < length)
        str = padString + str;

    return str;
}

myApp.factory('Excel', function ($window) {
    var uri = 'data:application/vnd.ms-excel;base64,',
                template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>',
                base64 = function (s) { return $window.btoa(unescape(encodeURIComponent(s))); },
                format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) };
    return {
        tableToExcel: function (tableId, worksheetName) {
            var table = $(tableId),
                        ctx = { worksheet: worksheetName, table: table.html() },
                        href = uri + base64(format(template, ctx));
            return href;
        }
    };
})

function CheckNull(value) {
    if (value == null) {
        return 0;
    }
        // else if()
    else {
        return value;
    }
}
